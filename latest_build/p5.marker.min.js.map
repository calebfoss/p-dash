{"mappings":"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","sources":["src/utils/caseConvert.js","src/utils/p5Modifiers.js","src/methods/3d_methods.js","src/methods/color_methods.js","src/properties/data_props.js","src/methods/data_methods.js","src/methods/collide_methods.js","src/properties/constants.js","src/interpreter/lexer.js","src/interpreter/parser.js","src/interpreter/interpreter.js","src/elements/beyond_canvas_elements.js","src/properties/math_props.js","src/methods/math_methods.js","src/properties/event_props.js","src/properties/transform_props.js","src/methods/transform_methods.js","src/core.js","src/properties/canvas_props.js","src/methods/canvas_methods.js","src/properties/environment_props.js","src/elements/canvas_elements.js","src/methods/shape_methods.js","src/properties/color_props.js","src/properties/shape_props.js","src/elements/2d_shape_elements.js","src/modules/environment.js","src/elements/color_elements.js","src/modules/structure.js","src/modules/dom.js","src/modules/rendering.js","src/modules/events.js","src/modules/io.js","src/elements/image_elements.js","src/properties/3d_props.js","src/properties/typography_props.js","src/elements/typography_elements.js","src/elements/3d_shape_elements.js","src/elements/3d_light_elements.js","src/index.js"],"sourcesContent":["//  regex\nconst upperCaseChar = /([A-Z])/g;\nconst upperCaseCharAfterFirst = /(?<!^)[A-Z]/g;\n\n//  js string replace 2nd param\nconst prependMatch = (char) => char + \"$&\";\n\n//  casing converters\nexport const camelToKebab = (camelStr) =>\n  camelStr.replace(upperCaseCharAfterFirst, prependMatch(\"-\")).toLowerCase();\n\nexport const camelToSnake = (camelStr) =>\n  camelStr.replace(upperCaseCharAfterFirst, prependMatch(\"_\")).toLowerCase();\n\nexport const kebabToCamel = (kebabStr) =>\n  kebabStr.replace(/-./g, (s) => s[1].toUpperCase());\n\nexport const pascalToCamel = (pascalStr) =>\n  pascalStr.slice(0, 1).toLowerCase() + pascalStr.slice(1);\n\nexport const pascalToKebab = (pascalStr) =>\n  pascalToCamel(pascalStr).replaceAll(\n    upperCaseChar,\n    (c) => \"-\" + c.toLowerCase()\n  );\n\nexport const pascalToSnake = (pascalStr) =>\n  pascalToCamel(pascalStr).replaceAll(\n    upperCaseChar,\n    (c) => \"_\" + c.toLowerCase()\n  );\n\nexport const snakeToCamel = (snakeStr) =>\n  snakeStr\n    .split(\"_\")\n    .map((s, i) => (i > 0 ? s.slice(0, 1).toUpperCase() + s.slice(1) : s))\n    .join(\"\");\n","import { camelToSnake } from \"./caseConvert\";\r\n\r\nexport function defineProperties(obj) {\r\n  for (const p in obj) {\r\n    p5.prototype[p] = {};\r\n  }\r\n  Object.defineProperties(p5.prototype, obj);\r\n}\r\n\r\nexport const wrapMethod = (methodName, wrapper) =>\r\n  (p5.prototype[methodName] = wrapper(p5.prototype[methodName]));\r\n\r\nexport const defineSnakeAlias = (...propNames) =>\r\n  propNames.forEach(\r\n    (propName) =>\r\n      (p5.prototype[camelToSnake(propName)] = p5.prototype[propName])\r\n  );\r\n\r\nexport const defineRendererGetterSetters = (...methodNames) =>\r\n  methodNames.forEach((methodName) =>\r\n    defineProperties({\r\n      [camelToSnake(methodName)]: {\r\n        get: function () {\r\n          return this._renderer?.[`_${methodName}`];\r\n        },\r\n        set: function (val) {\r\n          if (Array.isArray(val)) this[methodName](...val);\r\n          else this[methodName](val);\r\n        },\r\n      },\r\n    })\r\n  );\r\n","export const addWebGLMethods = (baseClass) =>\n  class extends baseClass {\n    /**\n     * Creates a new <a href=\"#/p5.Camera\">p5.Camera</a> object and sets it\n     * as the current (active) camera.\n     *\n     * The new camera is initialized with a default position\n     * (see camera property)\n     * and a default perspective projection\n     * (see <a href=\"#/p5.Camera/perspective\">perspective()</a>).\n     * Its properties can be controlled with the <a href=\"#/p5.Camera\">p5.Camera</a>\n     * methods.\n     *\n     * Note: Every 3D sketch starts with a default camera initialized.\n     * This camera can be controlled with the canvas properties\n     * camera,\n     * perspective, ortho,\n     * and frustum if it is the only camera\n     * in the scene.\n     * @method create_camera\n     * @return {p5.Camera} The newly created camera object.\n     */\n    create_camera() {\n      this.pInst.createCamera();\n    }\n    /**\n     * Creates a new <a href=\"#/p5.Shader\">p5.Shader</a> object\n     * from the provided vertex and fragment shader code.\n     *\n     * Note, shaders can only be used in WEBGL mode.\n     * @method create_shader\n     * @param {String} vertSrc source code for the vertex shader\n     * @param {String} fragSrc source code for the fragment shader\n     * @returns {p5.Shader} a shader object created from the provided\n     */\n    create_shader() {\n      this.pInst.createShader(...arguments);\n    }\n  };\n","export const addColorMethods = (baseClass) =>\n  class extends baseClass {\n    lerp_color() {\n      return this.pInst.lerpColor(...arguments);\n    }\n  };\n","export const addStorage = (baseClass) =>\n  class extends baseClass {\n    /**\n     * The storage property allows data to be saved in local storage on\n     * the device displaying the sketch. This data will remain until the\n     * user clears local storage, so you can use this to remember something\n     * between uses, such as the high score of a game.\n     *\n     * To store something, simply add a custom property to storage:\n     * ```xml\n     * <_ storage.my_property=\"123\" />\n     * ```\n     * Any element can reference that property.\n     * ```xml\n     * <square x=\"storage.my_property\" />\n     * ```\n     * To clear the storage, call the clear method on storage.\n     * ```xml\n     * <_ _=\"storage.clear()\" />\n     * ```\n     * To remove a property, call the remove method and pass in the name\n     * of the property as a string.\n     * ```xml\n     * <_ _=\"storage.remove('my_property')\" />\n     * ```\n     * @type {Proxy}\n     */\n    get storage() {\n      return new Proxy(this.pInst, {\n        get(target, prop) {\n          if (prop === \"clear\") return target.clearStorage;\n          if (prop === \"remove\") return target.removeItem;\n          return target.getItem(prop);\n        },\n        set(target, prop, val) {\n          target.storeItem(prop, val);\n          return true;\n        },\n      });\n    }\n  };\n","export const addDataMethods = (baseClass) =>\n  class extends baseClass {\n    /**\n     *\n     * Creates a new instance of p5.StringDict using the key-value pair\n     * or the object you provide.\n     *\n     * @method create_string_dict\n     * @param {String} key\n     * @param {String} value\n     * @returns {p5.StringDict}\n     * @method create_string_dict\n     * @param {Object} object - key-value pairs\n     * @return {p5.StringDict}\n     */\n    create_string_dict() {\n      return this.pInst.createStringDict(...arguments);\n    }\n    /**\n     *\n     * Creates a new instance of <a href=\"#/p5.NumberDict\">p5.NumberDict</a> using the key-value pair\n     * or object you provide.\n     *\n     * @method create_number_dict\n     * @param {Number} key\n     * @param {Number} value\n     * @return {p5.NumberDict}\n     *\n     */\n    /**\n     * @method create_number_dict\n     * @param {Object} object - key-value pairs\n     * @return {p5.NumberDict}\n     */\n    create_number_dict() {\n      return this.pInst.createNumberDict(...arguments);\n    }\n  };\n","/*\nThese methods are adapted from:\nRepo: https://github.com/bmoren/p5.collide2D/\nCreated by http://benmoren.com\nSome functions and code modified version from http://www.jeffreythompson.org/collision-detection\nVersion v0.7.3 | June 22, 2020\nCC BY-NC-SA 4.0\n*/\nclass Collide {\n  static collider_type = {\n    point: \"point\",\n    circle: \"circle\",\n    ellipse: \"ellipse\",\n    rect: \"rect\",\n    line: \"line\",\n    arc: \"arc\",\n    triangle: \"triangle\",\n    poly: \"poly\",\n  };\n  #debug = false;\n  #element;\n  constructor(element) {\n    this.#element = element;\n  }\n  get #pInst() {\n    return this.#element.pInst;\n  }\n  get debug() {\n    return this.#debug;\n  }\n  set debug(val) {\n    this.#debug = val;\n  }\n  elements(elementA, elementB) {\n    const { collider: colliderA } = elementA;\n    const { collider: colliderB } = elementB;\n    const argsA = elementA.collision_args;\n    const argsB = elementB.collision_args;\n    const fnNameForward = `${colliderA}_${colliderB}`;\n    if (fnNameForward in this) return this[fnNameForward](...argsA, ...argsB);\n    const fnNameBackward = `${colliderB}_${colliderA}`;\n    if (fnNameBackward in this) return this[fnNameBackward](...argsB, ...argsA);\n    console.warn(\n      `Collision check between ${colliderA} and ${colliderB} has not been implemented`\n    );\n    return false;\n  }\n\n  /*~++~+~+~++~+~++~++~+~+~ 2D ~+~+~++~+~++~+~+~+~+~+~+~+~+~+~+*/\n\n  rect_rect(x, y, w, h, x2, y2, w2, h2) {\n    //2d\n    //add in a thing to detect rectMode CENTER\n    if (\n      x + w >= x2 && // r1 right edge past r2 left\n      x <= x2 + w2 && // r1 left edge past r2 right\n      y + h >= y2 && // r1 top edge past r2 bottom\n      y <= y2 + h2\n    ) {\n      // r1 bottom edge past r2 top\n      return true;\n    }\n    return false;\n  }\n\n  // p5.vector version of collideRectRect\n  rect_rect_vector(p1, sz, p2, sz2) {\n    return this.rect_rect(p1.x, p1.y, sz.x, sz.y, p2.x, p2.y, sz2.x, sz2.y);\n  }\n\n  rect_circle(rx, ry, rw, rh, cx, cy, diameter) {\n    //2d\n    // temporary variables to set edges for testing\n    var testX = cx;\n    var testY = cy;\n\n    // which edge is closest?\n    if (cx < rx) {\n      testX = rx; // left edge\n    } else if (cx > rx + rw) {\n      testX = rx + rw;\n    } // right edge\n\n    if (cy < ry) {\n      testY = ry; // top edge\n    } else if (cy > ry + rh) {\n      testY = ry + rh;\n    } // bottom edge\n\n    // // get distance from closest edges\n    var distance = this.#pInst.dist(cx, cy, testX, testY);\n\n    // if the distance is less than the radius, collision!\n    if (distance <= diameter / 2) {\n      return true;\n    }\n    return false;\n  }\n\n  // p5.vector version of collideRectCircle\n  rect_circle_vector(r, sz, c, diameter) {\n    return this.rect_circle(r.x, r.y, sz.x, sz.y, c.x, c.y, diameter);\n  }\n\n  circle_circle(x, y, d, x2, y2, d2) {\n    //2d\n    if (this.#pInst.dist(x, y, x2, y2) <= d / 2 + d2 / 2) {\n      return true;\n    }\n    return false;\n  }\n\n  // p5.vector version of collideCircleCircle\n  circle_circle_vector(p1, d, p2, d2) {\n    return this.circle_circle(p1.x, p1.y, d, p2.x, p2.y, d2);\n  }\n\n  point_circle(x, y, cx, cy, d) {\n    //2d\n    if (this.#pInst.dist(x, y, cx, cy) <= d / 2) {\n      return true;\n    }\n    return false;\n  }\n\n  // p5.vector version of collidePointCircle\n  point_circle_vector(p, c, d) {\n    return this.point_circle(p.x, p.y, c.x, c.y, d);\n  }\n\n  point_ellipse(x, y, cx, cy, dx, dy) {\n    //2d\n    var rx = dx / 2,\n      ry = dy / 2;\n    // Discarding the points outside the bounding box\n    if (x > cx + rx || x < cx - rx || y > cy + ry || y < cy - ry) {\n      return false;\n    }\n    // Compare the point to its equivalent on the ellipse\n    var xx = x - cx,\n      yy = y - cy;\n    var eyy = (ry * this.#pInst.sqrt(this.#pInst.abs(rx * rx - xx * xx))) / rx;\n    return yy <= eyy && yy >= -eyy;\n  }\n\n  // p5.vector version of collidePointEllipse\n  point_ellipse_vector(p, c, d) {\n    return this.point_ellipse(p.x, p.y, c.x, c.y, d.x, d.y);\n  }\n\n  point_rect(pointX, pointY, x, y, xW, yW) {\n    //2d\n    if (\n      pointX >= x && // right of the left edge AND\n      pointX <= x + xW && // left of the right edge AND\n      pointY >= y && // below the top AND\n      pointY <= y + yW\n    ) {\n      // above the bottom\n      return true;\n    }\n    return false;\n  }\n\n  // p5.vector version of collidePointRect\n  point_rect_vector(point, p1, sz) {\n    return this.point_rect(point.x, point.y, p1.x, p1.y, sz.x, sz.y);\n  }\n  //  TODO - Accommodate lines with higher stroke_weight\n  point_line(px, py, x1, y1, x2, y2, buffer) {\n    // get distance from the point to the two ends of the line\n    var d1 = this.#pInst.dist(px, py, x1, y1);\n    var d2 = this.#pInst.dist(px, py, x2, y2);\n\n    // get the length of the line\n    var lineLen = this.#pInst.dist(x1, y1, x2, y2);\n\n    // since floats are so minutely accurate, add a little buffer zone that will give collision\n    if (buffer === undefined) {\n      buffer = 0.1;\n    } // higher # = less accurate\n\n    // if the two distances are equal to the line's length, the point is on the line!\n    // note we use the buffer here to give a range, rather than one #\n    if (d1 + d2 >= lineLen - buffer && d1 + d2 <= lineLen + buffer) {\n      return true;\n    }\n    return false;\n  }\n\n  // p5.vector version of collidePointLine\n  point_line_vector(point, p1, p2, buffer) {\n    return this.point_line(point.x, point.y, p1.x, p1.y, p2.x, p2.y, buffer);\n  }\n\n  line_circle(x1, y1, x2, y2, cx, cy, diameter) {\n    // is either end INSIDE the circle?\n    // if so, return true immediately\n    var inside1 = this.point_circle(x1, y1, cx, cy, diameter);\n    var inside2 = this.point_circle(x2, y2, cx, cy, diameter);\n    if (inside1 || inside2) return true;\n\n    // get length of the line\n    var distX = x1 - x2;\n    var distY = y1 - y2;\n    var len = this.#pInst.sqrt(distX * distX + distY * distY);\n\n    // get dot product of the line and circle\n    var dot =\n      ((cx - x1) * (x2 - x1) + (cy - y1) * (y2 - y1)) / this.#pInst.pow(len, 2);\n\n    // find the closest point on the line\n    var closestX = x1 + dot * (x2 - x1);\n    var closestY = y1 + dot * (y2 - y1);\n\n    // is this point actually on the line segment?\n    // if so keep going, but if not, return false\n    var onSegment = this.point_line(closestX, closestY, x1, y1, x2, y2);\n    if (!onSegment) return false;\n\n    // draw a debug circle at the closest point on the line\n    if (this.#debug) {\n      this.#pInst.ellipse(closestX, closestY, 10, 10);\n    }\n\n    // get distance to closest point\n    distX = closestX - cx;\n    distY = closestY - cy;\n    var distance = this.#pInst.sqrt(distX * distX + distY * distY);\n\n    if (distance <= diameter / 2) {\n      return true;\n    }\n    return false;\n  }\n\n  // p5.vector version of collideLineCircle\n  line_circle_vector(p1, p2, c, diameter) {\n    return this.line_circle(p1.x, p1.y, p2.x, p2.y, c.x, c.y, diameter);\n  }\n  line_line(x1, y1, x2, y2, x3, y3, x4, y4, calcIntersection) {\n    var intersection;\n\n    // calculate the distance to intersection point\n    var uA =\n      ((x4 - x3) * (y1 - y3) - (y4 - y3) * (x1 - x3)) /\n      ((y4 - y3) * (x2 - x1) - (x4 - x3) * (y2 - y1));\n    var uB =\n      ((x2 - x1) * (y1 - y3) - (y2 - y1) * (x1 - x3)) /\n      ((y4 - y3) * (x2 - x1) - (x4 - x3) * (y2 - y1));\n\n    // if uA and uB are between 0-1, lines are colliding\n    if (uA >= 0 && uA <= 1 && uB >= 0 && uB <= 1) {\n      if (this.#debug || calcIntersection) {\n        // calc the point where the lines meet\n        var intersectionX = x1 + uA * (x2 - x1);\n        var intersectionY = y1 + uA * (y2 - y1);\n      }\n\n      if (this.#debug) {\n        this.#pInst.ellipse(intersectionX, intersectionY, 10, 10);\n      }\n\n      if (calcIntersection) {\n        intersection = {\n          x: intersectionX,\n          y: intersectionY,\n        };\n        return intersection;\n      } else {\n        return true;\n      }\n    }\n    if (calcIntersection) {\n      intersection = {\n        x: false,\n        y: false,\n      };\n      return intersection;\n    }\n    return false;\n  }\n\n  // p5.vector version of collideLineLine\n  line_line_vector(p1, p2, p3, p4, calcIntersection) {\n    return this.line_line(\n      p1.x,\n      p1.y,\n      p2.x,\n      p2.y,\n      p3.x,\n      p3.y,\n      p4.x,\n      p4.y,\n      calcIntersection\n    );\n  }\n\n  line_rect(x1, y1, x2, y2, rx, ry, rw, rh, calcIntersection) {\n    // check if the line has hit any of the rectangle's sides. uses the collideLineLine function above\n    var left, right, top, bottom, intersection;\n\n    if (calcIntersection) {\n      left = this.line_line(x1, y1, x2, y2, rx, ry, rx, ry + rh, true);\n      right = this.line_line(\n        x1,\n        y1,\n        x2,\n        y2,\n        rx + rw,\n        ry,\n        rx + rw,\n        ry + rh,\n        true\n      );\n      top = this.line_line(x1, y1, x2, y2, rx, ry, rx + rw, ry, true);\n      bottom = this.line_line(\n        x1,\n        y1,\n        x2,\n        y2,\n        rx,\n        ry + rh,\n        rx + rw,\n        ry + rh,\n        true\n      );\n      intersection = {\n        left: left,\n        right: right,\n        top: top,\n        bottom: bottom,\n      };\n    } else {\n      //return booleans\n      left = this.line_line(x1, y1, x2, y2, rx, ry, rx, ry + rh);\n      right = this.line_line(x1, y1, x2, y2, rx + rw, ry, rx + rw, ry + rh);\n      top = this.line_line(x1, y1, x2, y2, rx, ry, rx + rw, ry);\n      bottom = this.line_line(x1, y1, x2, y2, rx, ry + rh, rx + rw, ry + rh);\n    }\n\n    // if ANY of the above are true, the line has hit the rectangle\n    if (left || right || top || bottom) {\n      if (calcIntersection) {\n        return intersection;\n      }\n      return true;\n    }\n    return false;\n  }\n\n  // p5.vector version of collideLineRect\n  line_rect_vector(p1, p2, r, rsz, calcIntersection) {\n    return this.line_rect(\n      p1.x,\n      p1.y,\n      p2.x,\n      p2.y,\n      r.x,\n      r.y,\n      rsz.x,\n      rsz.y,\n      calcIntersection\n    );\n  }\n\n  point_poly(px, py, vertices) {\n    var collision = false;\n\n    // go through each of the vertices, plus the next vertex in the list\n    var next = 0;\n    for (var current = 0; current < vertices.length; current++) {\n      // get next vertex in list if we've hit the end, wrap around to 0\n      next = current + 1;\n      if (next === vertices.length) next = 0;\n\n      // get the PVectors at our current position this makes our if statement a little cleaner\n      var vc = vertices[current]; // c for \"current\"\n      var vn = vertices[next]; // n for \"next\"\n\n      // compare position, flip 'collision' variable back and forth\n      if (\n        ((vc.y >= py && vn.y < py) || (vc.y < py && vn.y >= py)) &&\n        px < ((vn.x - vc.x) * (py - vc.y)) / (vn.y - vc.y) + vc.x\n      ) {\n        collision = !collision;\n      }\n    }\n    return collision;\n  }\n\n  // p5.vector version of collidePointPoly\n  point_poly_vector(p1, vertices) {\n    return this.point_poly(p1.x, p1.y, vertices);\n  }\n\n  // POLYGON/CIRCLE\n  circle_poly(cx, cy, diameter, vertices, interior) {\n    if (interior === undefined) {\n      interior = false;\n    }\n\n    // go through each of the vertices, plus the next vertex in the list\n    var next = 0;\n    for (var current = 0; current < vertices.length; current++) {\n      // get next vertex in list if we've hit the end, wrap around to 0\n      next = current + 1;\n      if (next === vertices.length) next = 0;\n\n      // get the PVectors at our current position this makes our if statement a little cleaner\n      var vc = vertices[current]; // c for \"current\"\n      var vn = vertices[next]; // n for \"next\"\n\n      // check for collision between the circle and a line formed between the two vertices\n      var collision = this.line_circle(\n        vc.x,\n        vc.y,\n        vn.x,\n        vn.y,\n        cx,\n        cy,\n        diameter\n      );\n      if (collision) return true;\n    }\n\n    // test if the center of the circle is inside the polygon\n    if (interior === true) {\n      var centerInside = this.point_poly(cx, cy, vertices);\n      if (centerInside) return true;\n    }\n\n    // otherwise, after all that, return false\n    return false;\n  }\n\n  // p5.vector version of collideCirclePoly\n  circle_poly_vector(c, diameter, vertices, interior) {\n    return this.circle_poly(c.x, c.y, diameter, vertices, interior);\n  }\n\n  rect_poly(rx, ry, rw, rh, vertices, interior) {\n    if (interior == undefined) {\n      interior = false;\n    }\n\n    // go through each of the vertices, plus the next vertex in the list\n    var next = 0;\n    for (var current = 0; current < vertices.length; current++) {\n      // get next vertex in list if we've hit the end, wrap around to 0\n      next = current + 1;\n      if (next === vertices.length) next = 0;\n\n      // get the PVectors at our current position this makes our if statement a little cleaner\n      var vc = vertices[current]; // c for \"current\"\n      var vn = vertices[next]; // n for \"next\"\n\n      // check against all four sides of the rectangle\n      var collision = this.line_rect(vc.x, vc.y, vn.x, vn.y, rx, ry, rw, rh);\n      if (collision) return true;\n\n      // optional: test if the rectangle is INSIDE the polygon note that this iterates all sides of the polygon again, so only use this if you need to\n      if (interior === true) {\n        var inside = this.point_poly(rx, ry, vertices);\n        if (inside) return true;\n      }\n    }\n\n    return false;\n  }\n\n  // p5.vector version of collideRectPoly\n  rect_poly_vector(r, rsz, vertices, interior) {\n    return this.rect_poly(r.x, r.y, rsz.x, rsz.y, vertices, interior);\n  }\n\n  line_poly(x1, y1, x2, y2, vertices) {\n    // go through each of the vertices, plus the next vertex in the list\n    var next = 0;\n    for (var current = 0; current < vertices.length; current++) {\n      // get next vertex in list if we've hit the end, wrap around to 0\n      next = current + 1;\n      if (next === vertices.length) next = 0;\n\n      // get the PVectors at our current position extract X/Y coordinates from each\n      var x3 = vertices[current].x;\n      var y3 = vertices[current].y;\n      var x4 = vertices[next].x;\n      var y4 = vertices[next].y;\n\n      // do a Line/Line comparison if true, return 'true' immediately and stop testing (faster)\n      var hit = this.line_line(x1, y1, x2, y2, x3, y3, x4, y4);\n      if (hit) {\n        return true;\n      }\n    }\n    // never got a hit\n    return false;\n  }\n\n  // p5.vector version of collideLinePoly\n  line_poly_vector(p1, p2, vertice) {\n    return this.line_poly(p1.x, p1.y, p2.x, p2.y, vertice);\n  }\n\n  poly_poly(p1, p2, interior) {\n    if (interior === undefined) {\n      interior = false;\n    }\n\n    // go through each of the vertices, plus the next vertex in the list\n    var next = 0;\n    for (var current = 0; current < p1.length; current++) {\n      // get next vertex in list, if we've hit the end, wrap around to 0\n      next = current + 1;\n      if (next === p1.length) next = 0;\n\n      // get the PVectors at our current position this makes our if statement a little cleaner\n      var vc = p1[current]; // c for \"current\"\n      var vn = p1[next]; // n for \"next\"\n\n      //use these two points (a line) to compare to the other polygon's vertices using polyLine()\n      var collision = this.line_poly(vc.x, vc.y, vn.x, vn.y, p2);\n      if (collision) return true;\n\n      //check if the either polygon is INSIDE the other\n      if (interior === true) {\n        collision = this.point_poly(p2[0].x, p2[0].y, p1);\n        if (collision) return true;\n        collision = this.point_poly(p1[0].x, p1[0].y, p2);\n        if (collision) return true;\n      }\n    }\n\n    return false;\n  }\n\n  poly_poly_vector(p1, p2, interior) {\n    return this.poly_poly(p1, p2, interior);\n  }\n\n  point_triangle(px, py, x1, y1, x2, y2, x3, y3) {\n    // get the area of the triangle\n    var areaOrig = this.#pInst.abs(\n      (x2 - x1) * (y3 - y1) - (x3 - x1) * (y2 - y1)\n    );\n\n    // get the area of 3 triangles made between the point and the corners of the triangle\n    var area1 = this.#pInst.abs((x1 - px) * (y2 - py) - (x2 - px) * (y1 - py));\n    var area2 = this.#pInst.abs((x2 - px) * (y3 - py) - (x3 - px) * (y2 - py));\n    var area3 = this.#pInst.abs((x3 - px) * (y1 - py) - (x1 - px) * (y3 - py));\n\n    // if the sum of the three areas equals the original, we're inside the triangle!\n    if (area1 + area2 + area3 === areaOrig) {\n      return true;\n    }\n    return false;\n  }\n\n  // p5.vector version of collidePointTriangle\n  point_triangle_vector(p, p1, p2, p3) {\n    return this.point_triangle(p.x, p.y, p1.x, p1.y, p2.x, p2.y, p3.x, p3.y);\n  }\n\n  point_point(x, y, x2, y2, buffer) {\n    if (buffer === undefined) {\n      buffer = 0;\n    }\n\n    if (this.#pInst.dist(x, y, x2, y2) <= buffer) {\n      return true;\n    }\n\n    return false;\n  }\n\n  // p5.vector version of collidePointPoint\n  point_point_vector(p1, p2, buffer) {\n    return this.point_point(p1.x, p1.y, p2.x, p2.y, buffer);\n  }\n  //  TODO - accommodate arcs with unequal width and height\n  point_arc(px, py, ax, ay, arcRadius, arcHeading, arcAngle, buffer) {\n    if (buffer === undefined) {\n      buffer = 0;\n    }\n    // point\n    var point = this.#pInst.createVector(px, py);\n    // arc center point\n    var arcPos = this.#pInst.createVector(ax, ay);\n    // arc radius vector\n    var radius = this.#pInst.createVector(arcRadius, 0).rotate(arcHeading);\n\n    var pointToArc = point.copy().sub(arcPos);\n\n    if (point.dist(arcPos) <= arcRadius + buffer) {\n      var dot = radius.dot(pointToArc);\n      var angle = radius.angleBetween(pointToArc);\n      if (dot > 0 && angle <= arcAngle / 2 && angle >= -arcAngle / 2) {\n        return true;\n      }\n    }\n    return false;\n  }\n\n  // p5.vector version of collidePointArc\n  point_arc_vector(p1, a, arcRadius, arcHeading, arcAngle, buffer) {\n    return this.point_arc(\n      p1.x,\n      p1.y,\n      a.x,\n      a.y,\n      arcRadius,\n      arcHeading,\n      arcAngle,\n      buffer\n    );\n  }\n}\nexport const { collider_type } = Collide;\nexport const addCollide = (baseClass) =>\n  class extends baseClass {\n    /**\n     * The collide object provides collision detection methods for different\n     * shapes. These methods are adapted from\n     * <a href=\"https://github.com/bmoren\">Ben Moren's</a>\n     * <a href=\"https://github.com/bmoren/p5.collide2D\">Collide2D library</a>.\n     * These links are written how these methods would be called in Marker, and\n     * they link to the documentation for their corresponding Collide2D\n     * function, which has the same parameters:\n     * - <a href=\"https://github.com/bmoren/p5.collide2D#collidepointpoint\">\n     * collide.point_point()</a>\n     * - <a href=\"https://github.com/bmoren/p5.collide2D#collidepointcircle\">\n     * collide.point_circle()</a>\n     * - <a href=\"https://github.com/bmoren/p5.collide2D#collidepointellipse\">\n     * collide.point_ellipse()</a>\n     * - <a href=\"https://github.com/bmoren/p5.collide2D#collidepointrect\">\n     * collide.point_rect()</a>\n     * - <a href=\"https://github.com/bmoren/p5.collide2D#collidepointline\">\n     * collide.point_line()</a>\n     * - <a href=\"https://github.com/bmoren/p5.collide2D#collidepointarc\">\n     * collide.point_arc()</a>\n     * - <a href=\"https://github.com/bmoren/p5.collide2D#colliderectrect\">\n     * collide.rect_rect()</a>\n     * - <a href=\"https://github.com/bmoren/p5.collide2D#collidecirclecircle\">\n     * collide.circle_circle()</a>\n     * - <a href=\"https://github.com/bmoren/p5.collide2D#colliderectcircle\">\n     * collide.rect_circle()</a>\n     * - <a href=\"https://github.com/bmoren/p5.collide2D#collidelineline\">\n     * collide.line_line()</a>\n     * - <a href=\"https://github.com/bmoren/p5.collide2D#collidelinecircle\">\n     * collide.line_circle()</a>\n     * - <a href=\"https://github.com/bmoren/p5.collide2D#collidelinerect\">\n     * collide.line_rect()</a>\n     * - <a href=\"https://github.com/bmoren/p5.collide2D#collidepointpoly\">\n     * collide.point_poly()</a>\n     * - <a href=\"https://github.com/bmoren/p5.collide2D#collidecirclepoly\">\n     * collide.circle_poly()</a>\n     * - <a href=\"https://github.com/bmoren/p5.collide2D#colliderectpoly\">\n     * collide.rect_poly()</a>\n     * - <a href=\"https://github.com/bmoren/p5.collide2D#collidelinepoly\">\n     * collide.line_poly()</a>\n     *- <a href=\"https://github.com/bmoren/p5.collide2D#collidepolypoly\">\n     * collide.poly_poly()</a>\n     * - <a href=\"https://github.com/bmoren/p5.collide2D#collidepointtriangle\">\n     * collide.point_triangle()</a>\n     */\n    collide = new Collide(this);\n    /**\n     * Checks if this element is colliding with the provided other element.\n     * @method colliding_with\n     * @param {P5Element} el - other element to check\n     * @returns {boolean} true if elements are colliding\n     */\n    colliding_with(el) {\n      return this.collide.elements(this, el);\n    }\n  };\n","export const constants = {\r\n  NONE: \"none\",\r\n  CORNER: \"corner\",\r\n  CORNERS: \"corners\",\r\n  CENTER: \"center\",\r\n};\r\n","import { constants } from \"../properties/constants\";\n\nconst singleCharTokens = new Set(\"(),:?[]{}\");\nexport const tokenKind = {\n  number: \"number\",\n  property: \"property\",\n  member: \"member\",\n  boolean: \"boolean\",\n  additive: \"additive\",\n  multiplicative: \"multiplicative\",\n  not: \"not\",\n  comparison: \"comparison\",\n  equality: \"equality\",\n  string: \"string\",\n  constant: \"constant\",\n  logical: \"logical\",\n  until: \"until\",\n  end: \"end\",\n};\n\nconst token = (kind, start, end, value) => ({ kind, start, end, value });\nexport const endToken = token(tokenKind.end, -1, -1, \"END\");\n\nexport const lex = (str) => {\n  const getTokens = (start = 0, tokens = []) => {\n    if (start === str.length) return tokens;\n    const strFromStart = str.slice(start);\n\n    const leadingWhitespace = strFromStart.match(/^\\s+/);\n    if (leadingWhitespace) {\n      const end = start + leadingWhitespace[0].length;\n      return getTokens(end, tokens);\n    }\n\n    if (singleCharTokens.has(strFromStart[0])) {\n      const end = start + 1;\n      const singleCharToken = token(\n        strFromStart[0],\n        start,\n        end,\n        strFromStart[0]\n      );\n      return getTokens(end, tokens.concat(singleCharToken));\n    }\n\n    const numberMatch = strFromStart.match(/^-?\\d+(?:\\.\\d+)?/);\n    if (numberMatch) {\n      const end = start + numberMatch[0].length;\n      const numberToken = token(tokenKind.number, start, end, numberMatch[0]);\n      return getTokens(end, tokens.concat(numberToken));\n    }\n    const additiveMatch = strFromStart.match(/^[+-]/);\n    if (additiveMatch) {\n      const end = start + additiveMatch[0].length;\n      const addToken = token(tokenKind.additive, start, end, additiveMatch[0]);\n      return getTokens(end, tokens.concat(addToken));\n    }\n    const multiplicativeMatch = strFromStart.match(/^[*\\/%]/);\n    if (multiplicativeMatch) {\n      const end = start + multiplicativeMatch[0].length;\n      const multiplicativeToken = token(\n        tokenKind.multiplicative,\n        start,\n        end,\n        multiplicativeMatch[0]\n      );\n      return getTokens(end, tokens.concat(multiplicativeToken));\n    }\n    const booleanMatch = strFromStart.match(/^(?:true|false)/);\n    if (booleanMatch) {\n      const end = start + booleanMatch[0].length;\n      const booleanToken = token(\n        tokenKind.boolean,\n        start,\n        end,\n        booleanMatch[0]\n      );\n      return getTokens(end, tokens.concat(booleanToken));\n    }\n    const notMatch = strFromStart.match(/^not/);\n    if (notMatch) {\n      const end = start + notMatch[0].length;\n      const notToken = token(tokenKind.not, start, end, notMatch[0]);\n      return getTokens(end, tokens.concat(notToken));\n    }\n    const comparisonMatch = strFromStart.match(\n      /^(?:(?:is\\s)?\\s*less\\s+than|(?:is\\s)?\\s*greater\\s+than|(?:is\\s)?\\s*no\\s+more\\s+than|(?:is\\s)?\\s*at\\s+least)/\n    );\n    if (comparisonMatch) {\n      const end = start + comparisonMatch[0].length;\n      //  Remove \"is\" at beginning and replace multiple spaces with single\n      const val = comparisonMatch[0].replace(/is\\s+/, \"\").replace(/\\s+/g, \" \");\n      const comparisonToken = token(tokenKind.comparison, start, end, val);\n      return getTokens(end, tokens.concat(comparisonToken));\n    }\n    const equalityMatch = strFromStart.match(/^(?:is\\s+not|is)/);\n    if (equalityMatch) {\n      const end = start + equalityMatch[0].length;\n      const equalityToken = token(\n        tokenKind.equality,\n        start,\n        end,\n        equalityMatch[0]\n      );\n      return getTokens(end, tokens.concat(equalityToken));\n    }\n    const logicalMatch = strFromStart.match(/^(?:and|or)/);\n    if (logicalMatch) {\n      const end = start + logicalMatch[0].length;\n      const logicalToken = token(\n        tokenKind.logical,\n        start,\n        end,\n        logicalMatch[0]\n      );\n      return getTokens(end, tokens.concat(logicalToken));\n    }\n    const untilMatch = strFromStart.match(/^until/);\n    if (untilMatch) {\n      const end = start + untilMatch[0].length;\n      const untilToken = token(tokenKind.until, start, end, untilMatch[0]);\n      return getTokens(end, tokens.concat(untilToken));\n    }\n    const memberMatch = strFromStart.match(/^\\.[a-zA-Z]\\w*/);\n    if (memberMatch) {\n      const end = start + memberMatch[0].length;\n      const memberToken = token(\n        tokenKind.member,\n        start,\n        end,\n        memberMatch[0].slice(1)\n      );\n      return getTokens(end, tokens.concat(memberToken));\n    }\n    const constantMatch = Object.entries(constants).find(\n      ([key]) => key === strFromStart.slice(0, key.length)\n    );\n    if (constantMatch) {\n      const end = start + constantMatch[0].length;\n      const constantToken = token(\n        tokenKind.constant,\n        start,\n        end,\n        constantMatch[1]\n      );\n      return getTokens(end, tokens.concat(constantToken));\n    }\n    const propertyMatch = strFromStart.match(/^[a-zA-Z]\\w*/);\n    if (propertyMatch) {\n      const end = start + propertyMatch[0].length;\n      const propertyToken = token(\n        tokenKind.property,\n        start,\n        end,\n        propertyMatch[0]\n      );\n      return getTokens(end, tokens.concat(propertyToken));\n    }\n    const stringMatch = strFromStart.match(/^;.*?(?<!\\\\);/);\n    if (stringMatch) {\n      const end = start + stringMatch[0].length;\n      const stringToken = token(\n        tokenKind.string,\n        start,\n        end,\n        stringMatch[0].slice(1, -1).replace(/\\\\\\;/g, \";\")\n      );\n      return getTokens(end, tokens.concat(stringToken));\n    }\n    console.error(`Unexpected token: ${strFromStart}`);\n  };\n\n  return getTokens();\n};\n","import { tokenKind, endToken } from \"./lexer.js\";\n\nconst isArray = (tokens, parenthesesDepth = 0) => {\n  const [token, ...remainder] = tokens;\n  if (typeof token === \"undefined\") return false;\n  switch (token.kind) {\n    case \"(\":\n      return isArray(remainder, parenthesesDepth + 1);\n    case \")\":\n      return isArray(remainder, parenthesesDepth - 1);\n    case \",\":\n      if (parenthesesDepth === 0) return true;\n    default:\n      return isArray(remainder, parenthesesDepth);\n  }\n};\n\nconst commaSeparateSections = (\n  tokens,\n  parenthesesDepth = 0,\n  squareBracketDepth = 0,\n  curlyBracketDepth = 0,\n  sections = [[]]\n) => {\n  const [token, ...remainder] = tokens;\n  if (typeof token === \"undefined\") return sections;\n  const lastSectionIndex = sections.length - 1;\n  const lastSectionConcatenated = sections[lastSectionIndex].concat(token);\n  const sectionsConcatenated = [\n    ...sections.slice(0, lastSectionIndex),\n    lastSectionConcatenated,\n  ];\n  switch (token.kind) {\n    case \"(\":\n      return commaSeparateSections(\n        remainder,\n        parenthesesDepth + 1,\n        squareBracketDepth,\n        curlyBracketDepth,\n        sectionsConcatenated\n      );\n    case \")\":\n      return commaSeparateSections(\n        remainder,\n        parenthesesDepth - 1,\n        squareBracketDepth,\n        curlyBracketDepth,\n        sectionsConcatenated\n      );\n    case \"[\":\n      return commaSeparateSections(\n        remainder,\n        parenthesesDepth,\n        squareBracketDepth + 1,\n        curlyBracketDepth,\n        sectionsConcatenated\n      );\n    case \"]\":\n      return commaSeparateSections(\n        remainder,\n        parenthesesDepth,\n        squareBracketDepth - 1,\n        curlyBracketDepth,\n        sectionsConcatenated\n      );\n    case \"{\":\n      return commaSeparateSections(\n        remainder,\n        parenthesesDepth,\n        squareBracketDepth,\n        curlyBracketDepth + 1,\n        sectionsConcatenated\n      );\n    case \"}\":\n      return commaSeparateSections(\n        remainder,\n        parenthesesDepth,\n        squareBracketDepth,\n        curlyBracketDepth - 1,\n        sectionsConcatenated\n      );\n    case \",\":\n      if (\n        parenthesesDepth === 0 &&\n        squareBracketDepth === 0 &&\n        curlyBracketDepth === 0\n      )\n        return commaSeparateSections(\n          remainder,\n          parenthesesDepth,\n          squareBracketDepth,\n          curlyBracketDepth,\n          sections.concat([[]])\n        );\n    default:\n      return commaSeparateSections(\n        remainder,\n        parenthesesDepth,\n        squareBracketDepth,\n        curlyBracketDepth,\n        sectionsConcatenated\n      );\n  }\n};\n\nconst hasColonOutsideTernaryAndParentheses = (tokens) => {\n  const sections = commaSeparateSections(tokens);\n  for (const section of sections) {\n    const colonIndex = section.findIndex((token) => token.kind === \":\");\n    if (colonIndex === -1) continue;\n    const questionIndex = section.findIndex((token) => token.kind === \"?\");\n    if (questionIndex === -1 || colonIndex < questionIndex) return true;\n  }\n  return false;\n};\n\nconst getRightParenthesisIndex = (tokens, index = 0, depth = 0) => {\n  const [token, ...remainder] = tokens;\n  if (token.kind === \"(\")\n    return getRightParenthesisIndex(remainder, index + 1, depth + 1);\n  if (token.kind !== \")\")\n    return getRightParenthesisIndex(remainder, index + 1, depth);\n  if (depth === 0) return index;\n  return getRightParenthesisIndex(remainder, index + 1, depth - 1);\n};\n\nexport const parse = (element, attrName, fullListOfTokens, debug = false) => {\n  const parentheses = (tokensAfterLeftParenthesis) => {\n    const rightParenthesisIndex = getRightParenthesisIndex(\n      tokensAfterLeftParenthesis\n    );\n    if (rightParenthesisIndex < 0) {\n      console.error(\n        \"Found a left parenthesis ( without a matching right parenthesis )\"\n      );\n      return [() => {}, tokensAfterLeftParenthesis];\n    }\n    const tokensBetweenParentheses = tokensAfterLeftParenthesis.slice(\n      0,\n      rightParenthesisIndex\n    );\n    const getInnerValue = parseAndAutoEnclose(tokensBetweenParentheses);\n    const tokensAfterParentheses = tokensAfterLeftParenthesis.slice(\n      rightParenthesisIndex + 1\n    );\n    return [getInnerValue, tokensAfterParentheses];\n  };\n\n  const objectLiteral = (tokensBetweenBrackets) => {\n    if (debug) console.log(\"OBJECT LITERAL\");\n    const sections = commaSeparateSections(tokensBetweenBrackets);\n    const keyValuePairs = sections.map((sectionTokens, i) => {\n      const colonIndex = sectionTokens.findIndex((token) => token.kind === \":\");\n      if (colonIndex < 0) {\n        if (sectionTokens.length > 1)\n          console.error(\n            \"Couldn't figure out what to do with these:\",\n            sectionTokens\n          );\n        const propName = sectionTokens[0].value;\n        const getValue = parseExpression(sectionTokens);\n        return () => [propName, getValue()];\n      }\n      if (colonIndex === 0) {\n        console.error(\"FOUND COLON AT BEGINNING OF SECTION\");\n        return () => [];\n      }\n      if (colonIndex === 1) {\n        const propName = sectionTokens[0].value;\n        const tokensAfterColon = sectionTokens.slice(2);\n        const getValue = parseExpression(tokensAfterColon);\n        return () => [propName, getValue()];\n      }\n      const getPropName = parseExpression(sectionTokens.slice(0, colonIndex));\n      const getValue = parseAndAutoEnclose(sectionTokens.slice(colonIndex));\n      return () => [getPropName(), getValue()];\n    });\n    return () => Object.fromEntries(keyValuePairs.map((fn) => fn()));\n  };\n\n  const array = (tokensBetweenBrackets) => {\n    const sections = commaSeparateSections(tokensBetweenBrackets);\n    const getSectionExpressions = sections.map((s) => parseExpression(s));\n    const getArray = () => getSectionExpressions.map((s) => s());\n    return getArray;\n  };\n\n  const getObjectWithProperty = (propertyToken) => {\n    const propName = propertyToken.value;\n    const obj =\n      element instanceof HTMLCanvasElement ||\n      attrName === \"repeat\" ||\n      attrName === \"change\" ||\n      propName === \"above_sibling\" ||\n      propName === \"parent\" ||\n      propName === \"canvas\" ||\n      propName === \"above_siblings_off\"\n        ? element\n        : element.parentElement;\n    if (propName in obj === false) {\n      if (propName in element.pInst) return [() => element.pInst, propName];\n      console.error(\n        `On ${element.tagName}'s ${attrName}, couldn't find ${propName}`\n      );\n    }\n    return [() => obj, propName];\n  };\n\n  const member = (getObj, getPreviousMemberName, afterPreviousMember) => {\n    const [nextToken, ...remainder] = afterPreviousMember;\n    if (nextToken.kind !== tokenKind.member)\n      return [getObj, getPreviousMemberName, afterPreviousMember];\n    return member(\n      () => getObj()[getPreviousMemberName()],\n      () => nextToken.value,\n      remainder\n    );\n  };\n\n  const computedMember = (getBaseObj, firstMemberName, afterPreviousMember) => {\n    const getFirstMemberName = () => firstMemberName;\n    const [getObj, getNextMemberName, afterNextMember] = member(\n      getBaseObj,\n      getFirstMemberName,\n      afterPreviousMember\n    );\n    if (debug)\n      console.log(\n        `AFTER member, member name: ${getNextMemberName()} remaining tokens ${afterNextMember\n          .map((t) => t.value)\n          .join(\" \")}`\n      );\n    const [nextToken, ...afterNext] = afterNextMember;\n    if (nextToken.kind !== \"[\")\n      return [getObj, getNextMemberName, afterNextMember];\n    const rightSquareBracketIndex = afterNext.findIndex((t) => t.kind === \"]\");\n    const tokensBetweenBrackets = afterNext.slice(0, rightSquareBracketIndex);\n    const getComputedMemberName = parseExpression(tokensBetweenBrackets);\n    const tokensAfterBrackets = afterNext.slice(rightSquareBracketIndex + 1);\n    return member(\n      () => getObj()[getNextMemberName()],\n      getComputedMemberName,\n      tokensAfterBrackets\n    );\n  };\n\n  const call = (getBaseObj, firstMemberName, afterFirstMember) => {\n    const [getObj, getLastMemberName, afterLastMember] = computedMember(\n      getBaseObj,\n      firstMemberName,\n      afterFirstMember\n    );\n    if (debug)\n      console.log(\n        `AFTER computed member, member name: ${getLastMemberName()} remaining tokens ${afterLastMember\n          .map((t) => t.value)\n          .join(\" \")}`\n      );\n    const [nextToken, ...afterNextToken] = afterLastMember;\n    if (nextToken.kind !== \"(\")\n      return [() => getObj()[getLastMemberName()], afterLastMember];\n    const rightParenthesisIndex = getRightParenthesisIndex(afterNextToken);\n    afterNextToken.findIndex((t) => t.kind === \")\");\n    const getArguments = array(afterNextToken.slice(0, rightParenthesisIndex));\n    const tokensAfterParentheses = afterNextToken.slice(\n      rightParenthesisIndex + 1\n    );\n    return [\n      () => getObj()[getLastMemberName()](...getArguments()),\n      tokensAfterParentheses,\n    ];\n  };\n\n  const property = (propertyToken, remainder) => {\n    const [getObj, memberName] = getObjectWithProperty(propertyToken);\n    if (debug)\n      console.log(\n        `AFTER getObjectWithProperty propName: ${memberName} remaining tokens: ${remainder\n          .map((t) => t.value)\n          .join(\" \")}`\n      );\n    return call(getObj, memberName, remainder);\n  };\n\n  const primary = (tokens) => {\n    const [token, ...remainder] = tokens;\n    switch (token.kind) {\n      case tokenKind.string:\n      case tokenKind.constant:\n        return [() => token.value, remainder];\n      case tokenKind.number:\n        const numberStringVal = token.value;\n        return [() => Number(numberStringVal), remainder];\n      case tokenKind.boolean:\n        const booleanValue = token.value === \"true\";\n        return [() => booleanValue, remainder];\n      case tokenKind.not:\n      case tokenKind.until:\n        const rightOfNot = parseExpression(remainder.slice(0, -1));\n        return [() => !rightOfNot(), remainder.slice(-1)];\n      case tokenKind.property:\n        return property(token, remainder);\n      case \"(\":\n        return parentheses(remainder);\n      case \"[\":\n        const rightSquareBracketIndex = remainder.findIndex(\n          (t) => t.kind === \"]\"\n        );\n        if (rightSquareBracketIndex < 0)\n          console.error(\n            `On ${element.tagName}'s ${attrName}, found a [ left square bracket without matching right square bracket]`\n          );\n        return [\n          array(remainder.slice(0, rightSquareBracketIndex)),\n          remainder.slice(rightSquareBracketIndex + 1),\n        ];\n      case \"{\":\n        const rightCurlyBracketIndex = remainder.findIndex(\n          (t) => t.kind === \"}\"\n        );\n        if (rightCurlyBracketIndex < 0)\n          console.error(\n            `On ${element.tagName}'s ${attrName}, found a { left curly bracket without matching right curly bracket}`\n          );\n        return [\n          objectLiteral(remainder.slice(0, rightCurlyBracketIndex)),\n          remainder.slice(rightCurlyBracketIndex + 1),\n        ];\n      case tokenKind.additive:\n        return [() => 0, tokens];\n      default:\n        console.error(\n          `Parser failed on ${tokens.map((t) => t.value).join(\" \")}`\n        );\n        return [() => undefined, remainder];\n    }\n  };\n\n  const multiplicative = (tokens) => {\n    const [left, afterLeft] = primary(tokens);\n    if (debug)\n      console.log(\"AFTER PRIMARY\", afterLeft.map((t) => t.value).join(\" \"));\n    const [operator, ...rightTokens] = afterLeft;\n    if (operator.kind !== tokenKind.multiplicative) return [left, afterLeft];\n    const [right, remainder] = multiplicative(rightTokens);\n    if (operator.value === \"*\") return [() => left() * right(), remainder];\n    if (operator.value === \"%\") return [() => left() % right(), remainder];\n    return [() => left() / right(), remainder];\n  };\n\n  const additive = (tokens) => {\n    const [left, afterLeft] = multiplicative(tokens);\n    if (debug)\n      console.log(\"AFTER MULT LEFT\", afterLeft.map((t) => t.value).join(\" \"));\n    const [operator, ...rightTokens] = afterLeft;\n    if (operator.kind !== tokenKind.additive) return [left, afterLeft];\n    const [right, remainder] = additive(rightTokens);\n    if (operator.value === \"+\") return [() => left() + right(), remainder];\n    return [() => left() - right(), remainder];\n  };\n\n  const comparison = (tokens) => {\n    const [left, afterLeft] = additive(tokens);\n    if (debug)\n      console.log(\"AFTER ADDITIVE\", afterLeft.map((t) => t.value).join(\" \"));\n    const [operator, ...rightTokens] = afterLeft;\n    if (operator.kind !== tokenKind.comparison) return [left, afterLeft];\n    const [right, remainder] = comparison(rightTokens);\n    const getCompareFn = () => {\n      switch (operator.value) {\n        case \"less than\":\n          return () => left() < right();\n        case \"no more than\":\n          return () => left() <= right();\n        case \"at least\":\n          return () => left() >= right();\n        case \"greater than\":\n          return () => left() > right();\n        default:\n          console.error(\n            `On ${element.tagName}'s ${attrName}, comparison token was found with value '${operator.value}', but this value could not be matched with a function.`\n          );\n      }\n    };\n    return [getCompareFn(), remainder];\n  };\n\n  const equality = (tokens) => {\n    const [left, afterLeft] = comparison(tokens);\n    if (debug)\n      console.log(\"AFTER COMPARE\", afterLeft.map((t) => t.value).join(\" \"));\n    const [operator, ...rightTokens] = afterLeft;\n    if (operator.kind !== tokenKind.equality) return [left, afterLeft];\n    const [right, remainder] = equality(rightTokens);\n    if (operator.value === \"is\")\n      return [() => Object.is(left(), right()), remainder];\n    return [() => !Object.is(left(), right()), remainder];\n  };\n\n  const logical = (tokens) => {\n    const [left, afterLeft] = equality(tokens);\n    if (debug)\n      console.log(\"AFTER EQUALITY\", afterLeft.map((t) => t.value).join(\" \"));\n    const [operator, ...rightTokens] = afterLeft;\n    if (operator.kind !== tokenKind.logical) return [left, afterLeft];\n    const [right, remainder] = logical(rightTokens);\n    if (operator.value === \"and\") return [() => left() && right(), remainder];\n    return [() => left() || right(), remainder];\n  };\n\n  const ternary = (tokens) => {\n    const [left, afterLeft] = logical(tokens);\n    if (debug)\n      console.log(\"AFTER LOGICAL\", afterLeft.map((t) => t.value).join(\" \"));\n    const [nextToken, ...afterNextToken] = afterLeft;\n    if (nextToken.kind !== \"?\") return [left, afterLeft];\n    const colonIndex = afterNextToken.findIndex((token) => token.kind === \":\");\n    const middle = parseAndAutoEnclose(afterNextToken.slice(0, colonIndex));\n    const [right, afterRight] = ternary(afterNextToken.slice(colonIndex + 1));\n    return [() => (left() ? middle() : right()), afterRight];\n  };\n\n  const end = (tokens) => {\n    if (tokens[0].kind === tokenKind.end) return () => {};\n    const [getExpression, afterExpression] = ternary(tokens);\n    if (\n      afterExpression.length === 0 ||\n      (afterExpression.length === 1 &&\n        afterExpression[0].kind !== tokenKind.end)\n    )\n      console.error(\n        `On ${element.tagName}'s ${attrName}, reached end of expression without an end token`\n      );\n    else if (afterExpression.length > 1)\n      console.error(\n        `On ${\n          element.tagName\n        }'s ${attrName}, reached end of expression and found remaining tokens: ${afterExpression\n          .map((t) => t.value)\n          .join(\" \")}`\n      );\n    return getExpression;\n  };\n  const parseExpression = (tokens) => {\n    if (debug)\n      console.log(\n        `%cParsing ${tokens.map((t) => t.value).join(\" \")}`,\n        \"background: yellow; color: black; padding: 10px;\"\n      );\n    return end(tokens.concat(endToken));\n  };\n  const parseAndAutoEnclose = (tokens) => {\n    if (debug)\n      console.log(\n        `%cAuto enclosing ${tokens.map((t) => t.value).join(\" \")}`,\n        \"background: lightblue; color: black; padding: 10px;\"\n      );\n    if (hasColonOutsideTernaryAndParentheses(tokens))\n      return objectLiteral(tokens);\n    if (isArray(tokens)) return array(tokens);\n    return parseExpression(tokens);\n  };\n  return parseAndAutoEnclose(fullListOfTokens);\n};\n","import { lex } from \"./lexer.js\";\nimport { parse } from \"./parser.js\";\n\nexport const interpret = (element, attrName, attrValue) => {\n  const tokens = lex(attrValue);\n  const getValue = parse(element, attrName, tokens);\n  return getValue;\n};\n","import { interpret } from \"../interpreter/interpreter\";\n\nexport const defineCustomElement = (el) => {\n  const name = interpret(el, \"name\", el.getAttribute(\"name\"))();\n  //  Trick custom-elements-manifest into ignoring this\n  customElements[\"define\"](\n    `p-${name}`,\n    class extends el.constructor {\n      renderFunctionName = el.renderFunctionName;\n      constructor() {\n        super();\n      }\n      /**\n       * Sets the default values for this element's attributes.\n       */\n      setDefaults() {\n        Array.from(el.attributes).forEach(\n          (a) =>\n            this.hasAttribute(a.name) === false &&\n            this.setAttribute(a.name, a.value)\n        );\n        const childClones = Array.from(el.children).map((child) =>\n          child.cloneNode(true)\n        );\n        this.prepend(...childClones);\n      }\n      renderToCanvas = null;\n    }\n  );\n};\n/**\n * This HTML element loads an XML sketch file. This should be added to the\n * index.html file as a `<link>` element with the attributes is=\"p-sketch\" and\n * href=\"[PATH TO XML FILE]\".\n * @element p-sketch\n * @example Add a sketch to html\n * ```html\n * <!DOCTYPE html>\n * <html lang=\"en\">\n * <head>\n *   <script src=\"p5.js\"></script>\n *   <script src=\"p5.marker.js\" defer></script>\n *   <link rel=\"stylesheet\" type=\"text/css\" href=\"style.css\" />\n *   <link href=\"sketch.xml\" is=\"p-sketch\" />\n *   <meta charset=\"utf-8\" />\n * </head>\n * <body></body>\n * </html>\n * ```\n */\nclass Sketch extends HTMLLinkElement {\n  static elementName = \"p-sketch\";\n  constructor() {\n    super();\n    this.#loadXML(this.href);\n  }\n  #convertElement(xmlEl) {\n    const xmlTag = xmlEl.tagName;\n    const createElementArguments = this.#xmlTagToCreateElementArguments(xmlTag);\n    const pEl = document.createElement(...createElementArguments);\n    this.#copyAttributes(xmlEl, pEl);\n    for (const childNode of xmlEl.childNodes) {\n      if (childNode.nodeType === 1)\n        pEl.appendChild(this.#convertElement(childNode));\n      else pEl.appendChild(childNode.cloneNode());\n    }\n    if (pEl.hasAttribute(\"name\")) defineCustomElement(pEl);\n    return pEl;\n  }\n  #convertXML(e) {\n    const xml = e.target.response.documentElement;\n    document.body.appendChild(this.#convertElement(xml));\n    document.querySelectorAll(\"canvas\").forEach((canvas) => canvas.runCode());\n  }\n  #copyAttributes(orig, copy) {\n    const attrs = orig.attributes;\n    for (let i = 0; i < attrs.length; i++) {\n      const attr = attrs[i];\n      copy.setAttribute(attr.name, attr.value);\n    }\n  }\n\n  #loadXML(path) {\n    if (!path)\n      return console.error(\n        \"p-sketch element is missing required path attribute\"\n      );\n    const request = new XMLHttpRequest();\n    request.open(\"GET\", path);\n    request.responseType = \"document\";\n    request.overrideMimeType(\"text/xml\");\n    request.addEventListener(\"load\", this.#convertXML.bind(this));\n    request.send();\n  }\n  #xmlTagToCreateElementArguments(xmlTag) {\n    if (xmlTag.slice(0, 2) === \"p-\") return [xmlTag];\n    if (xmlTag === \"canvas\") return [xmlTag, { is: \"p-canvas\" }];\n    if (xmlTag === \"canvas-3d\") return [\"canvas\", { is: \"p-canvas-3d\" }];\n    return [\"p-\" + xmlTag];\n  }\n}\ncustomElements.define(\"p-sketch\", Sketch, { extends: \"link\" });\n\nclass Asset extends HTMLElement {\n  static elementName = \"p-asset\";\n  constructor() {\n    super();\n  }\n  static loadFns = {\n    image: \"loadImage\",\n    font: \"loadFont\",\n    json: \"loadJSON\",\n    strings: \"loadStrings\",\n    table: \"loadTable\",\n    xml: \"loadXML\",\n    bytes: \"loadBytes\",\n    get: \"httpGet\",\n    shader: \"loadShader\",\n  };\n\n  async load(pInst) {\n    if (this.data) return this.data;\n    const loadFn = Asset.loadFns[this.getAttribute(\"type\").toLowerCase()];\n    const path = this.getAttribute(\"path\");\n    this.data = await pInst[loadFn](path);\n    return this.data;\n  }\n}\ncustomElements.define(\"p-asset\", Asset);\n","export const addMathProps = (baseClass) =>\n  class extends baseClass {\n    #angle_mode = p5.RADIANS;\n    #perlin_octaves = 4;\n    #perlin_amp_falloff = 0.5;\n    #noise_seed;\n    #random_seed;\n\n    get angle_mode() {\n      return this.#angle_mode;\n    }\n    set angle_mode(mode) {\n      this.pInst.angleMode(mode);\n      this.#angle_mode = this.pInst._angleMode;\n    }\n    /**\n     * math provides access to the built-in Math object available on browsers.\n     * The reference for the Math object is available at\n     * https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Math.\n     */\n    get math() {\n      return Math;\n    }\n    /**\n     * Adjusts the character and level of detail produced by the Perlin noise\n     * method. This must be set to a comma-separated list of 2 numbers:\n     * 1. lod: number of octaves to be used by the noise\n     * 2. falloff:  falloff factor for each octave\n     *\n     * Similar to harmonics in physics, noise is computed over\n     * several octaves. Lower octaves contribute more to the output signal and\n     * as such define the overall intensity of the noise, whereas higher octaves\n     * create finer-grained details in the noise sequence.\n     *\n     * By default, noise is computed over 4 octaves with each octave contributing\n     * exactly half as much as its predecessor, starting at 50% strength for the 1st\n     * octave. This falloff amount can be changed by adding an additional function\n     * parameter. Eg. a falloff factor of 0.75 means each octave will now have\n     * 75% impact (25% less) of the previous lower octave. Any value between\n     * 0.0 and 1.0 is valid, however, note that values greater than 0.5 might\n     * result in greater than 1.0 values returned by noise().\n     *\n     * By changing these values, the signal created by the noise()\n     * method can be adapted to fit very specific needs and characteristics.\n     * @type {[number, number]}\n     */\n    get noise_detail() {\n      return [this.#perlin_octaves, this.#perlin_amp_falloff];\n    }\n    set noise_detail(val) {\n      this.pInst.noiseDetail(...val);\n    }\n    /**\n     * Sets the seed value for noise(). By default,\n     * noise() produces different results each time\n     * the program is run. Set the `seed` value to a constant to return\n     * the same pseudo-random numbers each time the software is run.\n     * If a seed has not been set, noise_seed will be undefined.\n     * @type {number}\n     */\n    get noise_seed() {\n      return this.#noise_seed;\n    }\n    set noise_seed(val) {\n      this.pInst.noiseSeed(val);\n    }\n    /**\n     * Sets the seed value for random().\n     *\n     * By default, random() produces different results each time the program\n     * is run. Set random_seed to a constant to return the same\n     * pseudo-random numbers each time the software is run. If a seed has not\n     * been set, random_seed will be undefined.\n     * @type {number}\n     */\n    get random_seed() {\n      return this.#random_seed;\n    }\n    set random_seed(val) {\n      this.pInst.randomSeed(val);\n      this.#random_seed = val;\n    }\n  };\n","export const addMathMethods = (baseClass) =>\n  class extends baseClass {\n    /**\n     * Creates a new <a href=\"#/p5.Vector\">p5.Vector</a> (the datatype for storing vectors). This provides a\n     * two or three-dimensional vector, specifically a Euclidean (also known as\n     * geometric) vector. A vector is an entity that has both magnitude and\n     * direction.\n     * @param {Number} [x] x component of the vector\n     * @param {Number} [y] y component of the vector\n     * @param {Number} [z] z component of the vector\n     * @return {p5.Vector}\n     */\n    vector() {\n      return this.pInst.createVector(...arguments);\n    }\n  };\n","export const addEventProps = (baseClass) =>\r\n  class extends baseClass {\r\n    /**\r\n     * The mouse object contains infromation about the current position\r\n     * and movement of the mouse:\r\n     * - mouse.x - x-coordinate relative to upper left of canvas\r\n     * - mouse.y - y-coordinate relative to upper left of canvas\r\n     * - mouse.previous.x - x-coordinate in previous frame\r\n     * - mouse.previous.y - y-coordinate in previous frame\r\n     * - mouse.window.x - x-coordinate relative to upper left of window\r\n     * - mouse.window.y - y-coordinate relative to upper left of window\r\n     * - mouse.window.previous.x - window x-coordinate in previous frame\r\n     * - mouse.window.previous.y - window y-coordinate in previous frame\r\n     * - mouse.moved.x - horizontal movement of the mouse since last frame\r\n     * - mouse.moved.y - vertical movement of the mouse since last frame\r\n     * - mouse.pressed - boolean that is true while the mouse button is held down\r\n     * - mouse.dragging - boolean that true while the mouse is pressed and moving\r\n     * - mouse.button - which mouse button is currently pressed: LEFT, RIGHT, CENTER,\r\n     *    or 0 for none.\r\n     *\r\n     * @type {Object}\r\n     */\r\n    get mouse() {\r\n      const { pInst } = this;\r\n      return {\r\n        x: pInst.mouseX,\r\n        y: pInst.mouseY,\r\n        previous: {\r\n          x: pInst.pmouseX,\r\n          y: pInst.pmouseY,\r\n        },\r\n        window: {\r\n          x: pInst.winMouseX,\r\n          y: pInst.winMouseY,\r\n          previous: {\r\n            x: pInst.pwinMouseX,\r\n            y: pInst.pwinMouseY,\r\n          },\r\n        },\r\n        moved: {\r\n          x: pInst.movedX,\r\n          y: pInst.movedY,\r\n        },\r\n        pressed: pInst.mouseIsPressed,\r\n        button: pInst.mouseButton,\r\n        dragging:\r\n          pInst.mouseIsPressed && (pInst.movedX !== 0 || pInst.movedY !== 0),\r\n      };\r\n    }\r\n    get acceleration() {\r\n      const { pInst } = this;\r\n      return {\r\n        x: pInst.accelerationX,\r\n        y: pInst.accelerationY,\r\n        z: pInst.accelerationZ,\r\n        previous: {\r\n          x: pInst.pAccelerationX,\r\n          y: pInst.pAccelerationY,\r\n          z: pInst.pAccelerationZ,\r\n        },\r\n      };\r\n    }\r\n    get device_rotation() {\r\n      const { pInst } = this;\r\n      return {\r\n        x: pInst.rotationX,\r\n        y: pInst.rotationY,\r\n        z: pInst.rotationZ,\r\n        previous: {\r\n          x: pInst.pRotationX,\r\n          y: pInst.pRotationY,\r\n          z: pInst.pRotationZ,\r\n        },\r\n      };\r\n    }\r\n  };\r\n","const addAnchor = (baseClass) =>\n  class extends baseClass {\n    #anchor = new p5.Vector();\n    /**\n     * This element and its children are positioned and transformed relative to\n     * the anchor position.\n     *\n     * Setting anchor to one or more comma-separated numbers will result in the\n     * values being passed into create_vector and anchor being set to the\n     * resulting vector.\n     * @type {p5.Vector}\n     */\n    get anchor() {\n      return this.#anchor;\n    }\n    set anchor(val) {\n      const { pInst } = this;\n      if (val instanceof p5.Vector) this.#anchor = val;\n      else if (Array.isArray(val)) this.#anchor = pInst.createVector(...val);\n      else if (typeof val === \"object\") {\n        const x = val.x || 0;\n        const y = val.y || 0;\n        const z = val.z || 0;\n        this.#anchor = pInst.createVector(x, y, z);\n      } else this.#anchor = pInst.createVector(val);\n    }\n  };\n\nconst add2DAngle = (baseClass) =>\n  class extends baseClass {\n    #angle = 0;\n    /**\n     * The angle of rotation for the element and its children. The unit for\n     * angles may be set with angle_mode.\n     * @type {number}\n     */\n    get angle() {\n      return this.#angle;\n    }\n    set angle(val) {\n      this.#angle = val;\n    }\n  };\n\nconst addScale = (baseClass) =>\n  class extends baseClass {\n    #scale = new p5.Vector(1, 1, 1);\n    /**\n     * Increases or decreases the size of an element by expanding or contracting\n     * vertices. Objects always scale from their anchor point. Scale values are\n     * specified as decimal percentages.\n     * For example, the setting scale=\"2.0\" increases the dimension of a\n     * shape by 200%.\n     *\n     * Transformations apply to this element and its children. Children's\n     * scale will multiply the effect. For example, setting scale=\"2.0\"\n     * and then setting scale=\"1.5\" on the child will cause the child to be 3x\n     * its size.\n     *\n     * Setting this to a comma-separated list of numbers will result in those\n     * values being passed into create_vector and the resulting vector being set\n     * as the scale. Setting this to a single number will set the scale vector\n     * to that value in the x, y, and z direction.\n     *  @type {p5.Vector}\n     */\n    get scale() {\n      return this.#scale;\n    }\n    set scale(val) {\n      if (val instanceof p5.Vector) this.#scale = val;\n      else if (Array.isArray(val)) this.#scale = new p5.Vector(...val);\n      else this.#scale = new p5.Vector(val, val, val);\n    }\n  };\n\nconst addShear = (baseClass) =>\n  class extends baseClass {\n    #shear_x = 0;\n    #shear_y = 0;\n    get shear_x() {\n      return this.#shear_x;\n    }\n    set shear_x(val) {\n      this.#shear_x = val;\n    }\n    get shear_y() {\n      return this.#shear_y;\n    }\n    set shear_y(val) {\n      this.#shear_y = val;\n    }\n  };\n\nconst addMatrixProps = (baseClass) =>\n  class extends baseClass {\n    #apply_matrix = new DOMMatrix();\n    #reset_transform = false;\n\n    /**\n     * Multiplies the current matrix by the one specified through the values.\n     * This is a powerful operation that can perform the equivalent of translate,\n     * scale, shear and rotate all at once. You can learn more about transformation\n     * matrices on <a href=\"https://en.wikipedia.org/wiki/Transformation_matrix\">\n     * Wikipedia</a>.\n     *\n     * If set to a comma-separated list of numbers, these number will first be\n     * passed into the\n     * <a href=\"https://developer.mozilla.org/en-US/docs/Web/API/DOMMatrix\">\n     * DOMMatrix</a> constructor.\n     * @type {DOMMatrix}\n     */\n    get apply_transform() {\n      return this.#apply_matrix;\n    }\n    set apply_transform(val) {\n      if (val instanceof DOMMatrix) this.#apply_matrix = val;\n      else this.#apply_matrix = new DOMMatrix(val);\n    }\n    /**\n     * If set to true, this resets the transformations applied to this element,\n     * its children, and the siblings below this element. This overrides\n     * transformation properties such as anchor, angle, scale, and shear.\n     */\n    get reset_transform() {\n      return this.#reset_transform;\n    }\n    set reset_transform(val) {\n      this.#reset_transform = val;\n    }\n  };\n\nexport const add2DTransformProps = (baseClass) =>\n  class extends addAnchor(\n    add2DAngle(addScale(addShear(addMatrixProps(baseClass))))\n  ) {};\n\nconst add3DAngle = (baseClass) =>\n  class extends baseClass {\n    #angle_x = 0;\n    #angle_y = 0;\n    #angle_z = 0;\n    /**\n     * The angle of rotation along the x-axis for the element and its children.\n     * The unit for angles may be set with angle_mode.\n     * @type {number}\n     */\n    get angle_x() {\n      return this.#angle_x;\n    }\n    set angle_x(val) {\n      this.#angle_x = val;\n    }\n    /**\n     * The angle of rotation along the y-axis for the element and its children.\n     * The unit for angles may be set with angle_mode.\n     * @type {number}\n     */\n    get angle_y() {\n      return this.#angle_y;\n    }\n    set angle_y(val) {\n      this.#angle_y = val;\n    }\n    /**\n     * The angle of rotation along the z-axis for the element and its children.\n     * The unit for angles may be set with angle_mode.\n     * @type {number}\n     */\n    get angle_z() {\n      return this.#angle_z;\n    }\n    set angle_z(val) {\n      this.#angle_z = val;\n    }\n  };\n\nexport const add3DTransformProps = (baseClass) =>\n  class extends addAnchor(add3DAngle(addScale(addShear(baseClass)))) {};\n","const addPositionConverters = (baseClass) =>\n  class extends baseClass {\n    /**\n     * Converts a position on the canvas to a position in\n     * this element's transformed space.\n     * @param {p5.Vector} canvas_position\n     * @returns {p5.Vector} local_position\n     */\n    canvas_to_local_position(x = 0, y = 0, z = 0) {\n      if (arguments[0] instanceof p5.Vector) {\n        const { x: vx, y: vy, z: vz } = arguments[0];\n        x = vx;\n        y = vy;\n        z = vz;\n      }\n      const canvas_position = new DOMPoint(x, y, z);\n      const inverted_matrix = this.transform_matrix.inverse();\n      const scaled_matrix = inverted_matrix.scale(\n        1 / this.pInst.pixelDensity()\n      );\n      const canvas_point = scaled_matrix.transformPoint(canvas_position);\n      return this.pInst.createVector(\n        canvas_point.x,\n        canvas_point.y,\n        canvas_point.z\n      );\n    }\n    /**\n     * Converts a position in this element's transformed space to a\n     * position on the canvas.\n     * @param {p5.Vector} local_position\n     * @returns {p5.Vector} canvas_position\n     */\n    local_to_canvas_position(x = 0, y = 0, z = 0) {\n      if (arguments[0] instanceof p5.Vector) {\n        const { x: vx, y: vy, z: vz } = arguments[0];\n        x = vx;\n        y = vy;\n        z = vz;\n      }\n      const local_position = new DOMPoint(x, y, z);\n      const scaled_matrix = this.transform_matrix.scale(\n        1 / this.pInst.pixelDensity()\n      );\n      const local_point = scaled_matrix.transformPoint(local_position);\n      return this.pInst.createVector(\n        local_point.x,\n        local_point.y,\n        local_point.z\n      );\n    }\n  };\n\nexport const add2DTransformMethods = (baseClass) =>\n  class extends addPositionConverters(baseClass) {\n    #transform_matrix = new DOMMatrix();\n    /**\n     * transform_matrix stores the result of all the transformation\n     * properties applied to this element. (read-only)\n     * @type {DOMMatrix}\n     * @readonly\n     */\n    get transform_matrix() {\n      return this.#transform_matrix;\n    }\n    /**\n     * @private\n     */\n    transform() {\n      if (this.reset_transform) {\n        this.pInst.resetMatrix();\n      } else {\n        const shear_x_rads = this.pInst._toRadians(this.shear_x);\n        const shear_y_rads = this.pInst._toRadians(this.shear_y);\n        const shear_x_matrix = new DOMMatrix([\n          1,\n          0,\n          Math.tan(shear_x_rads),\n          1,\n          0,\n          0,\n        ]);\n        const shear_y_matrix = new DOMMatrix([\n          1,\n          Math.tan(shear_y_rads),\n          0,\n          1,\n          0,\n          0,\n        ]);\n        const transform_matrix = new DOMMatrix()\n          .translate(this.anchor.x, this.anchor.y)\n          .scale(this.scale.x, this.scale.y)\n          .rotate(this.angle)\n          .multiply(shear_x_matrix)\n          .multiply(shear_y_matrix)\n          .multiply(this.apply_transform);\n        const { a, b, c, d, e, f } = transform_matrix;\n        this.pInst.drawingContext.transform(a, b, c, d, e, f);\n      }\n      this.#transform_matrix = this.pInst.drawingContext.getTransform();\n    }\n  };\n\nexport const add3DTransformMethods = (baseClass) =>\n  class extends addPositionConverters(baseClass) {\n    transform() {\n      this.pInst.translate(this.anchor.x, this.anchor.y, this.anchor.z);\n      this.pInst.scale(this.scale.x, this.scale.y, this.scale.z);\n      this.pInst.rotateX(this.angle_x);\n      this.pInst.rotateY(this.angle_y);\n      this.pInst.rotateZ(this.angle_z);\n      this.pInst.shearX(this.shear_x);\n      this.pInst.shearY(this.shear_y);\n    }\n  };\n","import { pascalToKebab, kebabToCamel } from \"./utils/caseConvert\";\nimport { wrapMethod, defineProperties } from \"./utils/p5Modifiers\";\nimport { addWebGLMethods } from \"./methods/3d_methods\";\nimport { addColorMethods } from \"./methods/color_methods\";\nimport { addStorage } from \"./properties/data_props\";\nimport { addDataMethods } from \"./methods/data_methods\";\nimport { addCollide } from \"./methods/collide_methods\";\nimport { defineCustomElement } from \"./elements/beyond_canvas_elements\";\nimport { addMathProps } from \"./properties/math_props\";\nimport { addMathMethods } from \"./methods/math_methods\";\nimport { addEventProps } from \"./properties/event_props\";\nimport { interpret } from \"./interpreter/interpreter\";\nimport {\n  add2DTransformProps,\n  add3DTransformProps,\n} from \"./properties/transform_props\";\nimport {\n  add2DTransformMethods,\n  add3DTransformMethods,\n} from \"./methods/transform_methods\";\n\nwrapMethod(\n  \"_createFriendlyGlobalFunctionBinder\",\n  (base) =>\n    function (options = {}) {\n      return (prop, value) => {\n        const descriptor = Object.getOwnPropertyDescriptor(p5.prototype, prop);\n        const globalObject = options.globalObject || window;\n        if (typeof descriptor === \"undefined\" || descriptor.writable)\n          return base.call(this, options)(prop, value);\n        return Object.defineProperty(globalObject, prop, descriptor);\n      };\n    }\n);\n\np5.prototype.assignCanvas = function (c, r) {\n  this.noCanvas();\n  const mainDiv = document.querySelector(\"main\");\n  let index = 0;\n  if (typeof c.id === \"undefined\") {\n    while (document.querySelector(`p5MarkerCanvas${index}`)) index++;\n  }\n  c.id = `p5MarkerCanvas${index}`;\n  if (mainDiv.children.length === 0) mainDiv.remove();\n  if (r === this.WEBGL) {\n    this._setProperty(\"_renderer\", new p5.RendererGL(c, this, true));\n  } else {\n    //P2D mode\n    this._setProperty(\"_renderer\", new p5.Renderer2D(c, this, true));\n  }\n  this._renderer._applyDefaults();\n  this._setProperty(\"_elements\", [this._renderer]);\n};\n\np5.prototype.assets = {};\n\np5.prototype.loadAssets = async function () {\n  const assetElements = Array.from(document.querySelectorAll(\"p-asset\"));\n  const pInst = this;\n  const promises = assetElements.map((el) => el.load(pInst));\n  const results = await Promise.all(promises);\n  results.forEach(\n    (result, i) => (this.assets[assetElements[i].getAttribute(\"name\")] = result)\n  );\n  this._decrementPreload();\n};\np5.prototype.registerPreloadMethod(\"loadAssets\", p5.prototype);\np5.prototype._debug_attributes = true;\np5.prototype.create_canvas_element = function (elementName) {\n  const createdElement = document.createElement(elementName);\n  this.canvas.appendChild(createdElement);\n  createdElement.setup(this, this.canvas);\n  return createdElement.this_element;\n};\ndefineProperties({\n  object_assign: {\n    set: function ([target, ...sources]) {\n      Object.assign(target, ...sources);\n    },\n  },\n  debug_attributes: {\n    get: function () {\n      return this._debug_attributes;\n    },\n    set: function (val) {\n      const valType = typeof val;\n      if (typeof val === \"boolean\") this._debug_attributes = val;\n      else\n        console.error(\n          `debug_attributes was set to a value of type ${valType} but may only be set to a boolean true/false value.`\n        );\n    },\n  },\n});\n\nconst attributePriorities = [\n  \"debug_attributes\",\n  \"_default\",\n  \"repeat\",\n  \"change\",\n];\nexport const addP5PropsAndMethods = (baseClass) =>\n  class P5Extension extends addColorMethods(\n    addWebGLMethods(\n      addEventProps(\n        addCollide(\n          addMathMethods(addMathProps(addStorage(addDataMethods(baseClass))))\n        )\n      )\n    )\n  ) {\n    /**\n     * This element's parent canvas.\n     * @private\n     */\n    #canvas;\n    #frame_created;\n    /**\n     * @private\n     */\n    #pInst;\n    /**\n     * @private\n     */\n    #proxy = new Proxy(this, {\n      get(target, prop) {\n        return target[prop];\n      },\n      has(target, prop) {\n        return prop in target;\n      },\n      set(target, prop, val) {\n        return target.set(prop, val);\n      },\n    });\n    /**\n     * @private\n     */\n    #state = {};\n\n    /**\n     * @private\n     */\n    #updateFunctions = new Map();\n    #name;\n    #on = true;\n    #repeat = false;\n    #change = {};\n    constructor() {\n      super();\n      if (this.hasAttribute(\"name\")) defineCustomElement(this);\n    }\n    /**\n     * The on property determines whether this element and its children\n     * are updated and rendered.\n     */\n    get on() {\n      return this.#on;\n    }\n    set on(val) {\n      this.#on = val;\n    }\n    /**\n     * Proxy for the sibling element above this element with access to its\n     * properties, methods, and attributes.\n     * @type {proxy}\n     */\n    get above_sibling() {\n      return this.previousElementSibling.this_element;\n    }\n    /**\n     * True if siblings directly above this element with an \"on\" attribute have\n     * \"on\" set to false. This can be used to switch between elements based on\n     * conditions, similar to if/else.\n     * @type {boolean}\n     */\n    get above_siblings_off() {\n      if (this === this.parentElement.firstElementChild) return true;\n      const { above_sibling } = this;\n      if (above_sibling.on) return false;\n      return above_sibling.above_siblings_off;\n    }\n    /**\n     * @method applyChange\n     * @private\n     */\n    #applyChange() {\n      const { change } = this;\n      let changed = false;\n      const assignProp = (obj, prop) => {\n        if (prop in obj) {\n          const changeVal = change[prop];\n          changed ||= obj[prop] !== changeVal;\n          obj[prop] = changeVal;\n          if (this.pInst.debug_attributes) this.setAttribute(prop, changeVal);\n          return true;\n        }\n        return false;\n      };\n      for (const prop in change) {\n        assignProp(this, prop) ||\n          assignProp(this.#state, prop) ||\n          assignProp(this.pInst, prop) ||\n          console.error(\n            `${this.constructor.elementName}'s change attribute has a prop called ${prop} that is unknown`\n          );\n\n        this.#state[prop] = change[prop];\n      }\n      return changed;\n    }\n    /**\n     * Checks if the provided attribute name belongs to a parent element. If\n     * the attribute refers to an object property, this will check for an\n     * attribute with a name that matches the object.\n     * @param {string} attributeName - name of the attribute to check\n     * @returns {boolean} true\n     */\n    attributeInherited(attributeName) {\n      const [obj, ...props] = attributeName.split(\".\");\n      if (props.length) return this.attributeInherited(obj);\n      if (this.parentElement.hasAttribute(attributeName)) return true;\n      if (this.parentElement.attributeInherited)\n        return this.parentElement.attributeInherited(attributeName);\n      return false;\n    }\n    /**\n     * Blends the pixels in the display window according to the defined mode.\n     * There is a choice of the following modes to blend the source pixels (A)\n     * with the ones of pixels already in the display window (B):\n     * <ul>\n     * <li><code>BLEND</code> - linear interpolation of colours: C =\n     * A*factor + B. <b>This is the default blending mode.</b></li>\n     * <li><code>ADD</code> - sum of A and B</li>\n     * <li><code>DARKEST</code> - only the darkest colour succeeds: C =\n     * min(A*factor, B).</li>\n     * <li><code>LIGHTEST</code> - only the lightest colour succeeds: C =\n     * max(A*factor, B).</li>\n     * <li><code>DIFFERENCE</code> - subtract colors from underlying image.\n     * <em>(2D)</em></li>\n     * <li><code>EXCLUSION</code> - similar to <code>DIFFERENCE</code>, but less\n     * extreme.</li>\n     * <li><code>MULTIPLY</code> - multiply the colors, result will always be\n     * darker.</li>\n     * <li><code>SCREEN</code> - opposite multiply, uses inverse values of the\n     * colors.</li>\n     * <li><code>REPLACE</code> - the pixels entirely replace the others and\n     * don't utilize alpha (transparency) values.</li>\n     * <li><code>REMOVE</code> - removes pixels from B with the alpha strength of A.</li>\n     * <li><code>OVERLAY</code> - mix of <code>MULTIPLY</code> and <code>SCREEN\n     * </code>. Multiplies dark values, and screens light values. <em>(2D)</em></li>\n     * <li><code>HARD_LIGHT</code> - <code>SCREEN</code> when greater than 50%\n     * gray, <code>MULTIPLY</code> when lower. <em>(2D)</em></li>\n     * <li><code>SOFT_LIGHT</code> - mix of <code>DARKEST</code> and\n     * <code>LIGHTEST</code>. Works like <code>OVERLAY</code>, but not as harsh. <em>(2D)</em>\n     * </li>\n     * <li><code>DODGE</code> - lightens light tones and increases contrast,\n     * ignores darks. <em>(2D)</em></li>\n     * <li><code>BURN</code> - darker areas are applied, increasing contrast,\n     * ignores lights. <em>(2D)</em></li>\n     * <li><code>SUBTRACT</code> - remainder of A and B <em>(3D)</em></li>\n     * </ul>\n     *\n     * <em>(2D)</em> indicates that this blend mode <b>only</b> works in the 2D renderer.<br>\n     * <em>(3D)</em> indicates that this blend mode <b>only</b> works in the WEBGL renderer.\n     * @type {BLEND|DARKEST|LIGHTEST|DIFFERENCE|MULTIPLY|EXCLUSION|SCREEN|\n     * REPLACE|OVERLAY|HARD_LIGHT|SOFT_LIGHT|DODGE|BURN|ADD|REMOVE|SUBTRACT}\n     */\n    get blend_mode() {\n      if (this.pInst._renderer.isP3D) return this.curBlendMode;\n      return this.pInst.drawingContext.globalCompositeOperation;\n    }\n    set blend_mode(val) {\n      this.pInst.blendMode(val);\n    }\n\n    /**\n     * @private\n     */\n    #callAttributeUpdater(attrName) {\n      if (this.#updateFunctions.has(attrName)) {\n        const updateFn = this.#updateFunctions.get(attrName);\n        return updateFn.call(this);\n      }\n      if (attrName in this.pInst) return this.pInst[attrName];\n      return;\n    }\n    /**\n     * The parent canvas for this element\n     * @type {HTMLCanvasElement}\n     */\n    get canvas() {\n      return this.#canvas.this_element;\n    }\n    get change() {\n      return this.#change;\n    }\n    set change(obj) {\n      this.#change = obj;\n    }\n    /**\n     * color_mode changes the way p5.js interprets\n     * color data. By default, fill,\n     * <a href=\"https://p5js.org/reference/#/p5/color\">color()</a> are defined\n     * by values between 0 and 255 using the RGB color model. This is equivalent\n     * to setting color_mode=\"RGB, 255\".\n     * Setting color_mode=\"HSB\" lets you use the HSB system instead. By default,\n     * this is color_mode=\"HSB, 360, 100, 100, 1\". You can also use HSL.\n     *\n     * Note: existing color objects remember the mode that they were created in,\n     * so you can change modes as you like without affecting their appearance.\n     *\n     * @type {RGB|HSB|HSL}\n     */\n    get color_mode() {\n      return this.pInst._colorMode;\n    }\n    set color_mode(val) {\n      this.pInst.colorMode(val);\n    }\n    /**\n     * @private\n     */\n    get #comments() {\n      return this.#html\n        .split(/(?:\\r\\n|\\r|\\n)/)\n        .map((line) => line.match(/.{1,80}/g))\n        .flat()\n        .map((line) => \"//\\t\" + line);\n    }\n    /**\n     * The text content of the element and its children. If a $ is followed by\n     * the name of a property (such as $blend_mode), it will be replaced by the\n     * value of the property.\n     */\n    get content() {\n      const getInherited = (owner, prop) => {\n        if (prop in owner) return owner[prop];\n        if (owner.parentElement) return getInherited(owner.parentElement, prop);\n        return `$${prop}`;\n      };\n      const textNodes = Array.from(this.childNodes).filter(\n        ({ nodeType }) => nodeType === 3\n      );\n      const text = textNodes\n        .map(({ nodeValue }) => nodeValue)\n        .join(\"\")\n        .replace(/\\$(\\w*)/g, (_, prop) => getInherited(this, prop))\n        .replace(/\\\\n/g, \"\\n\")\n        .trim();\n      return text;\n    }\n    set content(s) {\n      if (this.content === s) return;\n      for (const node of this.childNodes) {\n        if (node.nodeType === 3) this.removeChild(node);\n      }\n      this.insertBefore(document.createTextNode(s), this.firstChild);\n    }\n    /**\n     * Updates the element's attribute values, renders it to the canvas, and\n     * calls the draw method on its children.\n     * @method draw\n     * @param {object} inherited - object containing attribute values passed\n     * down from parent element\n     */\n    draw() {\n      if (this.hasAttribute(\"on\")) {\n        this.#updateAttribute(\"on\");\n        if (!this.on) return;\n      }\n      this.pInst.push();\n      this.updateState();\n      const { content: description } = this;\n      if (description.length) {\n        if (this instanceof HTMLCanvasElement) this.pInst.describe(description);\n        else this.pInst.describeElement(this.name, description);\n      }\n      let repeat = true;\n      while (repeat) {\n        this.transform?.();\n        this.render?.();\n        for (const child of this.children) {\n          child.draw?.(this.#state);\n        }\n        repeat = this.repeat;\n        const { change } = this;\n        if (repeat) {\n          this.pInst.pop();\n          this.pInst.push();\n          const changed = this.#applyChange();\n          const updaters = this.#updateFunctions.entries();\n          for (const [attrName, updater] of updaters) {\n            if (attrName in change === false)\n              this.#state[attrName] = this.#updateAttribute(attrName);\n          }\n          if (!changed) repeat = false;\n        }\n        this.endRender?.();\n      }\n      this.pInst.pop();\n    }\n    /**\n     * The p5.js API provides a lot of functionality for creating graphics, but\n     * there is some native HTML5 Canvas functionality that is not exposed by\n     * p5.\n     *\n     * You can still assign to\n     * it directly using the property `drawing_context`. This is\n     * the equivalent of calling `canvas.getContext('2d');` or\n     * `canvas.getContext('webgl');` and then calling Object.assign on the\n     * result.\n     * See this\n     * <a href=\"https://developer.mozilla.org/en-US/docs/Web/API/CanvasRenderingContext2D\">\n     * reference for the native canvas API</a> for possible drawing functions\n     * you can call.\n     *\n     * ```xml\n     * <_ drawing_context=\"shadowOffsetX: 5, shadowOffsetY: -5, shadowBlur: 10,\n     * shadowColor: 'black'\" />\n     * ```\n     * @type {Object}\n     */\n    get drawing_context() {\n      return this.pInst.drawingContext;\n    }\n    set drawing_context(obj) {\n      Object.assign(this.pInst.drawingContext, obj);\n    }\n    /**\n     * Name of the HTML element generated from this class.\n     * @type {string}\n     */\n    static get elementName() {\n      return `p-${pascalToKebab(this.name)}`;\n    }\n    /**\n     * With erase=\"true\", this element and all elements rendered after it will\n     * subtract from the canvas. Erased areas will reveal the web page\n     * underneath the canvas. This may be canceled with erase=\"false\"\n     *\n     * Arguments for the optional parameters to\n     * <a href=\"https://p5js.org/reference/#/p5/erase\">erase()</a>\n     * may also be provided as a comma separated list.\n     *\n     * ```<p-image>``` elements will not erase the canvas but works as usual.\n     * @type {boolean}\n     */\n    get erase() {\n      return this.pInst._renderer._isErasing;\n    }\n    set erase(val) {\n      if (val === true) this.pInst.erase();\n      else if (val === false) this.pInst.noErase();\n      else if (Array.isArray(val)) this.pInst.erase(...val);\n      else\n        console.error(\n          `${\n            this.tagName\n          }'s erase property was set using type ${typeof val}, but erase may only be set to a boolean or array.`\n        );\n    }\n    /**\n     * first_frame is true if the element was just created.\n     * This can be used for setup. For example,\n     * ```xml\n     * <_ rand_ball=\"this_element\">\n     *  <_ on=\"first_frame\"\n     *     rand_ball.x=\"random(canvas.width)\"\n     *     rand_ball.y=\"random(canvas.height)\"></_>\n     *   <circle></circle>\n     * </_>\n     * ```\n     * Sets the ```<_>```'s x-coordinate to a random position along the\n     * canvas when it is first created. The value then stays the same.\n     * As a result, the circle is played at that random position.\n     * (read-only)\n     * @type {boolean}\n     */\n    get first_frame() {\n      return this.frame_count === 1;\n    }\n    /**\n     * frame_count counts the number of frames this element has been\n     * rendered. The first time this element is rendered, frame_count\n     * with be 1. (read-only)\n     * @type {number}\n     */\n    get frame_count() {\n      return this.pInst.frameCount - this.#frame_created;\n    }\n    /**\n     * @private\n     */\n    get #html() {\n      return this.outerHTML.replace(this.innerHTML, \"\");\n    }\n    get name() {\n      if (this.#name) return this.#name;\n      const elementName = this.tagName.slice(2).toLowerCase();\n      const otherDescribedElementsWithThisName = Array.from(\n        document.querySelectorAll(this.tagName)\n      ).filter((el) => el !== this && el.content.length);\n      if (otherDescribedElementsWithThisName.length)\n        this.#name = `${elementName} ${otherDescribedElementsWithThisName.length}`;\n      else this.#name = elementName;\n      return this.#name;\n    }\n    set name(val) {\n      this.#name = val;\n    }\n    /**\n     * List of attribute names in the order in which they will be evaluated.\n     * Element attributes are not guaranteed to be in the order in which they\n     * are written. Transformation attributes are prioritized before others\n     * and use this order: anchor, angle, scale_factor, shear.\n     * @type {Array}\n     */\n    get orderedAttributeNames() {\n      const ordered = Array.from(this.attributes)\n        .sort(\n          ({ name: a }, { name: b }) =>\n            (attributePriorities.indexOf(a) + 1 ||\n              attributePriorities.indexOf(\"_default\")) -\n            (attributePriorities.indexOf(b) + 1 ||\n              attributePriorities.indexOf(\"_default\"))\n        )\n        .map(({ name }) => name);\n      return ordered;\n    }\n    /**\n     * Proxy for this element's parent element with access to its properties,\n     * methods, and attributes.\n     * @type {proxy}\n     */\n    get parent() {\n      return this.parentElement.this_element;\n    }\n    /**\n     * This element's p5 instance.\n     * @type {object}\n     */\n    get pInst() {\n      return this.#pInst;\n    }\n    render() {}\n    get repeat() {\n      return this.#repeat;\n    }\n    set repeat(val) {\n      this.#repeat = val;\n    }\n    /**\n     * Sets an attribute's value on this element.\n     * @param {string} attributeName\n     * @param {*} value\n     */\n    set(attributeName, value) {\n      if (attributeName in this) {\n        this.#updateFunctions.set(\n          attributeName,\n          () => (this[attributeName] = value)\n        );\n        this[attributeName] = value;\n        return true;\n      } else if (attributeName in this.pInst) {\n        this.#updateFunctions.set(\n          attributeName,\n          () => (this.pInst[attributeName] = value)\n        );\n        return true;\n      }\n      console.error(\n        `${this.tagName}'s ${attributeName} is being set to ${value} by another element, but it doesn't have a property by that name.`\n      );\n      return false;\n    }\n    /**\n     * Sets this element up with a p5 instance and sets up its children.\n     * @param {p5} pInst\n     */\n    setup(pInst, canvas) {\n      this.#pInst = pInst;\n      this.#frame_created = pInst.frameCount;\n      this.#canvas = canvas;\n      this.setDefaults?.();\n      this.#setupEvalFns();\n      this.setupRenderFunction?.();\n      for (const child of this.children) {\n        child.setup(pInst, canvas);\n      }\n    }\n    /**\n     * @private\n     */\n    #setupEvalFn(attr) {\n      const getAssignPropRef = (str, obj = this) => {\n        //  If string isn't already an array, split it on '.' characters\n        const [beforeDot, ...afterDot] = Array.isArray(str)\n          ? str\n          : str.split(\".\");\n        if (afterDot.length === 0) return [obj, beforeDot];\n        return getAssignPropRef(afterDot, obj[beforeDot]);\n      };\n      const [assignObj, assignPropName] = getAssignPropRef(attr.name);\n      const interpretation = interpret(this, attr.name, attr.value);\n      this.#updateFunctions.set(\n        attr.name,\n        () => (assignObj[assignPropName] = interpretation())\n      );\n      if (assignObj === this && attr.name in this === false) {\n        this.#state[attr.name] = interpretation();\n        Object.defineProperty(this, attr.name, {\n          get: function () {\n            return this.#state[attr.name];\n          },\n          set: function (val) {\n            this.#state[attr.name] = val;\n          },\n        });\n      }\n      try {\n        console.log(this.tagName, attr.name, interpretation());\n      } catch (err) {\n        console.warn(err);\n      }\n    }\n    /**\n     * @private\n     */\n    #setupEvalFns() {\n      if (this.hasAttribute(\"repeat\") && !this.hasAttribute(\"change\")) {\n        console.error(\n          `It looks like a ${this.constructor.elementName} has a repeat attribute ` +\n            \"but does not have a change attribute. The change attribute is required to \" +\n            \"prevent infinite loops.\"\n        );\n        this.removeAttribute(\"repeat\");\n      }\n      const inheritedAttributes = new Set();\n      let obj = this.parent;\n      while (obj) {\n        for (const { name } of obj.attributes) {\n          inheritedAttributes.add(name);\n        }\n        if (obj.parent && obj.parent !== obj) obj = obj.parent;\n        else break;\n      }\n      for (const propName of inheritedAttributes) {\n        if (this.hasAttribute(propName)) continue;\n        if (\n          [\"anchor\", \"scale\", \"angle\", \"shear_x\", \"shear_y\"].includes(propName)\n        )\n          continue;\n        if (propName in this)\n          this.#updateFunctions.set(propName, () => {\n            return (this[propName] = this.parent[propName]);\n          });\n        else {\n          Object.defineProperty(this, propName, {\n            get: function () {\n              if (typeof this.#state[propName] === \"undefined\")\n                return this.parent[propName];\n              return this.#state[propName];\n            },\n            set: function (val) {\n              this.#state[propName] = val;\n            },\n          });\n        }\n      }\n      const { orderedAttributeNames } = this;\n      for (let i = 0; i < orderedAttributeNames.length; i++) {\n        this.#setupEvalFn(this.attributes[orderedAttributeNames[i]]);\n      }\n    }\n    #customAttributeToProperty(propName) {\n      Object.defineProperty(this, propName, {\n        get: function () {\n          return this.#state[propName];\n        },\n        set: function (val) {\n          this.#state[propName] = val;\n        },\n      });\n    }\n    /**\n     * This element's proxy with access to properties, methods, and attributes.\n     */\n    get this_element() {\n      return this.#proxy;\n    }\n    /**\n     * @private\n     * @param {*} inherited\n     * @param {*} attrName\n     * @param {*} thisArg\n     * @returns\n     */\n    #updateAttribute(attrName) {\n      const val = this.#callAttributeUpdater(attrName);\n      //  Setting canvas width or height resets the drawing context\n      //  Only set the attribute if it's not one of those\n      if (this.pInst.debug_attributes === false) return val;\n      if (\n        this instanceof HTMLCanvasElement &&\n        (attrName === \"width\" || attrName === \"height\")\n      )\n        return val;\n\n      //  Brackets will throw a 'not a valid attribute name' error\n      if (attrName.match(/[\\[\\]]/)) return val;\n\n      const valToString = (v) => {\n        if (v instanceof p5.Color) return v.toString(this.pInst.color_mode);\n        if (typeof v?.toString === \"undefined\") return v;\n        return v.toString();\n      };\n      this.setAttribute(attrName, valToString(val));\n      return val;\n    }\n    /**\n     * Updates the values of all attributes using the provided expressions.\n     * @param {Object} inherited - object\n     * @returns\n     */\n    updateState() {\n      const updaters = this.#updateFunctions.entries();\n      for (const [attrName, updateFunction] of updaters) {\n        this.#updateAttribute(attrName);\n      }\n      return this.#state;\n    }\n    /**\n     * Set attributes for the WebGL Drawing context.\n     * This is a way of adjusting how the WebGL\n     * renderer works to fine-tune the display and performance.\n     *\n     * Note that this will reinitialize the drawing context\n     * if set after the WebGL canvas is made.\n     *\n     * If webgl_attributes is set to an object, all attributes\n     * not declared in the object will be set to defaults.\n     *\n     * The available attributes are:\n     * <br>\n     * alpha - indicates if the canvas contains an alpha buffer\n     * default is false\n     *\n     * depth - indicates whether the drawing buffer has a depth buffer\n     * of at least 16 bits - default is true\n     *\n     * stencil - indicates whether the drawing buffer has a stencil buffer\n     * of at least 8 bits\n     *\n     * antialias - indicates whether or not to perform anti-aliasing\n     * default is false (true in Safari)\n     *\n     * premultipliedAlpha - indicates that the page compositor will assume\n     * the drawing buffer contains colors with pre-multiplied alpha\n     * default is false\n     *\n     * preserveDrawingBuffer - if true the buffers will not be cleared and\n     * and will preserve their values until cleared or overwritten by author\n     * (note that p5 clears automatically on draw loop)\n     * default is true\n     *\n     * perPixelLighting - if true, per-pixel lighting will be used in the\n     * lighting shader otherwise per-vertex lighting is used.\n     * default is true.\n     *\n     * @type {Object}\n     */\n    get webgl_attributes() {\n      return this.pInst._glAttributes;\n    }\n    set webgl_attributes(val) {\n      this.pInst.setAttributes(val);\n    }\n  };\nexport class P5Element extends addP5PropsAndMethods(HTMLElement) {}\n\nexport class RenderedElement extends P5Element {\n  static overloads = [\"\"];\n  constructor() {\n    super();\n    /**\n     * @private\n     */\n    this.renderFunctionName ||= kebabToCamel(\n      this.tagName.toLowerCase().slice(2)\n    );\n  }\n  /**\n   * Sets the parameters used to call this element's render function based\n   * on the overloads for that function and this element's attributes.\n   * @private\n   */\n  #getArgumentsFromOverloads() {\n    const { overloads } = this.constructor;\n    //  Check every required parameter has an attribute\n    const isOptional = (param) => param.match(/^\\[.*\\]$/);\n    let overloadMatch = false;\n    //  Split the parameters and start with overloads with most parameters\n    const overloadsSplitSorted = overloads\n      .map((o) => o.split(\",\").map((p) => p.trim()))\n      .sort((a, b) => a.length - b.length);\n    //  If there aren't any overloads, return an empty array\n    if (overloadsSplitSorted.length === 0) return [];\n    for (let i = 0; i < overloadsSplitSorted.length; i++) {\n      const overloadParams = overloadsSplitSorted[i].map((param) => ({\n        name: param.replaceAll(/\\[|\\]/g, \"\"),\n        optional: isOptional(param),\n      }));\n      overloadMatch =\n        i === overloadsSplitSorted.length - 1 ||\n        overloadParams.every(\n          ({ name, optional }) =>\n            optional ||\n            this.hasAttribute(name) ||\n            this.attributeInherited(name) ||\n            name === \"\"\n        );\n\n      //  If matched overload found\n      if (overloadMatch) {\n        const lastParamWithAttribute = overloadParams.findLastIndex(\n          ({ name, optional }) => this.hasAttribute(name) || !optional\n        );\n\n        const filteredParams = overloadParams\n          .slice(0, lastParamWithAttribute + 1)\n          .map(({ name }) => name);\n        return filteredParams;\n      }\n    }\n    console.error(\n      `Element ${this.tagName} does not have the required attributes to render and will be removed from the sketch`\n    );\n    this.remove();\n  }\n  /**\n   * @private\n   */\n  setupRenderFunction() {\n    const args = this.#getArgumentsFromOverloads();\n    this.render = function () {\n      this.pInst[this.renderFunctionName](...args.map((param) => this[param]));\n    };\n  }\n}\n/**\n * The blank `<_>` element renders nothing to the canvas. This is useful\n * for adjusting attributes for child elements.\n * @element _\n */\nclass _ extends add2DTransformProps(add2DTransformMethods(P5Element)) {\n  constructor() {\n    super();\n  }\n}\ncustomElements.define(\"p-_\", _);\nclass _3D extends add3DTransformProps(add3DTransformMethods(P5Element)) {}\ncustomElements.define(\"p-_-3d\", _3D);\n","import { constants } from \"./constants\";\n\nexport const addCanvasProperties = (baseClass) =>\n  class extends baseClass {\n    #background;\n    /**\n     * The background property sets the color or image used\n     * for the background of the p5.js canvas. The default background is transparent.\n     * A <a href=\"https://p5js.org/reference/#/p5.Color\">p5.Color</a> object can be provided to set the background color.\n     *\n     * A <a href=\"https://p5js.org/reference/#/p5.Image\">p5.Image</a> can also be provided to set the background image.\n     *\n     * The arguments to <a href=\"https://p5js.org/reference/#/p5/color\">color()</a> can also be provided,\n     * separated by commas.\n     * @type {p5.Color|p5.Image}\n     */\n    get background() {\n      return this.#background;\n    }\n    set background(c) {\n      if (c instanceof p5.Color || c instanceof p5.Image) this.#background = c;\n      else if (c === constants.NONE) this.#background = this.pInst.color(0, 0);\n      else this.#background = this.pInst.color(c);\n    }\n    /**\n     * Sets the cursor when hovering over the canvas.\n     *\n     * You can set cursor to any of the following constants:\n     * ARROW, CROSS, HAND, MOVE, TEXT and WAIT\n     *\n     * You may also set cursor to the URL of an image file. The recommended size\n     * is 16x16 or 32x32 pixels. (Allowed File extensions: .cur, .gif, .jpg, .jpeg, .png)\n     *\n     * For more information on Native CSS cursors and url visit:\n     * https://developer.mozilla.org/en-US/docs/Web/CSS/cursor\n     *\n     * You may also set cursor to \"type, x, y\", where type is one of the types above,\n     * x is the horizontal active spot of the cursor (must be less than 32)\n     * and\n     * y is the vertical active spot of the cursor (must be less than 32)\n     * @type {string}\n     */\n    get cursor() {\n      return this.style.cursor;\n    }\n    set cursor(val) {\n      const { pInst } = this;\n      if (val === this.NONE) pInst.noCursor();\n      else if (Array.isArray(val)) pInst.cursor(...val);\n      else pInst.cursor(val);\n    }\n    /**\n     * The height of the canvas in pixels.\n     * @type {number}\n     */\n    get height() {\n      return this.pInst.height;\n    }\n    set height(val) {\n      if (val === this.height || isNaN(val)) return;\n      this.#resize(this.width, val);\n    }\n    get orderedAttributeNames() {\n      //  Remove 'is' and 'style' from attrNames\n      return super.orderedAttributeNames.filter(\n        (v) => v !== \"is\" && v != \"style\"\n      );\n    }\n    /**\n     * Array containing the values for all the pixels in the display window.\n     * These values are numbers. This array is the size (include an appropriate\n     * factor for pixel_density) of the display window x4,\n     * representing the R, G, B, A values in order for each pixel, moving from\n     * left to right across each row, then down each column. Retina and other\n     * high density displays may have more pixels (by a factor of\n     * pixel_density^2).\n     * For example, if the image is 100×100 pixels, there will be 40,000. With\n     * pixel_density = 2, there will be 160,000. The first four values\n     * (indices 0-3) in the array will be the R, G, B, A values of the pixel at\n     * (0, 0). The second four values (indices 4-7) will contain the R, G, B, A\n     * values of the pixel at (1, 0).\n     * @type {number[]}\n     */\n    get pixels() {\n      this.pInst.loadPixels();\n      return this.pInst.pixels;\n    }\n    set pixels(px) {\n      this.pInst.pixels = px;\n      this.pInst.updatePixels();\n    }\n    set loop(val) {\n      if (val) this.pInst.loop();\n      else this.pInst.noLoop();\n    }\n    #resize(w, h) {\n      if (w === this.width && h === this.height) return;\n      const { pInst } = this;\n      const props = {};\n      for (const key in pInst.drawingContext) {\n        const val = pInst.drawingContext[key];\n        if (typeof val !== \"object\" && typeof val !== \"function\") {\n          props[key] = val;\n        }\n      }\n      pInst.width = pInst._renderer.width = w;\n      pInst.height = pInst._renderer.height = h;\n      this.setAttribute(\"width\", w * pInst._pixelDensity);\n      this.setAttribute(\"height\", h * pInst._pixelDensity);\n      this.style.width = `${w}px`;\n      this.style.height = `${h}px`;\n      for (const savedKey in props) {\n        try {\n          pInst.drawingContext[savedKey] = props[savedKey];\n        } catch (err) {}\n      }\n      pInst.redraw();\n    }\n    /**\n     * The width of the canvas in pixels.\n     * @type {number}\n     */\n    get width() {\n      return this.pInst.width;\n    }\n    set width(val) {\n      if (val === this.width || isNaN(val)) return;\n      this.#resize(val, this.height);\n    }\n  };\n","export const addCanvasMethods = (baseClass) =>\n  class extends baseClass {\n    attributeInherited(attributeName) {\n      if (this.hasAttribute(attributeName)) return true;\n      return super.attributeInherited(attributeName);\n    }\n    runCode() {\n      const canvas = this;\n      const sketch = (pInst) => {\n        pInst.preload = () => pInst.loadAssets();\n\n        pInst.setup = function () {\n          canvas.setup(pInst, canvas);\n          //  Set default background to light gray\n          canvas.background = pInst.color(220);\n          pInst.assignCanvas(canvas, canvas.constructor.renderer);\n          // Set default dimensions (100, 100)\n          canvas.width = 100;\n          canvas.height = 100;\n        };\n        pInst.draw = function () {\n          if (canvas.orbit_control) canvas.pInst.orbitControl();\n          canvas.draw();\n        };\n      };\n      new p5(sketch);\n    }\n    render() {\n      this.pInst.background(this.background);\n    }\n  };\n","import { wrapMethod } from \"../utils/p5Modifiers\";\n\np5.prototype.window_resized = false;\nwrapMethod(\n  \"_onresize\",\n  (base) =>\n    function (e) {\n      base.call(this, e);\n      this._setProperty(\"window_resized\", true);\n    }\n);\np5.prototype.registerMethod(\"post\", function () {\n  this._setProperty(\"window_resized\", false);\n});\n\nclass Window {\n  #element;\n  constructor(element) {\n    this.#element = element;\n  }\n  get #pInst() {\n    return this.#element.pInst;\n  }\n  /**\n   * window_resized is true if the window was resized since the last frame\n   * and false if not (read-only)\n   * @type {boolean}\n   * @readonly\n   */\n  get resized() {\n    return this.#pInst.window_resized;\n  }\n  get width() {\n    return this.#pInst.windowWidth;\n  }\n  get height() {\n    return this.#pInst.windowHeight;\n  }\n}\n\nexport const addEnvironmentProps = (baseClass) =>\n  class extends baseClass {\n    get fullscreen() {\n      return this.pInst.fullscreen();\n    }\n    set fullscreen(val) {\n      this.pInst.fullscreen(val);\n    }\n    /**\n     * frame_rate specifies the number of frames to be displayed every second.\n     * For example,\n     * frame_rate=\"30\" will attempt to refresh 30 times a second.\n     * If the processor is not fast enough to maintain the specified rate, the\n     * frame rate will not be achieved. The default frame rate is\n     * based on the frame rate of the display (here also called \"refresh rate\"),\n     * which is set to 60 frames per second on most computers.\n     * A frame rate of 24\n     * frames per second (usual for movies) or above will be enough for smooth\n     * animations.\n     *\n     * The canvas must be rendered at least once for frame_rate to have a\n     * value.\n     * @type {number}\n     */\n    get frame_rate() {\n      return this.pInst._frameRate;\n    }\n    set frame_rate(val) {\n      this.pInst.frameRate(val);\n    }\n    /**\n     * pixel_density specifies the pixel scaling for high pixel density displays.\n     * By default pixel density is set to match display density, set pixel_density=\"1\"\n     * to turn this off.\n     * @type {number}\n     */\n    get pixel_density() {\n      return this.pInst.pixelDensity();\n    }\n    set pixel_density(val) {\n      this.pInst.pixelDensity(val);\n    }\n    /**\n     * The pixel density of the current display the sketch is running on. (read-only)\n     * @type {number}\n     * @readonly\n     */\n    get display_density() {\n      return this.pInst.displayDensity();\n    }\n    /**\n     * The delta_time property contains the time\n     * difference between the beginning of the previous frame and the beginning\n     * of the current frame in milliseconds.\n     *\n     * This variable is useful for creating time sensitive animation or physics\n     * calculation that should stay constant regardless of frame rate.\n     * (read-only)\n     * @readonly\n     * @type {number}\n     */\n    get delta_time() {\n      return this.pInst.deltaTime;\n    }\n    /**\n     * screen stores information about the screen displaying the canvas.\n     * To get the dimensions of the screen, use:\n     * ```\n     * screen.width\n     * screen.height\n     * ```\n     * screen is available in any browser and is not specific to this\n     * library.\n     * The full documentation is here:\n     * https://developer.mozilla.org/en-US/docs/Web/API/Screen\n     * (read-only)\n     * @readonly\n     */\n    get screen() {\n      return screen;\n    }\n    /**\n     * The window object provides information about the window containing the\n     * canvas.\n     * - window.width   - number: width of the window\n     * - window.height  - number: height of the window\n     * - window.resized - boolean: true if the window was resized since last\n     * frame\n     * @type {Object}\n     */\n    get window() {\n      return this.#window;\n    }\n    #window = new Window(this);\n    /**\n     * grid_output lays out the\n     * content of the canvas in the form of a grid (html table) based\n     * on the spatial location of each shape. A brief\n     * description of the canvas is available before the table output.\n     * This description includes: color of the background, size of the canvas,\n     * number of objects, and object types (example: \"lavender blue canvas is\n     * 200 by 200 and contains 4 objects - 3 ellipses 1 rectangle\"). The grid\n     * describes the content spatially, each element is placed on a cell of the\n     * table depending on its position. Within each cell an element the color\n     * and type of shape of that element are available (example: \"orange ellipse\").\n     * These descriptions can be selected individually to get more details.\n     * A list of elements where shape, color, location, and area are described\n     * (example: \"orange ellipse location=top left area=1%\") is also available.\n     *\n     * grid_output=\"true\" and grid_output=\"FALLBACK\"\n     * make the output available in\n     * <a href=\"https://developer.mozilla.org/en-US/docs/Web/API/Canvas_API/Tutorial/Hit_regions_and_accessibility\" target=\"_blank\">\n     * a sub DOM inside the canvas element</a> which is accessible to screen readers.\n     * grid_output=\"LABEL\" creates an\n     * additional div with the output adjacent to the canvas, this is useful\n     * for non-screen reader users that might want to display the output outside\n     * of the canvas' sub DOM as they code. However, using LABEL will create\n     * unnecessary redundancy for screen reader users. We recommend using LABEL\n     * only as part of the development process of a sketch and removing it before\n     * publishing or sharing with screen reader users.\n     * @type {true|LABEL|FALLBACK}\n     */\n    get grid_output() {\n      return this._accessibleOutputs.grid;\n    }\n    set grid_output(val) {\n      if (val === true) this.pInst.gridOutput();\n      else this.pInst.gridOutput(val);\n    }\n  };\n","import { addP5PropsAndMethods } from \"../core\";\nimport { addCanvasProperties } from \"../properties/canvas_props\";\nimport { addCanvasMethods } from \"../methods/canvas_methods\";\nimport { addEnvironmentProps } from \"../properties/environment_props\";\nimport {\n  add2DTransformProps,\n  add3DTransformProps,\n} from \"../properties/transform_props\";\nimport {\n  add2DTransformMethods,\n  add3DTransformMethods,\n} from \"../methods/transform_methods\";\n\n/**\n * The `<canvas>` element is a rectangular area of the window for rendering\n * imagery. All child elements are rendered to the canvas.\n *\n * This canvas will render 2D elements only. For a 3D canvas, use\n * ```<canvas-3d>```.\n */\nclass Canvas extends addCanvasMethods(\n  addCanvasProperties(\n    addP5PropsAndMethods(\n      addEnvironmentProps(\n        add2DTransformProps(add2DTransformMethods(HTMLCanvasElement))\n      )\n    )\n  )\n) {\n  static renderer = \"p2d\";\n\n  constructor() {\n    super();\n    window.addEventListener(\"customElementsDefined\", this.runCode.bind(this));\n  }\n}\ncustomElements.define(\"p-canvas\", Canvas, { extends: \"canvas\" });\n\n/**\n * The ```<canvas-3d>``` element is a ```<canvas>``` element\n * for rendering 3D elements.\n */\nclass WebGLCanvas extends addCanvasMethods(\n  addCanvasProperties(\n    addP5PropsAndMethods(\n      addEnvironmentProps(\n        add3DTransformProps(add3DTransformMethods(HTMLCanvasElement))\n      )\n    )\n  )\n) {\n  #bezier_detail;\n  #curve_detail;\n  #debug_mode;\n  #orbit_control;\n  static renderer = \"webgl\";\n  constructor() {\n    super();\n    window.addEventListener(\"customElementsDefined\", this.runCode.bind(this));\n  }\n  /**\n   * Sets the resolution at which Bezier's curve is displayed. The default value is 20.\n   * @type {number}\n   */\n  get bezier_detail() {\n    return this.#bezier_detail;\n  }\n  set bezier_detail(val) {\n    this.pInst.bezierDetail(val);\n    this.#bezier_detail = this.pInst._bezierDetail;\n  }\n  /**\n   * Sets the current (active) camera of a 3D sketch.\n   * Allows for switching between multiple cameras.\n   *\n   * Comma-separated arguments for\n   * <a href=\"https://p5js.org/reference/#/p5/camera\">camera()</a>\n   * may also be provided to adjust the current camera.\n   *\n   * @type {p5.Camera}\n   * */\n  get camera() {\n    return this.pInst._renderer._curCamera;\n  }\n  set camera(val) {\n    const { pInst } = this;\n    if (val instanceof p5.Camera) pInst.setCamera(val);\n    else if (Array.isArray(val)) pInst.camera(...val);\n    else pInst.camera(val);\n  }\n  /**\n   * Sets the resolution at which curves display. The default value is 20 while\n   * the minimum value is 3.\n   * @type {number}\n   */\n  get curve_detail() {\n    return this.#curve_detail;\n  }\n  set curve_detail(val) {\n    this.pInst.curveDetail(val);\n    this.#curve_detail = this.pInst._curveDetail;\n  }\n  /**\n   * debug_mode helps visualize 3D space by adding a grid to indicate where the\n   * ‘ground’ is in a sketch and an axes icon which indicates the +X, +Y, and +Z\n   * directions. This property can be set to \"true\" to create a\n   * default grid and axes icon, or it can be set to a comma-separated list\n   * of values to pass into\n   * <a href=\"https://p5js.org/reference/#/p5/debugMode\">debugMode()</a>.\n   *\n   * By default, the grid will run through the origin (0,0,0) of the sketch\n   * along the XZ plane\n   * and the axes icon will be offset from the origin.  Both the grid and axes\n   * icon will be sized according to the current canvas size.\n   * Note that because the\n   * grid runs parallel to the default camera view, it is often helpful to use\n   * debug_mode along with orbit_control to allow full view of the grid.\n   * @type {boolean}\n   */\n  get debug_mode() {\n    return this.#debug_mode;\n  }\n  set debug_mode(val) {\n    const { pInst } = this;\n    if (val === false) {\n      pInst.noDebugMode();\n      this.#debug_mode = false;\n      return;\n    } else if (val === true) pInst.debugMode();\n    else if (Array.isArray(val)) pInst.debugMode(...val);\n    else pInst.debugMode(val);\n    this.#debug_mode = true;\n  }\n  /**\n   * Allows movement around a 3D sketch using a mouse or trackpad.\n   * Left-clicking and dragging will rotate the camera position about the\n   * center of the sketch,\n   * right-clicking and dragging will pan the camera position without rotation,\n   * and using the mouse wheel (scrolling) will move the camera closer or\n   * further\n   * from the center of the sketch. This property can be set with parameters\n   * dictating sensitivity to mouse movement along the X, Y, and Z axes.\n   * Setting orbit_control=\"true\" is equivalent to setting\n   * orbit_control=\"1, 1\".\n   * To reverse direction of movement in either axis, enter a negative number\n   * for sensitivity.\n   * @type {boolean}\n   * */\n  get orbit_control() {\n    return this.#orbit_control;\n  }\n  set orbit_control(val) {\n    this.#orbit_control = val;\n  }\n  /**\n   * Sets an orthographic projection for the current camera in a 3D sketch\n   * and defines a box-shaped viewing frustum within which objects are seen.\n   * In this projection, all objects with the same dimension appear the same\n   * size, regardless of whether they are near or far from the camera.\n   *\n   * This may be set to a comma-separated list of arguments to\n   * <a href=\"https://p5js.org/reference/#/p5/ortho\">ortho()</a>\n   *\n   * If set to \"true\", the following default is used:\n   * ortho(-width/2, width/2, -height/2, height/2).\n   *\n   * @type {boolean}\n   */\n  set ortho(val) {\n    if (val === true) this.pInst.ortho();\n    else if (Array.isArray(val)) this.pInst.ortho(...val);\n    else if (val !== false) this.pInst.ortho(val);\n  }\n}\ncustomElements.define(\"p-canvas-3d\", WebGLCanvas, {\n  extends: \"canvas\",\n});\n","export const addBezierMethods = (baseClass) =>\n  class extends baseClass {\n    /**\n     * Evaluates the position on the bezier at t. t is the\n     * resultant point which is given between 0 (start of Bezier) and 1 (end of Bezier).\n     *\n     * @param {number} t - value between 0 and 1\n     * @returns {p5.Vector} - position on Bezier at t\n     */\n    point_at(t) {\n      const x = this.pInst.bezierPoint(this.x1, this.x2, this.x3, this.x4, t);\n      const y = this.pInst.bezierPoint(this.y1, this.y2, this.y3, this.y4, t);\n      return this.pInst.createVector(x, y);\n    }\n    /**\n     * Evaluates the tangent to the Bezier at position t.\n     * t is between 0 (start of Bezier) and 1 (end of Bezier).\n     * @param {number} t - value between 0 and 1\n     * @returns {p5.Vector} - tangent of Bezier at t\n     */\n    tangent_at(t) {\n      const x = this.pInst.bezierTangent(this.x1, this.x2, this.x3, this.x4, t);\n      const y = this.pInst.bezierTangent(this.y1, this.y2, this.y3, this.y4, t);\n      return this.pInst.createVector(x, y);\n    }\n  };\n\nexport const addCurveMethods = (baseClass) =>\n  class extends baseClass {\n    /**\n     * Evaluates the position on the curve at t.\n     * t is between 0 (start of curve) and 1 (end of curve).\n     *\n     * @param {number} t - value between 0 and 1\n     * @returns {p5.Vector} - position on curve at t\n     */\n    point_at(t) {\n      const x = this.pInst.curvePoint(this.x1, this.x2, this.x3, this.x4, t);\n      const y = this.pInst.curvePoint(this.y1, this.y2, this.y3, this.y4, t);\n      return this.pInst.createVector(x, y);\n    }\n    /**\n     * Evaluates the tangent to the curve at t.\n     * t is between 0 (start of curve) and 1 (end of curve).\n     *\n     * @param {number} t - value between 0 and 1\n     * @returns {p5.Vector} - tangent of curve at t\n     */\n    tangent_at(t) {\n      const x = this.pInst.curveTangent(this.x1, this.x2, this.x3, this.x4, t);\n      const y = this.pInst.curveTangent(this.y1, this.y2, this.y3, this.y4, t);\n      return this.pInst.createVector(x, y);\n    }\n  };\n","import { constants } from \"./constants\";\n\nexport const addStroke = (baseClass) =>\n  class extends baseClass {\n    #stroke = \"#000\";\n    #stroke_weight;\n    /**\n     * Sets the color used to draw lines and borders around shapes. This color\n     * is either a <a href=\"#/p5.Color\">p5.Color</a> object or a comma\n     * separated list of values to pass into\n     * <a href=\"https://p5js.org/reference/#/p5/color\">color()</a>.\n     * @type {p5.Color}\n     */\n    get stroke() {\n      return this.#stroke;\n    }\n    set stroke(val) {\n      const { pInst } = this;\n      if (val === constants.NONE) {\n        pInst.noStroke();\n        this.#stroke = pInst.color(0, 0);\n      } else {\n        pInst.stroke(val);\n        this.#stroke = pInst.color(\n          pInst._renderer.isP3D\n            ? pInst._renderer.curStrokeColor\n            : pInst.drawingContext.strokeStyle\n        );\n      }\n    }\n    /**\n     * Sets the width of the stroke used for lines, points and the border around\n     * shapes. All widths are set in units of pixels.\n     *\n     * Note that it is affected by any transformation or scaling that has\n     * been applied previously.\n     * @type {number}\n     */\n    get stroke_weight() {\n      return this.#stroke_weight;\n    }\n    set stroke_weight(val) {\n      this.pInst.strokeWeight(val);\n      this.#stroke_weight = this.pInst._renderer.isP3D\n        ? this.pInst._renderer.curStrokeWeight\n        : this.pInst.drawingContext.lineWidth;\n    }\n  };\nexport const addFill = (baseClass) =>\n  class extends baseClass {\n    #fill = \"#fff\";\n    /**\n     * Sets the color used to fill shapes. This may be a\n     * <a href=\"https://p5js.org/reference/#/p5.Color\">p5.Color</a> object or\n     * a comma separated list of values to pass into\n     * <a href=\"https://p5js.org/reference/#/p5/color\">color()</a>.\n     * @type {p5.Color}\n     */\n    get fill() {\n      return this.#fill;\n    }\n    set fill(val) {\n      const { pInst } = this;\n      if (val === constants.NONE) {\n        pInst.noFill();\n        this.#fill = pInst.color(0, 0);\n      } else {\n        pInst.fill(val);\n        this.#fill = pInst.color(\n          pInst._renderer.isP3D\n            ? pInst._renderer.curFillColor\n            : pInst.drawingContext.fillStyle\n        );\n      }\n    }\n  };\nexport const addFillStroke = (baseClass) =>\n  class extends addFill(addStroke(baseClass)) {};\n\nexport const addColorVals = (baseClass) =>\n  class extends baseClass {\n    #v1;\n    #v2;\n    #v3;\n    /**\n     * red or hue value using current color_mode\n     * @type {number}\n     */\n    get v1() {\n      return this.#v1;\n    }\n    set v1(val) {\n      this.#v1 = val;\n    }\n    /**\n     * green or saturation value using current color_mode\n     * @type {number}\n     */\n    get v2() {\n      return this.#v2;\n    }\n    set v2(val) {\n      this.#v2 = val;\n    }\n    /**\n     * blue, brightness, or lightness value using current color_mode\n     * @type {number}\n     */\n    get v3() {\n      return this.#v3;\n    }\n    set v3(val) {\n      this.#v3 = val;\n    }\n  };\n","export const addWidthHeight = (baseClass) =>\n  class extends baseClass {\n    #width;\n    #height;\n    /**\n     * The width of the element in pixels.\n     * @type {number}\n     */\n    get width() {\n      return this.#width;\n    }\n    set width(val) {\n      if (!isNaN(val)) this.#width = Number(val);\n      else\n        console.error(\n          `${this.tagName}'s width is being set to ${val}, but it may only be set to a number.`\n        );\n    }\n    /**\n     * The height of the element in pixels.\n     * @type {number}\n     */\n    get height() {\n      return this.#height;\n    }\n    set height(val) {\n      if (!isNaN(val)) this.#height = Number(val);\n      else\n        console.error(\n          `${this.tagName}'s height is being set to ${val}, but it may only be set to a number.`\n        );\n    }\n  };\nexport const addXY = (baseClass) =>\n  class extends baseClass {\n    #x = 0;\n    #y = 0;\n    /**\n     * The x-coordinate of the element relative to the current anchor.\n     * @type {number}\n     */\n    get x() {\n      return this.#x;\n    }\n    set x(val) {\n      if (!isNaN(val)) this.#x = Number(val);\n      else\n        console.error(\n          `${this.tagName}'s x property is being set to ${val}, but it may only be set to a number`\n        );\n    }\n    /**\n     * The y-coordinate of the element relative to the current anchor.\n     * @type {number}\n     */\n    get y() {\n      return this.#y;\n    }\n    set y(val) {\n      if (!isNaN(val)) this.#y = Number(val);\n      else\n        console.error(\n          `${this.tagName}'s y property is being set to ${val}, but it may only be set to a number`\n        );\n    }\n  };\n\nconst addZ = (baseClass) =>\n  class extends baseClass {\n    #z = 0;\n    /**\n     * The z-coordinate of the element relative to the current anchor.\n     * @type {number}\n     */\n    get z() {\n      return this.#z;\n    }\n    set z(val) {\n      if (!isNaN(val)) this.#z = Number(val);\n      else\n        console.error(\n          `${this.tagName}'s z property is being set to ${val}, but it may only be set to a number`\n        );\n    }\n  };\nexport const addXYZ = (baseClass) => class extends addXY(addZ(baseClass)) {};\n\nconst addXY1 = (baseClass) =>\n  class extends baseClass {\n    #x1 = 0;\n    #y1 = 0;\n    /**\n     * The first x-coordinate of the element relative to the current anchor.\n     * @type {number}\n     */\n    get x1() {\n      return this.#x1;\n    }\n    set x1(val) {\n      if (!isNaN(val)) this.#x1 = val;\n      else\n        console.error(\n          `${this.tagName}'s x1 is being set to ${val}, but it may only be set to a number.`\n        );\n    }\n    /**\n     * The first y-coordinate of the element relative to the current anchor.\n     * @type {number}\n     */\n    get y1() {\n      return this.#y1;\n    }\n    set y1(val) {\n      if (!isNaN(val)) this.#y1 = val;\n      else\n        console.error(\n          `${this.tagName}'s y1 is being set to ${val}, but it may only be set to a number.`\n        );\n    }\n  };\nconst addXY2 = (baseClass) =>\n  class extends baseClass {\n    #x2 = 0;\n    #y2 = 100;\n    /**\n     * The second x-coordinate of the element relative to the current anchor.\n     * @type {number}\n     */\n    get x2() {\n      return this.#x2;\n    }\n    set x2(val) {\n      if (!isNaN(val)) this.#x2 = val;\n      else\n        console.error(\n          `${this.tagName}'s x2 is being set to ${val}, but it may only be set to a number.`\n        );\n    }\n    /**\n     * The second y-coordinate of the element relative to the current anchor.\n     * @type {number}\n     */\n    get y2() {\n      return this.#y2;\n    }\n    set y2(val) {\n      if (!isNaN(val)) this.#y2 = val;\n      else\n        console.error(\n          `${this.tagName}'s y2 is being set to ${val}, but it may only be set to a number.`\n        );\n    }\n  };\n\nexport const addXY12 = (baseClass) =>\n  class extends addXY1(addXY2(baseClass)) {};\nexport const addXY3 = (baseClass) =>\n  class extends baseClass {\n    #x3 = 100;\n    #y3 = 0;\n    /**\n     * The third x-coordinate of the element relative to the current anchor.\n     * @type {number}\n     */\n    get x3() {\n      return this.#x3;\n    }\n    set x3(val) {\n      if (!isNaN(val)) this.#x3 = val;\n      else\n        console.error(\n          `${this.tagName}'s x3 is being set to ${val}, but it may only be set to a number.`\n        );\n    }\n    /**\n     * The third y-coordinate of the element relative to the current anchor.\n     * @type {number}\n     */\n    get y3() {\n      return this.#y3;\n    }\n    set y3(val) {\n      if (!isNaN(val)) this.#y3 = val;\n      else\n        console.error(\n          `${this.tagName}'s y3 is being set to ${val}, but it may only be set to a number.`\n        );\n    }\n  };\n\nconst addXY123 = (baseClass) => class extends addXY12(addXY3(baseClass)) {};\n\nconst addZ1 = (baseClass) =>\n  class extends baseClass {\n    #z1 = 0;\n    /**\n     * The first z-coordinate of the element relative to the current anchor. |\n     * @type {number}\n     */\n    get z1() {\n      return this.#z1;\n    }\n    set z1(val) {\n      if (!isNaN(val)) this.#z1 = val;\n      else\n        console.error(\n          `${this.tagName}'s z1 is being set to ${val}, but it may only be set to a number.`\n        );\n    }\n  };\nexport const addXYZ1 = (baseClass) => class extends addXY1(addZ1(baseClass)) {};\nconst addZ2 = (baseClass) =>\n  class extends baseClass {\n    #z2 = 100;\n    /**\n     * The second z-coordinate of the element relative to the current anchor. |\n     * @type {number}\n     */\n    get z2() {\n      return this.#z2;\n    }\n    set z2(val) {\n      if (!isNaN(val)) this.#z2 = val;\n      else\n        console.error(\n          `${this.tagName}'s z2 is being set to ${val}, but it may only be set to a number.`\n        );\n    }\n  };\nexport const addXYZ2 = (baseClass) => class extends addXY2(addZ2(baseClass)) {};\nconst addXYZ12 = (baseClass) => class extends addXYZ1(addXYZ2(baseClass)) {};\n\nexport const addXY4 = (baseClass) =>\n  class extends addXY123(baseClass) {\n    #x4 = 0;\n    #y4 = 100;\n    /**\n     * The fourth x-coordinate of the element relative to the current anchor.\n     * @type {number}\n     */\n    get x4() {\n      return this.#x4;\n    }\n    set x4(val) {\n      if (!isNaN(val)) this.#x4 = val;\n      else\n        console.error(\n          `${this.tagName}'s x4 is being set to ${val}, but it may only be set to a number.`\n        );\n    }\n    /**\n     * The fourth y-coordinate of the element relative to the current anchor.\n     * @type {number}\n     */\n    get y4() {\n      return this.#y4;\n    }\n    set y4(val) {\n      if (!isNaN(val)) this.#y4 = val;\n      else\n        console.error(\n          `${this.tagName}'s y4 is being set to ${val}, but it may only be set to a number.`\n        );\n    }\n  };\n\nexport const addZ3 = (baseClass) =>\n  class extends baseClass {\n    #z3 = 100;\n    /**\n     * The third z-coordinate of the element relative to the current anchor. |\n     * @type {number}\n     */\n    get z3() {\n      return this.#z3;\n    }\n    set z3(val) {\n      if (!isNaN(val)) this.#z3 = val;\n      else\n        console.error(\n          `${this.tagName}'s z3 is being set to ${val}, but it may only be set to a number.`\n        );\n    }\n  };\nexport const addXYZ3 = (baseClass) => class extends addXY3(addZ3(baseClass)) {};\nexport const addXYZ123 = (baseClass) =>\n  class extends addXYZ12(addXY3(addZ3(baseClass))) {};\n\nexport const addZ4 = (baseClass) =>\n  class extends baseClass {\n    #z4 = 0;\n    /**\n     * The fourth z-coordinate of the element relative to the current anchor. |\n     * @type {number}\n     */\n    get z4() {\n      return this.#z4;\n    }\n    set z4(val) {\n      if (!isNaN(val)) this.#z4 = val;\n      else\n        console.error(\n          `${this.tagName}'s z4 is being set to ${val}, but it may only be set to a number.`\n        );\n    }\n  };\nexport const addXYZ4 = (baseClass) => class extends addXY4(addZ4(baseClass)) {};\n\nexport const addRectMode = (baseClass) =>\n  class extends baseClass {\n    #rect_mode = \"corner\";\n    /**\n     * Modifies the location from which rectangles are drawn by changing the way\n     * in which x and y coordinates are interpreted.\n     *\n     * The default mode is CORNER, which interprets the x and y as the\n     * upper-left corner of the shape.\n     *\n     * rect_mode=\"CORNERS\" interprets x and y as the location of\n     * one of the corners, and width and height as the location of\n     * the diagonally opposite corner. Note, the rectangle is drawn between the\n     * coordinates, so it is not necessary that the first corner be the upper left\n     * corner.\n     *\n     * rect_mode=\"CENTER\" interprets x and y as the shape's center\n     * point.\n     *\n     * rect_mode=\"RADIUS\" also uses x and y as the shape's\n     * center\n     * point, but uses width and height to specify half of the shape's\n     * width and height respectively.\n     *\n     * The value to this property must be written in ALL CAPS because they are\n     * predefined as constants in ALL CAPS.\n     *\n     * @type {CORNER|CORNERS|CENTER|RADIUS}\n     */\n    get rect_mode() {\n      return this.#rect_mode;\n    }\n    set rect_mode(mode) {\n      this.pInst.rectMode(mode);\n      this.#rect_mode = this.pInst._renderer._rectMode;\n    }\n  };\n\nexport const add2DStrokeStyling = (baseClass) =>\n  class extends baseClass {\n    #smooth = true;\n    #stroke_cap = \"round\";\n    #stroke_join = \"miter\";\n    /**\n     * smooth=\"true\" draws all geometry with smooth (anti-aliased) edges. smooth=\"true\" will also\n     * improve image quality of resized images. smooth is true by\n     * default on a 2D canvas. smooth=\"false\" can be used to disable smoothing of geometry,\n     * images, and fonts.\n     * @type {boolean}\n     */\n    get smooth() {\n      return this.#smooth;\n    }\n    set smooth(val) {\n      if (typeof val !== \"boolean\")\n        return console.error(\n          `${this.tagName}'s smooth property is being set to ${val}, but it may only be set to true or false.`\n        );\n      if (val) this.pInst.smooth();\n      else this.pInst.noSmooth();\n      this.#smooth = val;\n    }\n    /**\n     * Sets the style for rendering line endings. These ends are either rounded,\n     * squared or extended, each of which specified with the corresponding\n     * parameters: ROUND, SQUARE and PROJECT. The default cap is ROUND.\n     *\n     * The value on this property must be written in ALL CAPS because they are\n     * predefined as constants in ALL CAPS.\n     * @type {ROUND|SQUARE|PROJECT}\n     */\n    get stroke_cap() {\n      return this.#stroke_cap;\n    }\n    set stroke_cap(val) {\n      this.pInst.strokeCap(val);\n      this.#stroke_cap = this.pInst.drawingContext.lineCap;\n    }\n    /**\n     * Sets the style of the joints which connect line segments. These joints\n     * are either mitered, beveled or rounded and specified with the\n     * corresponding parameters MITER, BEVEL and ROUND. The default joint is\n     * MITER.\n     *\n     * The parameter to this method must be written in ALL CAPS because they are\n     * predefined as constants in ALL CAPS.\n     * @type {MITER|BEVEL|ROUND}\n     */\n    get stroke_join() {\n      return this.#stroke_join;\n    }\n    set stroke_join(val) {\n      this.pInst.strokeJoin(val);\n      this.#stroke_join = this.pInst.drawingContext.lineJoin;\n    }\n  };\n\nexport const addCurveTightness = (baseClass) =>\n  class extends baseClass {\n    #tightness = 0;\n    /**\n     * Modifies the quality of the curve. The amount\n     * determines how the curve fits to the vertex points. The value 0.0 is the\n     * default value (this value defines the curves to be Catmull-Rom\n     * splines) and the value 1.0 connects all the points with straight lines.\n     * Values within the range -5.0 and 5.0 will deform the curves but will leave\n     * them recognizable and as values increase in magnitude, they will continue to deform.\n     * @type {number}\n     */\n    get tightness() {\n      return this.#tightness;\n    }\n    set tightness(val) {\n      this.#tightness = val;\n    }\n  };\n\nexport const addCXY = (baseClass) =>\n  class extends baseClass {\n    #cx;\n    #cy;\n    get cx() {\n      return this.#cx;\n    }\n    set cx(val) {\n      this.#cx = val;\n    }\n    get cy() {\n      return this.#cy;\n    }\n    set cy(val) {\n      this.#cy = val;\n    }\n  };\n\nexport const addCXYZ = (baseClass) =>\n  class extends baseClass {\n    #cz;\n    get cz() {\n      return this.#cz;\n    }\n    set cz(val) {\n      this.#cz = val;\n    }\n  };\n","import { RenderedElement } from \"../core\";\nimport { addBezierMethods, addCurveMethods } from \"../methods/shape_methods\";\nimport { addStroke, addFillStroke } from \"../properties/color_props\";\nimport {\n  addXY,\n  addXYZ,\n  addXY12,\n  addWidthHeight,\n  addRectMode,\n  add2DStrokeStyling,\n  addCurveTightness,\n  addCXY,\n  addXY3,\n  addXY4,\n} from \"../properties/shape_props\";\nimport { collider_type } from \"../methods/collide_methods\";\nimport { add2DTransformProps } from \"../properties/transform_props\";\nimport { add2DTransformMethods } from \"../methods/transform_methods\";\n\nconst add2DStroke = (baseClass) => addStroke(add2DStrokeStyling(baseClass));\nconst add2DFillStroke = (baseClass) =>\n  addFillStroke(add2DStrokeStyling(baseClass));\n\nconst transformVertexFn = (el) => (v) => {\n  const { x, y } = el.local_to_canvas_position(v.x, v.y);\n  return el.pInst.createVector(x, y);\n};\n\nclass Transformed2DElement extends add2DTransformProps(\n  add2DTransformMethods(RenderedElement)\n) {}\n\nexport const addArcProps = (baseClass) =>\n  class extends baseClass {\n    #start_angle = 0;\n    #stop_angle = Math.PI;\n    #mode;\n    get mouse_over() {\n      const { x: local_mouse_x, y: local_mouse_y } =\n        this.canvas_to_local_position(mouseX, mouseY);\n      const { x, y, width, height, start_angle, stop_angle } = this;\n      console.assert(\n        width === height,\n        \"mouse_over currently only works for arc's with equal width and height.\"\n      );\n      const arcRadius = width / 2;\n      const arcAngle = stop_angle - start_angle;\n      const arcRotation = start_angle + arcAngle / 2;\n\n      return this.collide.point_arc(\n        local_mouse_x,\n        local_mouse_y,\n        x,\n        y,\n        arcRadius,\n        arcRotation,\n        arcAngle\n      );\n    }\n    /**\n     * Angle to start the arc. Units are radians by default but may be changed\n     * to degrees with the degree_mode property.\n     * @type {number}\n     */\n    get start_angle() {\n      return this.#start_angle;\n    }\n    set start_angle(val) {\n      this.#start_angle = val;\n    }\n    /**\n     * Angle to stop the arc. Units are radians by default but may be changed\n     * to degrees with the degree_mode property.\n     * @type {number}\n     */\n    get stop_angle() {\n      return this.#stop_angle;\n    }\n    set stop_angle(val) {\n      this.#stop_angle = val;\n    }\n    /**\n     * determines the way of drawing the arc:\n     * - OPEN - like an open semi-circle\n     * - CHORD - closed semi-circle\n     * - PIE - closed pie segment\n     * @type {CHORD|PIE|OPEN}\n     */\n    get mode() {\n      return this.#mode;\n    }\n    set mode(val) {\n      this.#mode = val;\n    }\n  };\n/**\n * Draws an arc to the screen.\n * The origin may be changed with the ellipse_mode property.\n *\n * The arc is always drawn clockwise from wherever start falls to wherever\n * stop falls on the ellipse. Adding or subtracting TWO_PI to either angle\n * does not change where they fall. If both start and stop fall at the same\n * place, a full ellipse will be drawn. Be aware that the y-axis increases in\n * the downward direction, therefore angles are measured clockwise from the\n * positive x-direction (\"3 o'clock\").\n * @element arc\n */\nclass Arc extends addXY(\n  addWidthHeight(addArcProps(add2DFillStroke(Transformed2DElement)))\n) {\n  static overloads = [\"x, y, width, height, start_angle, stop_angle, [mode]\"];\n}\ncustomElements.define(\"p-arc\", Arc);\n\nconst addEllipse2DCollisionProps = (baseClass) =>\n  class extends baseClass {\n    collider = collider_type.ellipse;\n    get collision_args() {\n      const { x, y } = this.local_to_canvas_position(this.x, this.y);\n      const { pixel_density } = this.canvas;\n      const { w } = this.width * pixel_density;\n      const { h } = this.height * pixel_density || w;\n      return [x, y, w, h];\n    }\n    get mouse_over() {\n      const { x: local_mouse_x, y: local_mouse_y } =\n        this.canvas_to_local_position(mouseX, mouseY);\n      const { x, y, width, height } = this.this_element;\n      return this.collide.point_ellipse(\n        local_mouse_x,\n        local_mouse_y,\n        x,\n        y,\n        width,\n        height\n      );\n    }\n  };\n/**\n * Draws an ellipse (oval) to a 3D canvas. If no height is specified, the\n * value of width is used for both the width and height. If a\n * negative height or width is specified, the absolute value is taken.\n *\n * An ellipse with equal width and height is a circle. The origin may be\n * changed with the ellipseMode() function.\n * @element ellipse\n */\nclass Ellipse extends addXY(\n  addWidthHeight(\n    addFillStroke(addEllipse2DCollisionProps(Transformed2DElement))\n  )\n) {\n  static overloads = [\"x, y, width, [height]\"];\n}\ncustomElements.define(\"p-ellipse\", Ellipse);\n\nconst addCircle2DCollisionProps = (baseClass) =>\n  class extends baseClass {\n    constructor() {\n      super([\"x, y, d\"]);\n    }\n    collider = collider_type.circle;\n    get collision_args() {\n      const { x, y } = this.local_to_canvas_position(this.x, this.y);\n      const scaledDiameter =\n        this.diameter * this.pInst.pow(this.canvas.pixel_density, 2);\n      return [x, y, scaledDiameter];\n    }\n    get mouse_over() {\n      const { mouseX, mouseY } = this.pInst;\n      const { x: local_mouse_x, y: local_mouse_y } =\n        this.canvas_to_local_position(mouseX, mouseY);\n      const { x, y, diameter } = this;\n      return this.collide.point_circle(\n        local_mouse_x,\n        local_mouse_y,\n        x,\n        y,\n        diameter\n      );\n    }\n  };\nexport const addDiameter = (baseClass) =>\n  class extends baseClass {\n    #diameter = 100;\n    get diameter() {\n      return this.#diameter;\n    }\n    set diameter(val) {\n      this.#diameter = val;\n    }\n  };\n/**\n * Draws a circle to the screen. A circle is a simple closed shape. It is the\n * set of all points in a plane that are at a given distance from a given\n * point, the center.\n * @element circle\n */\nclass Circle extends addXY(\n  addDiameter(add2DFillStroke(addCircle2DCollisionProps(Transformed2DElement)))\n) {\n  static overloads = [\"x, y, diameter\"];\n}\ncustomElements.define(\"p-circle\", Circle);\n\nconst addLine2DCollisionProps = (baseClass) =>\n  class extends baseClass {\n    collider = collider_type.line;\n    get collision_args() {\n      const { x: x1, y: y1 } = this.local_to_canvas_position(this.x1, this.y1);\n      const { x: x2, y: y2 } = this.local_to_canvas_position(this.x2, this.y2);\n      return [x1, y1, x2, y2];\n    }\n    get mouse_over() {\n      const { x: local_mouse_x, y: local_mouse_y } =\n        this.canvas_to_local_position(mouseX, mouseY);\n      const { x1, y1, x2, y2 } = this;\n      return this.collide.point_line(\n        local_mouse_x,\n        local_mouse_y,\n        x1,\n        y1,\n        x2,\n        y2\n      );\n    }\n  };\n/**\n * Draws a line (a direct path between two points) to the screen. Its width\n * can be modified by using the stroke_weight property. A line cannot be\n * filled, therefore the fill_color property will not affect the color of a\n * line. So to color a line, use the stroke property.\n * @element line\n */\nclass Line extends addXY12(\n  add2DStroke(addLine2DCollisionProps(Transformed2DElement))\n) {\n  static overloads = [\"x1, y1, x2, y2\"];\n}\ncustomElements.define(\"p-line\", Line);\n\nconst addPointCollisionProps = (baseClass) =>\n  class extends baseClass {\n    collider = collider_type.circle;\n    get collision_args() {\n      const { x, y } = this.local_to_canvas_position(this.x, this.y);\n      const { stroke_weight } = this;\n      const { pixel_density } = this.canvas;\n      const d = stroke_weight * this.pInst.pow(pixel_density, 2);\n      return [x, y, d];\n    }\n    get mouse_over() {\n      const { x, y, stroke_weight } = this;\n      const { pixel_density } = this.canvas;\n      const { x: local_mouse_x, y: local_mouse_y } =\n        this.canvas_to_local_position(this.pInst.mouseX, this.pInst.mouseY);\n      const d = stroke_weight * this.pInst.pow(pixel_density, 2);\n      return this.collide.point_circle(local_mouse_x, local_mouse_y, x, y, d);\n    }\n  };\n/**\n * Draws a point, a coordinate in space at the dimension of one pixel. The\n * color of the point is changed with the stroke property. The size of\n * the point can be changed with the stroke_weight property.\n * @element point\n */\nclass Point extends addXY(\n  add2DStroke(addPointCollisionProps(Transformed2DElement))\n) {\n  static overloads = [\"x, y\"];\n}\ncustomElements.define(\"p-point\", Point);\n\nconst addQuad2DCollisionProps = (baseClass) =>\n  class extends baseClass {\n    collider = collider_type.poly;\n    get collision_args() {\n      return [this.vertices.map(transformVertexFn(this))];\n    }\n    get mouse_over() {\n      const { x: local_mouse_x, y: local_mouse_y } =\n        this.canvas_to_local_position(this.pInst.mouseX, this.pInst.mouseY);\n      return this.collide.point_poly(\n        local_mouse_x,\n        local_mouse_y,\n        this.vertices\n      );\n    }\n    get vertices() {\n      const { x1, y1, x2, y2, x3, y3, x4, y4 } = this;\n      return [\n        this.pInst.createVector(x1, y1),\n        this.pInst.createVector(x2, y2),\n        this.pInst.createVector(x3, y3),\n        this.pInst.createVector(x4, y4),\n      ];\n    }\n  };\n/**\n * Draws a quad on the canvas. A quad is a quadrilateral, a four-sided\n * polygon. It is similar to a rectangle, but the angles between its edges\n * are not constrained to ninety degrees. The x1 and y1 properties set the\n * first vertex and the subsequent pairs should proceed clockwise or\n * counter-clockwise around the defined shape.\n * @element quad\n */\nclass Quad extends addXY12(\n  addXY3(addXY4(add2DFillStroke(addQuad2DCollisionProps(Transformed2DElement))))\n) {\n  static overloads = [\"x1, y1, x2, y2, x3, y3, x4, y4\"];\n}\ncustomElements.define(\"p-quad\", Quad);\nconst addCornerRadius = (baseClass) =>\n  class extends baseClass {\n    #top_left_radius = 0;\n    #top_right_radius = 0;\n    #bottom_left_radius = 0;\n    #bottom_right_radius = 0;\n    /**\n     * radius of top-left corner\n     * @type {number}\n     */\n    get top_left_radius() {\n      return this.#top_left_radius;\n    }\n    set top_left_radius(val) {\n      this.#top_left_radius = val;\n    }\n    /**\n     * radius of top-right corner\n     * @type {number}\n     */\n    get top_right_radius() {\n      return this.#top_right_radius;\n    }\n    set top_right_radius(val) {\n      this.#top_right_radius = val;\n    }\n    /**\n     * radius of bottom-left corner\n     * @type {number}\n     */\n    get bottom_left_radius() {\n      return this.#bottom_left_radius;\n    }\n    set bottom_left_radius(val) {\n      this.#bottom_left_radius = val;\n    }\n    /**\n     * radius of bottom-right corner\n     * @type {number}\n     */\n    get bottom_right_radius() {\n      return this.#bottom_right_radius;\n    }\n    set bottom_right_radius(val) {\n      this.#bottom_right_radius = val;\n    }\n  };\n/**\n * Draws a rectangle on the canvas. A rectangle is a four-sided closed shape\n * with every angle at ninety degrees. By default, the x and y properties\n * set the location of the upper-left corner, w sets the width, and h sets\n * the height. The way these properties are interpreted may be changed with\n * the rect_mode property.\n * @element rect\n */\nclass Rect extends addXY(\n  addWidthHeight(\n    addRectMode(addCornerRadius(add2DFillStroke(Transformed2DElement)))\n  )\n) {\n  static overloads = [\n    \"x, y, width, height, top_left_radius, top_right_radius, bottom_right_radius, bottom_left_radius\",\n  ];\n  collider = collider_type.rect;\n  get collision_args() {\n    const { rect_mode } = this;\n    const { pixel_density } = this.canvas;\n    const w = this.width * this.pInst.pow(pixel_density, 2);\n    const h = this.height * this.pInst.pow(pixel_density, 2);\n    if (rect_mode === \"corner\") {\n      const { x, y } = this.local_to_canvas_position(this.x, this.y);\n      return [x, y, w, h];\n    }\n    if (rect_mode === \"center\") {\n      const { x, y } = this.local_to_canvas_position(\n        this.x - this.width / 2,\n        this.y - this.height / 2\n      );\n      return [x, y, w, h];\n    }\n    console.error(\n      `Collision detection with rect_mode ${rect_mode} is not yet supported`\n    );\n  }\n  get mouse_over() {\n    const { x: local_mouse_x, y: local_mouse_y } =\n      this.canvas_to_local_position(this.pInst.mouseX, this.pInst.mouseY);\n    const { x, y, width, height } = this;\n    return this.collide.point_rect(\n      local_mouse_x,\n      local_mouse_y,\n      x,\n      y,\n      width,\n      height\n    );\n  }\n}\ncustomElements.define(\"p-rect\", Rect);\n/**\n * Draws a square to the screen. A square is a four-sided shape with every\n * angle at ninety degrees, and equal side size. This element is a special\n * case of the rect element, where the width and height are the same, and the\n * attribute is called \"s\" for side size. By default, the x and y attributes\n * set the location of the upper-left corner, and s sets the side size of the\n * square. The way these attributes are interpreted, may be changed with the\n * rect_mode attribute.\n *\n * The tl, tr, br, and bl attributes, if specified, determine corner radius\n * for the top-left, top-right, lower-right and lower-left corners,\n * respectively. An omitted corner radius attribute is set to the value of\n * the previously specified radius value in the attribute list.\n *\n * @element square\n */\nclass Square extends addXY(\n  addRectMode(addCornerRadius(add2DFillStroke(Transformed2DElement)))\n) {\n  #size = 100;\n  static overloads = [\n    \"x, y, size, top_left_radius, top_right_radius, bottom_right_radius, bottom_left_radius\",\n  ];\n  collider = collider_type.rect;\n  get collision_args() {\n    const { pixel_density } = this.canvas;\n    const { size, rect_mode } = this;\n    const w = size * this.pInst.pow(pixel_density, 2);\n    const h = w;\n    if (rect_mode === \"corner\") {\n      const { x, y } = this.local_to_canvas_position(this.x, this.y);\n      return [x, y, w, h];\n    }\n    if (rect_mode === \"center\") {\n      const { x, y } = this.local_to_canvas_position(\n        this.x - size / 2,\n        this.y - this.size / 2\n      );\n      return [x, y, w, h];\n    }\n    console.error(\n      `Collision detection for rect_mode ${rect_mode} is not yet supported`\n    );\n    return [];\n  }\n  get mouse_over() {\n    const { x: local_mouse_x, y: local_mouse_y } =\n      this.canvas_to_local_position(this.pInst.mouseX, this.pInst.mouseY);\n    const { x, y, size } = this;\n    return this.collide.point_rect(\n      local_mouse_x,\n      local_mouse_y,\n      x,\n      y,\n      size,\n      size\n    );\n  }\n  /**\n   * The side size of the square\n   * @type {number}\n   */\n  get size() {\n    return this.#size;\n  }\n  set size(val) {\n    if (!isNaN(val)) this.#size = Number(val);\n    else\n      console.error(\n        `${this.tagName}'s size is being set to ${val}, but it may only be set to a number.`\n      );\n  }\n}\ncustomElements.define(\"p-square\", Square);\n/**\n * Draws a triangle to the canvas. A triangle is a plane created by connecting\n * three points. x1 and y1 specify the first point, x2 and y2 specify the\n * second point, and x3 and y3 specify the\n * third point.\n * @element triangle\n */\nclass Triangle extends addXY12(addXY3(add2DFillStroke(Transformed2DElement))) {\n  static overloads = [\"x1, y1, x2, y2, x3, y3\"];\n  collider = collider_type.poly;\n  get collision_args() {\n    return [this.vertices.map(transformVertexFn(this))];\n  }\n  get mouse_over() {\n    const { x: local_mouse_x, y: local_mouse_y } =\n      this.canvas_to_local_position(this.pInst.mouseX, this.pInst.mouseY);\n    const { x1, y1, x2, y2, x3, y3 } = this;\n    return this.collide.point_triangle(\n      local_mouse_x,\n      local_mouse_y,\n      x1,\n      y1,\n      x2,\n      y2,\n      x3,\n      y3\n    );\n  }\n  get vertices() {\n    const { x1, y1, x2, y2, x3, y3 } = this;\n    return [\n      this.pInst.createVector(x1, y1),\n      this.pInst.createVector(x2, y2),\n      this.pInst.createVector(x3, y3),\n    ];\n  }\n}\ncustomElements.define(\"p-triangle\", Triangle);\n\n/**\n * Draws a cubic Bezier curve on the screen. These curves are defined by a\n * series of anchor and control points. x1 and y1 specify\n * the first anchor point and x4 and y4 specify the other\n * anchor point, which become the first and last points on the curve. (x2, y2)\n * and (x3, y3) specify the two control points which define the shape\n * of the curve. Approximately speaking, control points \"pull\" the curve\n * towards them.\n *\n * Bezier curves were developed by French automotive engineer Pierre Bezier,\n * and are commonly used in computer graphics to define gently sloping curves.\n * @element bezier\n */\nclass Bezier extends addXY12(\n  addXY3(addXY4(add2DFillStroke(addBezierMethods(RenderedElement))))\n) {\n  static overloads = [\"x1, y1, x2, y2, x3, y3, x4, y4\"];\n}\ncustomElements.define(\"p-bezier\", Bezier);\n\n/**\n * Draws a curved line on the screen between two points, given as (x2, y2) and (x3, y3).\n * (x1, y1) is a control point, as\n * if the curve came from this point even though it's not drawn. (x4, y4) similarly describes\n * the other control point.\n *\n * Longer curves can be created by putting a series of ```<curve>``` elements\n * together or using ```<curve-vertex>```. The curve_tightness property provides control\n * for the visual quality of the curve.\n * The ```<curve>``` element is an implementation of Catmull-Rom splines.\n * @element curve\n */\nclass Curve extends addXY12(\n  addXY3(\n    addXY4(\n      addCurveTightness(add2DFillStroke(addCurveMethods(Transformed2DElement)))\n    )\n  )\n) {\n  static overloads = [\"x1, y1, x2, y2, x3, y3, x4, y4\"];\n}\ncustomElements.define(\"p-curve\", Curve);\n/**\n * Use the ```<contour>``` element to create negative shapes\n * within a ```<shape>``` element such as the center of the letter 'O'.\n * The vertices of the ```<contour>``` are defined by its\n * ```<vertex>``` and ```<curve-vertex>``` children.\n * The vertices that define a negative shape must \"wind\" in the opposite direction\n * from the exterior shape. First draw vertices for the exterior clockwise order, then for internal shapes, draw vertices\n * shape in counter-clockwise.\n *\n * This element must be a child of a ```<shape>```.\n * @element contour\n * @example Rectangular cut out\n * ```html\n * <canvas\n *    width=\"400\"\n *    height=\"400\"\n *    background=\"120, 140, 80\"\n *    loop=\"false\"\n * >\n *  <shape\n *      anchor=\"width/2, height/2\"\n *      mode=\"CLOSE\"\n *      fill=\"240, 200, 180\"\n *      stroke=\"200, 100, 60\"\n *      stroke_weight=\"4\"\n *  >\n *    <vertex x=\"-100\" y=\"-100\">\n *      <vertex x=\"100\">\n *        <vertex y=\"100\">\n *          <vertex x=\"-100\" />\n *        </vertex>\n *      </vertex>\n *    </vertex>\n *    <contour>\n *      <vertex x=\"-50\" y=\"-50\">\n *        <vertex y=\"50\">\n *          <vertex x=\"50\">\n *            <vertex y=\"-50\" />\n *          </vertex>\n *        </vertex>\n *      </vertex>\n *    </contour>\n *  </shape>\n * </canvas>\n * ```\n */\nclass Contour extends add2DFillStroke(RenderedElement) {\n  renderFunctionName = \"beginContour\";\n  endRender() {\n    this.pInst.endContour();\n  }\n}\ncustomElements.define(\"p-contour\", Contour);\n\nconst addShape2DCollisionProps = (baseClass) =>\n  class extends baseClass {\n    collider = collider_type.poly;\n    get collision_args() {\n      return [this.vertices.map(transformVertexFn(this))];\n    }\n    get vertices() {\n      const arrayFromChildren = (el) => {\n        const ca = Array.from(el.children);\n        return ca.concat(ca.map(arrayFromChildren)).flat();\n      };\n      const childArray = arrayFromChildren(this);\n      const vertexChildren = childArray.filter(\n        (el) => el instanceof Vertex && el.this_element\n      );\n      const vertices = vertexChildren.map((el) => {\n        if (el instanceof QuadraticVertex) {\n          const { x3, y3 } = el;\n          return this.pInst.createVector(x3, y3);\n        }\n        const { x, y } = el;\n        return this.pInst.createVector(x, y);\n      });\n      return vertices.concat(vertices.slice(0));\n    }\n  };\nexport const addShapeElementProps = (baseClass) =>\n  class extends baseClass {\n    #kind;\n    #mode;\n    renderFunctionName = \"beginShape\";\n    static overloads = [\"[kind]\"];\n\n    endRender() {\n      if (this.#mode) this.pInst.endShape(this.#mode);\n      else this.pInst.endShape();\n    }\n    /**\n     * The options available for kind are\n     *\n     * POINTS\n     * Draw a series of points\n     *\n     * LINES\n     * Draw a series of unconnected line segments (individual lines)\n     *\n     * TRIANGLES\n     * Draw a series of separate triangles\n     *\n     * TRIANGLE_FAN\n     * Draw a series of connected triangles sharing the first vertex in a fan-like fashion\n     *\n     * TRIANGLE_STRIP\n     * Draw a series of connected triangles in strip fashion\n     *\n     * QUADS\n     * Draw a series of separate quads\n     *\n     * QUAD_STRIP\n     * Draw quad strip using adjacent edges to form the next quad\n     *\n     * TESS (WEBGL only)\n     * Handle irregular polygon for filling curve by explicit tessellation\n     * @type {POINTS|LINES|TRIANGLES|TRIANGLE_FAN TRIANGLE_STRIP|QUADS|QUAD_STRIP|TESS}\n     */\n    get kind() {\n      return this.#kind;\n    }\n    set kind(val) {\n      this.#kind = val;\n    }\n    get mode() {\n      return this.#mode;\n    }\n    set mode(val) {\n      this.#mode = val;\n    }\n  };\n/**\n * Using the ```<shape>``` element allow creating more\n * complex forms. The vertices of the shape are defined by its ```<vertex>```,\n * ```<curve-vertex>```, and/or ```<quadratic-vertex>``` children.\n * The value of the kind property tells it which\n * types of shapes to create from the provided vertices. With no mode\n * specified, the shape can be any irregular polygon.\n *\n * Transformations such as translate, angle, and scale do not work on children on ```<shape>```.\n * It is also not possible to use other shapes, such as\n * ```<ellipse>``` or ```<rect>``` as children of ```<shape>```.\n * @element shape\n */\nclass Shape extends addShapeElementProps(\n  add2DFillStroke(addShape2DCollisionProps(Transformed2DElement))\n) {}\ncustomElements.define(\"p-shape\", Shape);\n\n/**\n * All shapes are constructed by connecting a series of vertices. ```<vertex>```\n * is used to specify the vertex coordinates for points, lines, triangles,\n * quads, and polygons. It is used exclusively as a child of the ```<shape>``` element.\n * @element vertex\n */\nclass Vertex extends addXY(RenderedElement) {\n  static overloads = [\"x, y\"];\n}\ncustomElements.define(\"p-vertex\", Vertex);\n/**\n * Specifies vertex coordinates for quadratic Bezier curves. Each ```<quadratic-vertex>```\n * defines the position of one control points and one\n * anchor point of a Bezier curve, adding a new segment to a line or shape.\n * The first ```<quadratic-vertex>``` child of a ```<shape>``` element\n * must have a ```<vertex>``` sibling above it to set the first anchor point.\n *\n * This element must be a child of a ```<shape>``` element\n * and only when there is no MODE or POINTS property specified on the\n *  ```<shape>```.\n */\nclass QuadraticVertex extends addCXY(addXY3(RenderedElement)) {\n  static overloads = [\"cx, cy, x3, y3\"];\n}\ncustomElements.define(\"p-quadratic-vertex\", QuadraticVertex);\n/**\n * Specifies vertex coordinates for curves. This function may only\n * be used as a child of the ```<shape>``` element and only when there\n * is no MODE property specified on the ```<shape>``.\n *\n * The first and last points in a series of ```<curve-vertex>``` lines\n * will be used to\n * guide the beginning and end of the curve. A minimum of four\n * points is required to draw a tiny curve between the second and\n * third points. Adding a fifth point with ```<curve-vertex>``` will draw\n * the curve between the second, third, and fourth points. The\n * ```<curve-vertex>``` element is an implementation of Catmull-Rom\n * splines.\n */\nclass CurveVertex extends addXYZ(addCurveTightness(RenderedElement)) {\n  static overloads = [\"x, y\"];\n}\ncustomElements.define(\"p-curve-vertex\", CurveVertex);\n","import { defineProperties, wrapMethod } from \"../utils/p5Modifiers\";\n\np5.prototype._createDescriptionContainer = function () {\n  const cnvId = this.canvas.id;\n  const descriptionContainer = document.createElement(\"div\");\n  descriptionContainer.setAttribute(\"id\", `${cnvId}_Description`);\n  descriptionContainer.setAttribute(\"role\", \"region\");\n  descriptionContainer.setAttribute(\"aria-label\", \"Canvas Description\");\n  const p = document.createElement(\"p\");\n  p.setAttribute(\"id\", `${cnvId}_fallbackDesc`);\n  descriptionContainer.append(p);\n  this.canvas.append(descriptionContainer);\n  return descriptionContainer;\n};\nconst fallbackDescId = \"_fallbackDesc\";\nwrapMethod(\n  \"_describeHTML\",\n  (base) =>\n    function (type, text) {\n      const cnvId = this.canvas.id;\n      const describeId = `#${cnvId}_Description`;\n      if (type === \"fallback\") {\n        if (!this.dummyDOM.querySelector(describeId)) {\n          const fallback = this._createDescriptionContainer().querySelector(\n            `#${cnvId}_fallbackDesc`\n          );\n          fallback.innerHTML = text;\n        } else {\n          base.call(this, type, text);\n        }\n        //if the container for the description exists\n        this.descriptions.fallback = this.dummyDOM.querySelector(\n          `#${cnvId}${fallbackDescId}`\n        );\n        this.descriptions.fallback.innerHTML = text;\n      }\n    }\n);\n\nwrapMethod(\n  \"_describeElementHTML\",\n  (base) =>\n    function (type, name, text) {\n      const cnvId = this.canvas.id;\n      if (\n        type === \"fallback\" &&\n        !this.dummyDOM.querySelector(`#${cnvId}_Description`)\n      ) {\n        this._createDescriptionContainer();\n      }\n      base.call(this, type, name, text);\n    }\n);\n\nwrapMethod(\n  \"_createOutput\",\n  (base) =>\n    function (type, display) {\n      const cnvId = this.canvas.id;\n      if (!this.dummyDOM) {\n        this.dummyDOM = document.getElementById(cnvId).parentNode;\n      }\n      if (\n        (type === \"textOutput\" || type === \"gridOutput\") &&\n        !this.dummyDOM.querySelector(`#${cnvId}accessibleOutput${display}`)\n      )\n        this._createDescriptionContainer();\n      base.call(this, type, display);\n    }\n);\n\np5.prototype.registerMethod(\"post\", function () {\n  if (this.text_output || this.grid_output) this._updateAccsOutput();\n});\n\ndefineProperties({\n  url: {\n    get: function () {\n      return this.getURL();\n    },\n  },\n  url_path: {\n    get: function () {\n      return this.getURLPath();\n    },\n  },\n  url_params: {\n    get: function () {\n      return this.getURLParams();\n    },\n  },\n  log: {\n    set: function (val) {\n      this.print(val);\n    },\n  },\n  text_output: {\n    get: function () {\n      return this._accessibleOutputs.text;\n    },\n    set: function (val) {\n      if (val === true) this.textOutput();\n      else this.textOutput(val);\n    },\n  },\n});\n","import { RenderedElement } from \"../core\";\nimport { addStroke } from \"../properties/color_props\";\n\n/**\n * Clears the pixels within a buffer. This element only clears the canvas.\n * It will not clear objects created by create_x() functions such as\n * create_video() or create_div().\n * Unlike the main graphics context, pixels in additional graphics areas created\n * with create_graphics() can be entirely\n * or partially transparent. This element clears everything to make all of\n * the pixels 100% transparent.\n *\n * Note: In WebGL mode, this element can have attributes set to normalized RGBA\n * color values in order to clear the screen to a specific color.\n * In addition to color, it will also clear the depth buffer.\n * If you are not using the webGL renderer these color values will have no\n * effect.\n *\n * @element clear\n * @attribute {Number} r normalized red val.\n * @attribute {Number} g normalized green val.\n * @attribute {Number} b normalized blue val.\n * @attribute {Number} a normalized alpha val.\n */\nclass Clear extends RenderedElement {\n  static overloads = [\"\", \"r, g, b, a\"];\n}\ncustomElements.define(\"p-clear\", Clear);\n\n/**\n * The ```<paint-bucket>``` element fills the canvas with a particular color or\n * image.\n *\n * @element paint-bucket\n * @attribute {p5.Color} color  any value created by the <a href=\"#/p5/color\">color\n * @attribute {String} colorstring color string, possible formats include: integer\n *                         rgb() or rgba(), percentage rgb() or rgba(),\n *                         3-digit hex, 6-digit hex\n * @attribute {Number} [a]         opacity of the background relative to current\n *                             color range (default is 0-255)\n * @attribute {Number} gray   specifies a value between white and black\n * @attribute {Number} v1     red or hue value (depending on the current color\n *                        mode)\n * @attribute {Number} v2     green or saturation value (depending on the current\n *                        color mode)\n * @attribute {Number} v3     blue or brightness value (depending on the current\n *                        color mode)\n * @attribute  {Number[]}      values  an array containing the red, green, blue\n *                                 and alpha components of the color\n * @attribute {p5.Image} image    image loaded via an ```<asset>``` (must be\n *                                  same size as the sketch window)\n */\nclass PaintBucket extends RenderedElement {\n  static overloads = [\"c\", \"colorstring, [a]\", \"gray, [a]\", \"v1, v2, v3, [a]\"];\n  renderFunctionName = \"background\";\n}\ncustomElements.define(\"p-paint-bucket\", PaintBucket);\n","import { defineProperties } from \"../utils/p5Modifiers\";\n\ndefineProperties({\n  animate: {\n    get: function () {\n      return this.isLooping();\n    },\n    set: function (val) {\n      if (val) this.loop();\n      else this.noLoop();\n    },\n  },\n  remove_canvas: {\n    get: function () {\n      return false;\n    },\n    set: function () {\n      this.remove();\n    },\n  },\n});\n","import { defineSnakeAlias } from \"../utils/p5Modifiers\";\n\ndefineSnakeAlias(\n  \"selectAll\",\n  \"removeElements\",\n  \"createDiv\",\n  \"createP\",\n  \"createSpan\",\n  \"createImg\",\n  \"createA\",\n  \"createSlider\",\n  \"createButton\",\n  \"createCheckbox\",\n  \"createSelect\",\n  \"createRadio\",\n  \"createColorPicker\",\n  \"createInput\",\n  \"createFileInput\",\n  \"createVideo\",\n  \"createAudio\",\n  \"createCapture\",\n  \"createElement\"\n);\n","import { defineSnakeAlias } from \"../utils/p5Modifiers\";\n\ndefineSnakeAlias(\"createCanvas\", \"createGraphics\");\n","import {\n  defineProperties,\n  defineSnakeAlias,\n  wrapMethod,\n} from \"../utils/p5Modifiers\";\n\ndefineSnakeAlias(\"deviceOrientation\", \"turnAxis\", \"keyIsDown\");\n\n//  TODO - test on mobile device\np5.prototype.device_moved = false;\n\n//  TODO - test on mobile device\np5.prototype.device_turned = false;\n\np5.prototype.mouse_down = false;\n\np5.prototype.mouse_up = false;\n\np5.prototype.mouse_dragging = false;\n\np5.prototype.mouse_double_clicked = false;\n\np5.prototype._mouseWheel = 0;\n\np5.prototype.key_down = false;\n\np5.prototype.key_up = false;\n\n//  TODO - test on mobile device\np5.prototype.touch_started = false;\np5.prototype.touch_moved = false;\np5.prototype.touch_ended = false;\n\np5.prototype._startAngleZ;\nwrapMethod(\n  \"_handleMotion\",\n  (base) =>\n    function () {\n      base.call(this);\n      this._setProperty(\"deviced_moved\", true);\n    }\n);\n\nwrapMethod(\n  \"_onmousedown\",\n  (base) =>\n    function (e) {\n      base.call(this, e);\n      this._setProperty(\"mouse_down\", true);\n    }\n);\n\nwrapMethod(\n  \"_ondbclick\",\n  (base) =>\n    function (e) {\n      base.call(this, e);\n      this._setProperty(\"mouse_double_clicked\", true);\n    }\n);\n\nwrapMethod(\n  \"_onmousemove\",\n  (base) =>\n    function (e) {\n      base.call(this, e);\n      this._setProperty(\"touch_moved\", this.mouseIsPressed);\n    }\n);\n\nwrapMethod(\n  \"_onwheel\",\n  (base) =>\n    function (e) {\n      base.call(this, e);\n      this._setProperty(\"_mouseWheel\", this._mouseWheelDeltaY);\n    }\n);\n\nwrapMethod(\n  \"_onkeyup\",\n  (base) =>\n    function (e) {\n      base.call(this, e);\n      this._setProperty(\"key_up\", true);\n      this._setProperty(\"key_held\", false);\n    }\n);\n\nwrapMethod(\n  \"_onkeydown\",\n  (base) =>\n    function (e) {\n      base.call(this, e);\n      this._setProperty(\"key_down\", true);\n    }\n);\n\nwrapMethod(\n  \"_ontouchbase\",\n  (base) =>\n    function (e) {\n      base.call(this, e);\n      this._setProperty(\"touch_started\", true);\n    }\n);\n\nwrapMethod(\n  \"_ontouchmove\",\n  (base) =>\n    function (e) {\n      base.call(this, e);\n      this._setProperty(\"touch_moved\", true);\n    }\n);\n\nwrapMethod(\n  \"_ontouchend\",\n  (base) =>\n    function (e) {\n      base.call(this, e);\n      this._setProperty(\"touch_ended\", true);\n    }\n);\n\np5.prototype.registerMethod(\"pre\", function () {\n  this._setProperty(\n    \"mouse_up\",\n    this.mouseIsPressed == false && this.mouse_held == true\n  );\n  this._setProperty(\"mouse_held\", this.mouseIsPressed);\n  this._setProperty(\"key_held\", this.key_down);\n});\n\np5.prototype.registerMethod(\"post\", function () {\n  this._setProperty(\"device_moved\", false);\n  this._setProperty(\"mouse_down\", false);\n  this._setProperty(\"mouse_double_clicked\", false);\n  this._setProperty(\"_mouseWheel\", false);\n  this._setProperty(\"key_up\", false);\n  this._setProperty(\"key_down\", false);\n  this._setProperty(\"touch_started\", false);\n  this._setProperty(\"touch_moved\", false);\n  this._setProperty(\"touch_ended\", false);\n});\n\n//  Create properties with default value\np5.prototype._moveThreshold = 0.5;\np5.prototype._shakeThreshold = 30;\n\ndefineProperties({\n  //  TODO - test on mobile device\n  device_turned: {\n    get: function () {\n      if (\n        this.rotationX === null &&\n        this.rotationY === null &&\n        this.rotationZ === null\n      )\n        return false;\n      return (\n        this.rotationX !== this.pRotationX ||\n        this.rotationY !== this.pRotationY ||\n        this.rotationZ !== this.pRotationZ\n      );\n    },\n  },\n  key_code: {\n    get: function () {\n      return this.keyCode;\n    },\n  },\n  mouse_wheel: {\n    get: function () {\n      return this._mouseWheel;\n    },\n  },\n  move_threshold: {\n    get: function () {\n      return this._moveThreshold;\n    },\n    set: function (val) {\n      this.setMoveThreshold(val);\n    },\n  },\n  pointer_lock_request: {\n    get: function () {\n      return document.pointerLockElement === this._curElement.elt;\n    },\n    set: function (val) {\n      if (val) this.requestPointerLock();\n      else this.exitPointerLock();\n    },\n  },\n  shake_threshold: {\n    get: function () {\n      return this._shakeThreshold;\n    },\n    set: function (val) {\n      this.setShakeThreshold(val);\n    },\n  },\n});\n","import { defineProperties, defineSnakeAlias } from \"../utils/p5Modifiers\";\n\ndefineSnakeAlias(\"createWriter\");\n\ndefineProperties({\n  http_post: {\n    set: function () {\n      this.httpPost(...arguments);\n    },\n  },\n  http_do: {\n    set: function () {\n      this.httpDo(...arguments);\n    },\n  },\n  save_file: {\n    set: function () {\n      this.save(...arguments);\n    },\n  },\n  save_json_file: {\n    set: function () {\n      this.saveJSON(...arguments);\n    },\n  },\n  save_strings_file: {\n    set: function () {\n      this.saveStrings(...arguments);\n    },\n  },\n  save_table_file: {\n    set: function () {\n      this.saveTable(...arguments);\n    },\n  },\n});\n","import { RenderedElement } from \"../core\";\nimport { addWidthHeight, addXY } from \"../properties/shape_props\";\nimport { constants } from \"../properties/constants\";\n\n/**\n * Draw an image to the canvas.\n *\n * This element can be used with different numbers of attributes. The\n * simplest use requires only three attributes: img, x, and y—where (x, y) is\n * the position of the image. Two more attributes can optionally be added to\n * specify the width and height of the image.\n *\n * This element can also be used with eight Number attributes. To\n * differentiate between all these attributes, p5.js uses the language of\n * \"destination rectangle\" (which corresponds to \"dx\", \"dy\", etc.) and \"source\n * image\" (which corresponds to \"sx\", \"sy\", etc.) below. Specifying the\n * \"source image\" dimensions can be useful when you want to display a\n * subsection of the source image instead of the whole thing.\n *\n * This element can also be used to draw images without distorting the original aspect ratio,\n * by adding 9th attribute, fit, which can either be COVER or CONTAIN.\n * CONTAIN, as the name suggests, contains the whole image within the specified destination box\n * without distorting the image ratio.\n * COVER covers the entire destination box.\n */\nclass Image extends addXY(addWidthHeight(RenderedElement)) {\n  #image_mode = constants.CORNER;\n  #tint = constants.NONE;\n  static overloads = [\n    \"img, x, y, [width], [height]\",\n    \"img, dx, dy, dWidth, dHeight, sx, sy, [sWidth], [sHeight], [fit], [xAlign], [yAlign]\",\n  ];\n  /**\n   * Sets the fill value for displaying images. Images can be tinted to\n   * specified colors or made transparent by including an alpha value.\n   *\n   * To apply transparency to an image without affecting its color, use\n   * white as the tint color and specify an alpha value. For instance,\n   * tint(255, 128) will make an image 50% transparent (assuming the default\n   * alpha range of 0-255, which can be changed with color_mode.\n   *\n   * The value for the gray parameter must be less than or equal to the current\n   * maximum value as specified by color_mode. The default maximum value is\n   * 255.\n   *\n   * @type {p5.Color}\n   */\n  get tint() {\n    return this.#tint;\n  }\n  set tint(val) {\n    if (val === constants.NONE) this.pInst.noTint();\n    else if (val instanceof p5.Color) this.pInst.tint(val);\n    else this.pInst.tint(...val);\n    this.#tint = this.pInst.color(this.pInst._renderer._tint);\n  }\n  /**\n   * Set image mode. Modifies the location from which images are drawn by\n   * changing the way in which an image's properties are interpreted.\n   * The default mode is image_mode=\"CORNER\", which interprets x and\n   * y as the upper-left corner of the image.\n   *\n   * image_mode=\"CORNERS\" interprets x and y\n   * as the location of one corner, and width and height as the\n   * opposite corner.\n   *\n   * image_mode=\"CENTER\" interprets x and y\n   * as the image's center point.\n   * @type {CORNER|CORNERS|CENTER}\n   */\n  get image_mode() {\n    return this.#image_mode;\n  }\n  set image_mode(val) {\n    this.pInst.imageMode(val);\n    this.#image_mode = val;\n  }\n}\ncustomElements.define(\"p-image\", Image);\n","import { RenderedElement } from \"../core\";\nimport { addFillStroke } from \"../properties/color_props\";\n\np5.prototype.DEFAULT = \"default\";\np5.prototype.AMBIENT = \"ambient\";\np5.prototype.SPECULAR = \"specular\";\np5.prototype.EMISSIVE = \"emissive\";\n\nexport const add3DProps = (baseClass) =>\n  class extends baseClass {\n    #ambient_material;\n    #emissive_material;\n    #shininess;\n    #specular_material;\n    #no_lights;\n    /**\n     * Sets the ambient color of the material.\n     *\n     * The ambient_material color is the color the object will reflect\n     * under **any** lighting.\n     *\n     * Consider an ambient_material with the color yellow (255, 255, 0).\n     * If the light emits the color white (255, 255, 255), then the object\n     * will appear yellow as it will reflect the red and green components\n     * of the light. If the light emits the color red (255, 0, 0), then\n     * the object will appear red as it will reflect the red component\n     * of the light. If the light emits the color blue (0, 0, 255),\n     * then the object will appear black, as there is no component of\n     * the light that it can reflect.\n     * @type {p5.Color}\n     */\n    get ambient_material() {\n      return this.#ambient_material;\n    }\n    set ambient_material(val) {\n      if (Array.isArray(val)) this.pInst.ambientMaterial(...val);\n      else this.pInst.ambientMaterial(val);\n      this.#ambient_material = this.pInst.color(val);\n    }\n    /**\n     * Sets the emissive color of the material.\n     *\n     * An emissive material will display the emissive color at\n     * full strength regardless of lighting. This can give the\n     * appearance that the object is glowing.\n     *\n     * Note, \"emissive\" is a misnomer in the sense that the material\n     * does not actually emit light that will affect surrounding objects.\n     *\n     * @type {p5.Color}\n     */\n    get emissive_material() {\n      return this.#emissive_material;\n    }\n    set emissive_material(val) {\n      if (Array.isArray(val)) this.pInst.emissiveMaterial(...val);\n      else this.pInst.emissiveMaterial(val);\n      this.#ambient_material = this.pInst.color(val);\n    }\n    /**\n     * Sets the current material as a normal material.\n     *\n     * A normal material is not affected by light. It is often used as\n     * a placeholder material when debugging.\n     *\n     * Surfaces facing the X-axis become red, those facing the Y-axis\n     * become green, and those facing the Z-axis become blue.\n     *\n     * @type {boolean}\n     */\n    get normal_material() {\n      return this.pInst._renderer.useNormalMaterial;\n    }\n    set normal_material(val) {\n      if (val) this.pInst.normalMaterial();\n    }\n    /**\n     * Sets the <a href=\"#/p5.Shader\">p5.Shader</a> object to\n     * be used to render subsequent shapes.\n     *\n     * Custom shaders can be created using the\n     * create_shader() method and\n     * ```<shader>``` element.\n     *\n     * Set shader=\"DEFAULT\" to restore the default shaders.\n     *\n     * Note, shaders can only be used in WEBGL mode.\n     * @type {p5.Shader}\n     */\n    get shader() {\n      return [\n        this.pInst._renderer.userStrokeShader,\n        this.pInst._renderer.userFillShader,\n      ];\n    }\n    set shader(val) {\n      const { pInst } = this;\n      if (val === pInst.DEFAULT) pInst.resetShader();\n      else pInst.shader(val);\n    }\n    /**\n     * Sets the amount of gloss (\"shininess\") of a\n     * specular_material.\n     *\n     * The default and minimum value is 1.\n     * @type {number}\n     * */\n    get shininess() {\n      return this.#shininess;\n    }\n    set shininess(val) {\n      this.pInst.shininess(val);\n      this.#shininess = val;\n    }\n    /**\n     * Sets the specular color of the material.\n     *\n     * A specular material is reflective (shiny). The shininess can be\n     * controlled by the shininess property.\n     *\n     * Like ambient_material,\n     * the specular_material color is the color the object will reflect\n     * under ```<ambient-light>```.\n     * However unlike ambient_material, for all other types of lights\n     * ```<directional-light>```,\n     * ```<point-light>```,\n     * ```spot-light>```,\n     * a specular material will reflect the **color of the light source**.\n     * This is what gives it its \"shiny\" appearance.\n     *\n     * @type {p5.Color}\n     */\n    get specular_material() {\n      return this.#specular_material;\n    }\n    set specular_material(val) {\n      if (Array.isArray(val)) this.pInst.specularMaterial(...val);\n      else this.pInst.specularMaterial(val);\n      this.#specular_material = this.pInst.color(val);\n    }\n    /**\n     * Sets the texture that will be used to render subsequent shapes.\n     *\n     * A texture is like a \"skin\" that wraps around a 3D geometry. Currently\n     * supported textures are images, video, and offscreen renders.\n     *\n     * To texture a geometry created by a ```<shape>``` element,\n     * you will need to specify uv coordinates in ```<vertex>``` element.\n     *\n     * Note, texture can only be used in WEBGL mode.\n     *\n     * @type {p5.Image|p5.MediaElement|p5.Graphics|p5.Texture}\n     */\n    get texture() {\n      return this.pInst._renderer._tex;\n    }\n    set texture(val) {\n      this.pInst.texture(val);\n    }\n    /**\n     * Sets the coordinate space for texture mapping. The default mode is IMAGE\n     * which refers to the actual coordinates of the image.\n     * NORMAL refers to a normalized space of values ranging from 0 to 1.\n     *\n     * With IMAGE, if an image is 100×200 pixels, mapping the image onto the\n     * entire\n     * size of a quad would require the points (0,0) (100, 0) (100,200) (0,200).\n     * The same mapping in NORMAL is (0,0) (1,0) (1,1) (0,1).\n     *\n     * @type {IMAGE|NORMAL}\n     */\n    get texture_mode() {\n      return this.pInst._renderer.textureMode;\n    }\n    set texture_mode(val) {\n      this.pInst.textureMode(val);\n    }\n    /**\n     * Sets the global texture wrapping mode. This controls how textures behave\n     * when their uv's go outside of the 0 to 1 range. There are three options:\n     * CLAMP, REPEAT, and MIRROR.\n     *\n     * CLAMP causes the pixels at the edge of the texture to extend to the bounds.\n     * REPEAT causes the texture to tile repeatedly until reaching the bounds.\n     * MIRROR works similarly to REPEAT but it flips the texture with every new tile.\n     *\n     * REPEAT & MIRROR are only available if the texture\n     * is a power of two size (128, 256, 512, 1024, etc.).\n     *\n     * This method will affect all textures in your sketch until another element\n     * sets texture_mode.\n     *\n     * If only one value is provided, it will be applied to both the\n     * horizontal and vertical axes.\n     * @type {[CLAMP|REPEAT|MIRROR, CLAMP|REPEAT|MIRROR]}\n     */\n    get texture_wrap() {\n      return [\n        this.pInst._renderer.textureWrapX,\n        this.pInst._renderer.textureWrapY,\n      ];\n    }\n    set texture_wrap(val) {\n      if (Array.isArray(val)) this.pInst.textureWrap(...val);\n      else this.pInst.textureWrap(val);\n    }\n    /**\n     * Removes all lights present in a sketch.\n     *\n     * All subsequent geometry is rendered without lighting (until a new\n     * light is created with a lighting element (\n     * ```<lights>```,\n     * ```<ambient-light>```,\n     * ```<directional-light>```,\n     * ```<point-light>```,\n     * ```<spot-light>```).\n     * @type {boolean}\n     */\n    get no_lights() {\n      return this.#no_lights;\n    }\n    set no_lights(val) {\n      this.#no_lights = val;\n      if (val == true) this.pInst.noLights();\n    }\n  };\n\nexport class WebGLLight extends RenderedElement {\n  draw(inherited) {\n    //  Set no_lights to false so that children won't delete this light\n    super.draw({ ...inherited, ...{ no_lights: false } });\n  }\n}\n\nexport const addSpecularColor = (baseClass) =>\n  class extends baseClass {\n    #specular_color;\n    /**\n     * Sets the color of the specular highlight of a non-ambient light\n     * (i.e. all lights except ```<ambient-light>```).\n     *\n     * specular_color affects only the lights which are created by\n     * this element or its children\n     *\n     * This property is used in combination with\n     * <a href=\"#/p5/specularMaterial\">specularMaterial()</a>.\n     * If a geometry does not use specular_material, this property\n     * will have no effect.\n     *\n     * The default color is white (255, 255, 255), which is used if\n     * specular_color is not explicitly set.\n     *\n     * Note: specular_color is equivalent to the Processing function\n     * <a href=\"https://processing.org/reference/lightSpecular_.\n     * html\">lightSpecular</a>.\n     *\n     * @type {p5.Color}\n     */\n    get specular_color() {\n      return this.#specular_color;\n    }\n    set specular_color(val) {\n      const { pInst } = this;\n      const c = Array.isArray(val) ? pInst.color(...val) : pInst.color(val);\n      pInst.specularColor(c);\n      this.#specular_color = c;\n    }\n  };\n\nexport const addLightFalloff = (baseClass) =>\n  class extends baseClass {\n    #light_falloff;\n    /**\n     * Sets the falloff rate for ```<point-light>```\n     * and ```<spot-light>```.\n     *\n     * light_falloff affects only this element and its children.\n     *\n     * The values are `constant`, `linear`, an `quadratic` and are used to calculate falloff as follows:\n     *\n     * d = distance from light position to vertex position\n     *\n     * falloff = 1 / (CONSTANT + d \\* LINEAR + (d \\* d) \\* QUADRATIC)\n     * @type {[number, number, number]}\n     */\n    get light_falloff() {\n      return this.#light_falloff;\n    }\n    set light_falloff([constant, linear, quadratic]) {\n      const { pInst } = this;\n      pInst.lightFalloff(constant, linear, quadratic);\n      this.#light_falloff = [\n        pInst._renderer.constantAttenuation,\n        pInst._renderer.linearAttenuation,\n        pInst._renderer.quadraticAttenuation,\n      ];\n    }\n  };\n\nexport const addRectMode = (baseClass) =>\n  class extends baseClass {\n    #rect_mode;\n    /**\n     * Modifies the location from which rectangles are drawn by changing the way\n     * in which x and y coordinates are interpreted.\n     *\n     * The default mode is CORNER, which interprets the x and y as the\n     * upper-left corner of the shape.\n     *\n     * rect_mode=\"CORNERS\" interprets x and y as the location of\n     * one of the corners, and width and height as the location of\n     * the diagonally opposite corner. Note, the rectangle is drawn between the\n     * coordinates, so it is not necessary that the first corner be the upper left\n     * corner.\n     *\n     * rect_mode=\"CENTER\" interprets x and y as the shape's center\n     * point.\n     *\n     * rect_mode=\"RADIUS\" also uses x and y as the shape's\n     * center\n     * point, but uses width and height to specify half of the shape's\n     * width and height respectively.\n     *\n     * The value to this property must be written in ALL CAPS because they are\n     * predefined as constants in ALL CAPS.\n     *\n     * @type {CORNER|CORNERS|CENTER|RADIUS}\n     */\n    get rect_mode() {\n      return this.#rect_mode;\n    }\n    set rect_mode(mode) {\n      this.pInst.rectMode(mode);\n      this.#rect_mode = this.pInst._renderer._rectMode;\n    }\n  };\n\nexport const add3DShapeStyling = (baseClass) =>\n  class extends baseClass {\n    #smooth = false;\n    /**\n     * smooth=\"true\" draws all geometry with smooth (anti-aliased) edges. smooth=\"true\" will also\n     * improve image quality of resized images. On a 3D canvas, smooth is false\n     * by default, so it is necessary to set smooth=\"true\" if you would like\n     * smooth (antialiased) edges on your geometry.\n     * @type {boolean}\n     */\n    get smooth() {\n      return this.#smooth;\n    }\n    set smooth(val) {\n      if (typeof val !== \"boolean\")\n        return console.error(\n          `${this.tagName}'s smooth property is being set to ${val}, but it may only be set to true or false.`\n        );\n      if (val) this.pInst.smooth();\n      else this.pInst.noSmooth();\n      this.#smooth = val;\n    }\n  };\n","export const addTypographyProps = (baseClass) =>\r\n  class extends baseClass {\r\n    #align = [p5.prototype.LEFT, p5.prototype.BASELINE];\r\n    #leading = 15;\r\n    #font = \"sans-serif\";\r\n    #font_size = 12;\r\n    #style = p5.prototype.NORMAL;\r\n    #wrap = p5.prototype.WORD;\r\n    /**\r\n     * Sets the current alignment for drawing text. Accepts two\r\n     * values:\r\n     * - first: horizontal alignment (LEFT, CENTER, or RIGHT)\r\n     * - scond: vertical alignment (TOP, BOTTOM, CENTER, or BASELINE).\r\n     *\r\n     * So if you set align=\"LEFT\", you are aligning the left\r\n     * edge of your text to this element's x-coordinate.\r\n     * If you write align=\"RIGHT, TOP\", you are aligning the right edge\r\n     * of your text to this element's x-coordinate and the top edge of the text\r\n     * to this element's y-coordinate.\r\n     * @type {[LEFT|CENTER|RIGHT, TOP|BOTTOM|CENTER|BASELINE]}\r\n     */\r\n    get align() {\r\n      return this.#align;\r\n    }\r\n    set align(val) {\r\n      if (Array.isArray(val)) this.pInst.textAlign(...val);\r\n      else this.pInst.textAlign(val);\r\n      this.#align = [\r\n        this.pInst._renderer._textAlign,\r\n        this.pInst._renderer._textBaseline,\r\n      ];\r\n    }\r\n    /**\r\n     * Sets the spacing, in pixels, between lines of text.\r\n     * @type {number}\r\n     */\r\n    get leading() {\r\n      return this.#leading;\r\n    }\r\n    set leading(val) {\r\n      this.pInst.textLeading(val);\r\n      this.#leading = this.pInst._renderer._textLeading;\r\n    }\r\n    /**\r\n     * The current font used by this element. This may be set to a font loaded\r\n     * with load_font() or a string representing a\r\n     * <a href=\"https://mzl.la/2dOw8WD\">web safe font</a>.\r\n     * @type {p5.Font}\r\n     */\r\n    get font() {\r\n      return this.#font;\r\n    }\r\n    set font(val) {\r\n      this.pInst.textFont(val);\r\n      this.#font = this.pInst._renderer._textFont;\r\n    }\r\n    /**\r\n     * The font size in pixels.\r\n     * @type {number}\r\n     */\r\n    get font_size() {\r\n      return this.#font_size;\r\n    }\r\n    set font_size(val) {\r\n      this.pInst.textSize(val);\r\n      this.#font_size = this.pInst._renderer._textSize;\r\n    }\r\n    /**\r\n     * The style for text.\r\n     * @type {NORMAL|ITALIC|BOLDITALIC}\r\n     */\r\n    get style() {\r\n      return this.#style;\r\n    }\r\n    set style(val) {\r\n      this.pInst.textStyle(val);\r\n      this.#style = this.pInst._renderer._textStyle;\r\n    }\r\n    /**\r\n     * Specifies how lines of text are wrapped within a text box. This requires\r\n     * width to be set on this element.\r\n     *\r\n     * WORD wrap style only breaks lines at spaces. A single string without spaces\r\n     * that exceeds the boundaries of the canvas or text area is not truncated,\r\n     * and will overflow the desired area, disappearing at the canvas edge.\r\n     *\r\n     * CHAR wrap style breaks lines wherever needed to stay within the text box.\r\n     *\r\n     * WORD is the default wrap style, and both styles will still break lines at\r\n     * any line breaks specified in the original text. The text height property also\r\n     * still applies to wrapped text in both styles, lines of text that do not fit\r\n     * within the text area will not be drawn to the screen.\r\n     * @type {WORD|CHAR}\r\n     */\r\n    get wrap() {\r\n      return this.#wrap;\r\n    }\r\n    set wrap(val) {\r\n      this.pInst.textWrap(val);\r\n      this.#wrap = this.pInst._renderer._textWrap;\r\n    }\r\n    /**\r\n     * The ascent of the current font at its current size. The ascent represents the\r\n     * distance, in pixels, of the tallest character above the baseline. (read-only)\r\n     * @type {number}\r\n     */\r\n    get ascent() {\r\n      return this.pInst.textAscent();\r\n    }\r\n    /**\r\n     * The descent of the current font at its current size. The descent represents the\r\n     * distance, in pixels, of the character with the longest descender below the baseline.\r\n     * (read-only)\r\n     * @type {number}\r\n     */\r\n    get descent() {\r\n      return this.pInst.textDescent();\r\n    }\r\n  };\r\n","import { RenderedElement } from \"../core\";\nimport { addWebGLMethods } from \"../methods/3d_methods\";\nimport { add3DProps } from \"../properties/3d_props\";\nimport { addFillStroke, addFill } from \"../properties/color_props\";\nimport {\n  addWidthHeight,\n  addXY,\n  add2DStrokeStyling,\n} from \"../properties/shape_props\";\nimport {\n  add2DTransformProps,\n  add3DTransformProps,\n} from \"../properties/transform_props\";\nimport { addTypographyProps } from \"../properties/typography_props\";\n\n/**\n * Draws text on the ```<canvas>```. The content of the text may be specified\n * by setting the content property\n * ```xml\n * <text content=\"'Hello world'\"></text>\n * ```\n * or by adding the content between the\n * element's start and end tags.\n * ```xml\n * <text>Hello world</text>\n * ```\n *\n * Change the color of the text with the fill property. Change\n * the outline of the text with the stroke and\n * stroke_weight properties.\n *\n * The text displays in relation to the <a href=\"#/p5/textAlign\">textAlign()</a>\n * function, which gives the option to draw to the left, right, and center of the\n * coordinates.\n *\n * The width and height properties, if specified, define a rectangular area to display within and\n * may only be used with string data. When these properties are specified,\n * they are interpreted based on the current rect_mode\n * setting. Text that does not fit completely within the rectangle specified will\n * not be drawn to the screen. If width and height are not specified, the baseline\n * alignment is the default, which means that the text will be drawn upwards\n * from x and y.\n * @element text\n */\nclass Text extends addXY(\n  addWidthHeight(\n    addFillStroke(\n      addTypographyProps(\n        add2DStrokeStyling(add2DTransformProps(RenderedElement))\n      )\n    )\n  )\n) {\n  static overloads = [\"content, x, y, [width], [height]\"];\n}\ncustomElements.define(\"p-text\", Text);\n\nconst addFont3D = (baseClass) =>\n  class extends baseClass {\n    /**\n     * The current font used by this element. This must be loaded\n     * with load_font().\n     * @type {p5.Font}\n     */\n    get font() {\n      return super.font;\n    }\n  };\n\n/**\n * Draws text on the ```<canvas-3d>```. The content of the text may be specified\n * by setting the content property\n * ```xml\n * <text content=\"'Hello world'\"></text>\n * ```\n * or by adding the content between the\n * element's start and end tags.\n * ```xml\n * <text>Hello world</text>\n * ```\n *\n * Change the color of the text with the fill property. Text on a 3D canvas does not\n * have a stroke property.\n *\n * The text displays in relation to the <a href=\"#/p5/textAlign\">textAlign()</a>\n * function, which gives the option to draw to the left, right, and center of the\n * coordinates.\n *\n * The width and height properties, if specified, define a rectangular area to display within and\n * may only be used with string data. When these properties are specified,\n * they are interpreted based on the current rect_mode\n * setting. Text that does not fit completely within the rectangle specified will\n * not be drawn to the screen. If width and height are not specified, the baseline\n * alignment is the default, which means that the text will be drawn upwards\n * from x and y.\n * @element text\n */\nclass Text3D extends addXY(\n  addWidthHeight(\n    addFill(\n      addFont3D(\n        addTypographyProps(\n          add3DTransformProps(add3DProps(addWebGLMethods(RenderedElement)))\n        )\n      )\n    )\n  )\n) {\n  static overloads = [\"content, x, y, [width], [height]\"];\n}\ncustomElements.define(\"p-text-3d\", Text3D);\n","import { RenderedElement } from \"../core\";\nimport {\n  addXYZ,\n  addWidthHeight,\n  addXY,\n  addCurveTightness,\n  addXYZ1,\n  addXYZ2,\n  addXYZ3,\n  addXYZ4,\n} from \"../properties/shape_props\";\nimport { addFillStroke, addStroke } from \"../properties/color_props\";\nimport { add3DProps } from \"../properties/3d_props\";\nimport {\n  addArcProps,\n  addDiameter,\n  addShapeElementProps,\n} from \"./2d_shape_elements\";\nimport { addBezierMethods, addCurveMethods } from \"../methods/shape_methods\";\nimport { add3DTransformProps } from \"../properties/transform_props\";\nimport { add3DTransformMethods } from \"../methods/transform_methods\";\n\nclass WebGLGeometry extends addFillStroke(\n  add3DTransformProps(add3DTransformMethods(add3DProps(RenderedElement)))\n) {}\n\nclass Normal extends addXYZ(RenderedElement) {\n  static overloads = [\"vector\", \"x, y, z\"];\n}\ncustomElements.define(\"p-normal\", Normal);\n\nclass Plane extends addWidthHeight(WebGLGeometry) {\n  static overloads = \"[width], [height], [detail_x], [detail_y]\";\n}\ncustomElements.define(\"p-plane\", Plane);\n\nclass Box extends addWidthHeight(WebGLGeometry) {\n  static overloads = [\"[width], [height], [depth], [detail_x], [detail_y]\"];\n}\ncustomElements.define(\"p-box\", Box);\n\nclass Sphere extends WebGLGeometry {\n  static overloads = [\"[radius], [detail_x], [detail_y]\"];\n}\ncustomElements.define(\"p-sphere\", Sphere);\n\nclass Cylinder extends WebGLGeometry {\n  static overloads = [\n    \"[radius], [height], [detail_x], [detail_y], [bottomCap], [topCap]\",\n  ];\n}\ncustomElements.define(\"p-cylinder\", Cylinder);\n\nclass Cone extends WebGLGeometry {\n  static overloads = [\"[radius], [height], [detail_x], [detail_y], [cap]\"];\n}\ncustomElements.define(\"p-cone\", Cone);\n\nclass Ellipsoid extends WebGLGeometry {\n  static overloads = [\n    \"[radius_x], [radius_y], [radius_z], [detail_x], [detail_y]\",\n  ];\n}\ncustomElements.define(\"p-ellipsoid\", Ellipsoid);\n\nclass Torus extends WebGLGeometry {\n  static overloads = [\"[radius], [tubeRadius], [detailX], [detailY]\"];\n}\ncustomElements.define(\"p-torus\", Torus);\n\n//  TODO - test when preload implemented\nclass LoadModel extends RenderedElement {\n  static overloads = [\n    \"path, normalize, [successCallback], [failureCallback], [fileType]\",\n    \"path, [successCallback], [failureCallback], [fileType]\",\n  ];\n}\ncustomElements.define(\"p-load-model\", LoadModel);\n\nclass Model extends WebGLGeometry {\n  static overloads = [\"model\"];\n}\ncustomElements.define(\"p-model\", Model);\n\nconst remove3DFromRenderFunctionName = (baseClass) =>\n  class extends baseClass {\n    constructor() {\n      super();\n      this.renderFunctionName = this.renderFunctionName.slice(0, -2);\n    }\n  };\n\nconst addDetail = (baseClass) =>\n  class extends baseClass {\n    #detail = 25;\n    /**\n     * specifies the number of vertices that makes up the perimeter of the shape.\n     * Default value is 25. Won't draw a stroke for a detail of more than 50.\n     * @type {Integer}\n     */\n    get detail() {\n      return this.#detail;\n    }\n    set detail(val) {\n      this.#detail = val;\n    }\n  };\nconst addDetailXY = (baseClass) =>\n  class extends baseClass {\n    #detail_x = 2;\n    #detail_y = 2;\n    /**\n     * number of segments in the x-direction\n     * @type {Integer}\n     */\n    get detail_x() {\n      return this.#detail_x;\n    }\n    set detail_x(val) {\n      this.#detail_x = val;\n    }\n    /**\n     * number of segments in the y-direction\n     * @type {Integer}\n     */\n    get detail_y() {\n      return this.#detail_y;\n    }\n    set detail_y(val) {\n      this.#detail_y = val;\n    }\n  };\n/**\n * Draws an arc onto a ```<canvas-3d>```.\n * The origin may be changed with the ellipse_mode property.\n *\n * The arc is always drawn clockwise from wherever start falls to wherever\n * stop falls on the ellipse. Adding or subtracting TWO_PI to either angle\n * does not change where they fall. If both start and stop fall at the same\n * place, a full ellipse will be drawn. Be aware that the y-axis increases in\n * the downward direction, therefore angles are measured clockwise from the\n * positive x-direction (\"3 o'clock\").\n * @element arc-3d\n */\nclass Arc3D extends remove3DFromRenderFunctionName(\n  addXY(addArcProps(addDetail(add3DProps(RenderedElement))))\n) {\n  static overloads = [\n    \"x, y, width, height, start_angle, stop_angle, [mode], [detail]\",\n  ];\n}\ncustomElements.define(\"p-arc-3d\", Arc3D);\n\nclass Base2DTo3D extends add3DTransformProps(add3DProps(RenderedElement)) {}\n/**\n * Draws an ellipse (oval) onto a ```<canvas-3d>```. If no height is specified, the\n * value of width is used for both the width and height. If a\n * negative height or width is specified, the absolute value is taken.\n *\n * An ellipse with equal width and height is a circle. The origin may be\n * changed with the ellipseMode() function.\n * @element ellipse-3d\n */\nclass Ellipse3D extends remove3DFromRenderFunctionName(\n  addXY(addWidthHeight(addFillStroke(Base2DTo3D)))\n) {\n  static overloads = [\"x, y, width, [height], [detail]\"];\n}\ncustomElements.define(\"p-ellipse-3d\", Ellipse3D);\n\n/**\n * Draws a circle onto a ```<canvas-3d>```. A circle is a simple closed shape. It is the\n * set of all points in a plane that are at a given distance from a given\n * point, the center.\n * @element circle\n */\nclass Circle3D extends remove3DFromRenderFunctionName(\n  addXY(addDiameter(addFillStroke(Base2DTo3D)))\n) {\n  static overloads = [\"x, y, diameter\"];\n}\ncustomElements.define(\"p-circle-3d\", Circle3D);\n\n/**\n * Draws a line (a direct path between two points) onto a ```<canvas-3d>```. Its width\n * can be modified by using the stroke_weight property. A line cannot be\n * filled, therefore the fill_color property will not affect the color of a\n * line. So to color a line, use the stroke property.\n * @element line-3d\n */\nclass Line3D extends remove3DFromRenderFunctionName(\n  addXYZ1(addXYZ2(addStroke(Base2DTo3D)))\n) {\n  static overloads = [\"x1, y1, z1, x2, y2, z2\"];\n}\ncustomElements.define(\"p-line-3d\", Line3D);\n\n/**\n * Draws a point, a coordinate in space at the dimension of one pixel onto a ```<canvas-3d>```.\n * The color of the point is changed with the stroke property. The size of\n * the point can be changed with the stroke_weight property.\n * @element point\n */\nclass Point3D extends remove3DFromRenderFunctionName(\n  addXYZ(addStroke(Base2DTo3D))\n) {\n  static overloads = [\"x, y, z\"];\n}\ncustomElements.define(\"p-point-3d\", Point3D);\n\n/**\n * Draws a quad onto a ```<canvas-3d>```. A quad is a quadrilateral, a four-sided\n * polygon. It is similar to a rectangle, but the angles between its edges\n * are not constrained to ninety degrees. The x1 and y1 properties set the\n * first vertex and the subsequent pairs should proceed clockwise or\n * counter-clockwise around the defined shape.\n * @element quad\n */\nclass Quad3D extends remove3DFromRenderFunctionName(\n  addXYZ1(addXYZ2(addXYZ3(addXYZ4(addDetailXY(addFillStroke(Base2DTo3D))))))\n) {\n  static overloads = [\n    \"x1, y1, z1, x2, y2, z2, x3, y3, z3, x4, y4, z4, [detail_x], [detail_y]\",\n  ];\n}\ncustomElements.define(\"p-quad-3d\", Quad3D);\n/**\n * Draws a rectangle onto a ```<canvas-3d>```. A rectangle is a four-sided closed shape\n * with every angle at ninety degrees. By default, the x and y properties\n * set the location of the upper-left corner, w sets the width, and h sets\n * the height. The way these properties are interpreted may be changed with\n * the rect_mode property.\n * @element rect\n */\nclass Rect3D extends remove3DFromRenderFunctionName(\n  addXY(addWidthHeight(addFillStroke(Base2DTo3D)))\n) {\n  static overloads = [\n    \"x, y, width, [height], [top_left_radius], [top_right_radius], [bottom_right_radius], [bottom_left_radius]\",\n  ];\n}\ncustomElements.define(\"p-rect-3d\", Rect3D);\n\n/**\n * Draws a triangle onto a ```<canvas-3d>```. A triangle is a plane created by connecting\n * three points. x1 and y1 specify the first point, x2 and y2 specify the\n * second point, and x3 and y3 specify the\n * third point.\n * @element triangle\n */\nclass Triangle3D extends remove3DFromRenderFunctionName(\n  addXYZ1(addXYZ2(addXYZ3(addFillStroke(Base2DTo3D))))\n) {\n  static overloads = [\"x1, y1, z1, x2, y2, z2, x3, y3, z3\"];\n}\ncustomElements.define(\"p-triangle-3d\", Triangle3D);\n\n/**\n * Draws a cubic Bezier curve onto a ```<canvas-3d>```. These curves are defined by a\n * series of anchor and control points. x1 and y1 specify\n * the first anchor point and x4 and y4 specify the other\n * anchor point, which become the first and last points on the curve. (x2, y2)\n * and (x3, y3) specify the two control points which define the shape\n * of the curve. Approximately speaking, control points \"pull\" the curve\n * towards them.\n *\n * Bezier curves were developed by French automotive engineer Pierre Bezier,\n * and are commonly used in computer graphics to define gently sloping curves.\n * @element bezier-3d\n */\nclass Bezier3D extends remove3DFromRenderFunctionName(\n  addXYZ1(\n    addXYZ2(\n      addXYZ3(\n        addXYZ4(addFillStroke(add3DProps(addBezierMethods(RenderedElement))))\n      )\n    )\n  )\n) {\n  static overloads = [\"x1, y1, z1, x2, y2, z2, x3, y3, z3, x4, y4, z4\"];\n}\ncustomElements.define(\"p-bezier-3d\", Bezier3D);\n\n/**\n * Draws a curved line onto a ```<canvas-3d>``` between two points,\n * given as (x2, y2) and (x3, y3).\n * (x1, y1) is a control point, as\n * if the curve came from this point even though it's not drawn. (x4, y4) similarly describes\n * the other control point.\n *\n * Longer curves can be created by putting a series of ```<curve-3d>``` elements\n * together or using ```<curve-vertex>```. The curve_tightness property provides control\n * for the visual quality of the curve.\n * The ```<curve>``` element is an implementation of Catmull-Rom splines.\n * @element curve\n */\nclass Curve3D extends remove3DFromRenderFunctionName(\n  addXYZ1(\n    addXYZ2(\n      addXYZ3(\n        addXYZ4(\n          addCurveTightness(\n            addFillStroke(add3DProps(addCurveMethods(RenderedElement)))\n          )\n        )\n      )\n    )\n  )\n) {\n  static overloads = [\"x1, y1, z1, x2, y2, z2, x3, y3, z3, x4, y4, z4\"];\n}\ncustomElements.define(\"p-curve-3d\", Curve3D);\n/**\n * Use the ```<contour-3d>``` element to create negative shapes\n * within a ```<shape-3d>``` element such as the center of the letter 'O'.\n * The vertices of the ```<contour-3d>``` are defined by its\n * ```<vertex-3d>``` and ```<curve-vertex-3d>``` children.\n * The vertices that define a negative shape must \"wind\" in the opposite direction\n * from the exterior shape. First draw vertices for the exterior clockwise order, then for internal shapes, draw vertices\n * shape in counter-clockwise.\n *\n * This element must be a child of a ```<shape-3d>```.\n * @element contour\n */\nclass Contour3D extends remove3DFromRenderFunctionName(\n  addFillStroke(add3DProps(RenderedElement))\n) {\n  renderFunctionName = \"beginContour\";\n  endRender() {\n    this.pInst.endContour();\n  }\n}\ncustomElements.define(\"p-contour-3d\", Contour3D);\n/**\n * Using the ```<shape-3d>``` element allow creating more\n * complex forms on a ```<canvas-3d>```.\n * The vertices of the shape are defined by its ```<vertex-3d>```,\n * ```<curve-vertex-3d>```, and/or ```<quadratic-vertex-3d>``` children.\n * The value of the kind property tells it which\n * types of shapes to create from the provided vertices. With no mode\n * specified, the shape can be any irregular polygon.\n *\n *\n * Transformations such as translate, angle, and scale do not work on children on ```<shape-3d>```.\n * It is also not possible to use other shapes, such as\n * ```<ellipse-3d>``` or ```<rect-3d>``` as children of ```<shape-3d>```.\n * @element shape-3d\n */\nclass Shape3D extends addShapeElementProps(addFillStroke(Base2DTo3D)) {}\ncustomElements.define(\"p-shape-3d\", Shape3D);\n\nconst addUV = (baseClass) =>\n  class extends baseClass {\n    #u;\n    #v;\n    /**\n     * the vertex's texture u-coordinate\n     * @type {number}\n     */\n    get u() {\n      return this.#u;\n    }\n    set u(val) {\n      this.#u = val;\n    }\n    /**\n     * the vertex's texture v-coordinate\n     * @type {number}\n     */\n    get v() {\n      return this.#v;\n    }\n    set v(val) {\n      this.#v = val;\n    }\n  };\n/**\n * All shapes are constructed by connecting a series of vertices. ```<vertex-3d>```\n * is used to specify the vertex coordinates for shapes on a ```<canvas-3d>```.\n * It is used exclusively as a child of the ```<shape-3d>``` element.\n * @element vertex\n */\nclass Vertex3D extends addXYZ(addUV(RenderedElement)) {\n  static overloads = [\"x, y, z, [u], [v]\"];\n}\ncustomElements.define(\"p-vertex-3d\", Vertex3D);\n/**\n * Specifies vertex coordinates for quadratic Bezier curves on a ```<canvas-3d>```.\n * Each ```<quadratic-vertex-3d>```\n * defines the position of one control points and one\n * anchor point of a Bezier curve, adding a new segment to a line or shape.\n * The first ```<quadratic-vertex-3d>``` child of a ```<shape>``` element\n * must have a ```<vertex-3d>``` sibling above it to set the first anchor point.\n *\n * This element must be a child of a ```<shape-3d>``` element\n * and only when there is no MODE or POINTS property specified on the\n *  ```<shape-3d>```.\n */\n\nclass QuadraticVertex3D extends addXYZ3(RenderedElement) {\n  static overloads = [\"cx, cy, cz, x3, y3, z3\"];\n}\ncustomElements.define(\"p-quadratic-vertex-3d\", QuadraticVertex3D);\n\n/**\n * Specifies vertex coordinates for curves. This function may only\n * be used as a child of the ```<shape-3d>``` element and only when there\n * is no MODE property specified on the ```<shape-3d>``.\n *\n * The first and last points in a series of ```<curve-vertex-3d>``` lines\n * will be used to\n * guide the beginning and end of the curve. A minimum of four\n * points is required to draw a tiny curve between the second and\n * third points. Adding a fifth point with ```<curve-vertex>``` will draw\n * the curve between the second, third, and fourth points. The\n * ```<curve-vertex>``` element is an implementation of Catmull-Rom\n * splines.\n */\nclass CurveVertex3D extends remove3DFromRenderFunctionName(\n  addXYZ(addCurveTightness(addFillStroke(add3DProps(RenderedElement))))\n) {\n  static overloads = [\"x, y, z\"];\n}\ncustomElements.define(\"p-curve-vertex-3d\", CurveVertex3D);\n","import {\n  WebGLLight,\n  addLightFalloff,\n  addSpecularColor,\n} from \"../properties/3d_props\";\nimport { addXYZ } from \"../properties/shape_props\";\nimport { addColorVals } from \"../properties/color_props\";\n\n/**\n * Creates an ambient light with the given color.\n *\n * Ambient light does not come from a specific direction.\n * Objects are evenly lit from all sides. Ambient lights are\n * almost always used in combination with other types of lights.\n * @element ambient-light\n * @attribute {Number}   v1     red or hue value relative to the current color\n *                                range\n * @attribute {Number}   v2     green or saturation value relative to the\n *                                current color range\n * @attribute {Number}   v3     blue or brightness value relative to the current\n *                                color range\n * @attribute {Number}   alpha  alpha value relative to current color range\n *                                (default is 0-255)\n * @attribute {Number}   gray   number specifying value between\n *                                white and black\n * @attribute {String}   value  a color string\n * @attribute {Number[]} values an array containing the red,green,blue &\n *                                 and alpha components of the color\n * @attribute {p5.Color} color  color as a <a\n *                                 href=\"https://p5js.org/reference/#/p5.Color\"\n *                                 target=\"_blank\">p5.Color</a>\n */\nclass AmbientLight extends WebGLLight {\n  static overloads = [\n    \"v1, v2, v3, [alpha]\",\n    \"gray, [alpha]\",\n    \"value\",\n    \"values\",\n    \"color\",\n  ];\n}\ncustomElements.define(\"p-ambient-light\", AmbientLight);\n\n/**\n * Creates a directional light with the given color and direction.\n *\n * Directional light comes from one direction.\n * The direction is specified as numbers inclusively between -1 and 1.\n * For example, setting the direction as (0, -1, 0) will cause the\n * geometry to be lit from below (since the light will be facing\n * directly upwards). Similarly, setting the direction as (1, 0, 0)\n * will cause the geometry to be lit from the left (since the light\n * will be facing directly rightwards).\n *\n * Directional lights do not have a specific point of origin, and\n * therefore cannot be positioned closer or farther away from a geometry.\n *\n * A maximum of **5** directional lights can be active at once.\n */\nclass DirectionalLight extends addSpecularColor(WebGLLight) {\n  static overloads = [\n    \"v1, v2, v3, x, y, z\",\n    \"v1, v2, v3, direction\",\n    \"color, x, y, z\",\n    \"color, direction\",\n  ];\n}\ncustomElements.define(\"p-directional-light\", DirectionalLight);\n\n/**\n * Creates a point light with the given color and position.\n *\n * A point light emits light from a single point in all directions.\n * Because the light is emitted from a specific point (position),\n * it has a different effect when it is positioned farther vs. nearer\n * an object.\n *\n * A maximum of **5** point lights can be active at once.\n */\nclass PointLight extends addXYZ(\n  addColorVals(addLightFalloff(addSpecularColor(WebGLLight)))\n) {\n  static overloads = [\n    \"v1, v2, v3, x, y, z\",\n    \"v1, v2, v3, position\",\n    \"color, x, y, z\",\n    \"color, position\",\n  ];\n}\ncustomElements.define(\"p-point-light\", PointLight);\n\n/**\n * Places an ambient and directional light in the scene.\n * The lights are set to <ambient-light v1=\"128\" v2=\"128\" v3=\"128\"> and\n * <directional-light v1=\"128\" v2=\"128\" v3'=\"128\" x=\"0\" y=\"0\" z=\"-1\">.\n */\nclass Lights extends addSpecularColor(WebGLLight) {\n  static overloads = [\"\"];\n}\ncustomElements.define(\"p-lights\", Lights);\n\n/**\n * Creates a spot light with the given color, position,\n * light direction, angle, and concentration.\n *\n * Like a ```<point-light>```, a ```<spot-light>```\n * emits light from a specific point (position). It has a different effect\n * when it is positioned farther vs. nearer an object.\n *\n * However, unlike a ```<point-light>```, the light is emitted in **one\n * direction**\n * along a conical shape. The shape of the cone can be controlled using\n * the `angle` and `concentration` parameters.\n *\n * The `angle` parameter is used to\n * determine the radius of the cone. And the `concentration`\n * parameter is used to focus the light towards the center of\n * the cone. Both parameters are optional, however if you want\n * to specify `concentration`, you must also specify `angle`.\n * The minimum concentration value is 1.\n *\n * A maximum of **5** spot lights can be active at once.\n */\nclass SpotLight extends addLightFalloff(addSpecularColor(WebGLLight)) {\n  static overloads = [\n    \"v1, v2, v3, x, y, z, rx, ry, rz, [angle], [concentration]\",\n    \"color, position, direction, [angle], [concentration]\",\n    \"v1, v2, v3, position, direction, [angle], [concentration]\",\n    \"color, x, y, z, direction, [angle], [concentration]\",\n    \"color, position, rx, ry, rz, [angle], [concentration]\",\n    \"v1, v2, v3, x, y, z, direction, [angle], [concentration]\",\n    \"v1, v2, v3, position, rx, ry, rz, [angle], [concentration]\",\n    \"color, x, y, z, rx, ry, rz, [angle], [concentration]\",\n  ];\n}\ncustomElements.define(\"p-spot-light\", SpotLight);\n","\"use strict\";\nimport \"./core\";\nimport \"./elements/canvas_elements\";\nimport \"./elements/2d_shape_elements\";\nimport \"./modules/environment\";\nimport \"./elements/color_elements\";\nimport \"./elements/beyond_canvas_elements\";\nimport \"./modules/structure\";\nimport \"./modules/dom\";\nimport \"./modules/rendering\";\nimport \"./modules/events\";\nimport \"./modules/io\";\nimport \"./elements/image_elements\";\nimport \"./elements/typography_elements\";\nimport \"./elements/3d_shape_elements\";\nimport \"./elements/3d_light_elements\";\n\nconst customElementsDefined = new Event(\"customElementsDefined\");\ndispatchEvent(customElementsDefined);\n"],"names":["$89448357db377a89$var$upperCaseChar","$89448357db377a89$var$upperCaseCharAfterFirst","$89448357db377a89$var$prependMatch","char","$89448357db377a89$export$e12f55f9c91df96a","camelStr","replace","toLowerCase","$89448357db377a89$export$1e3da36a069282b8","pascalStr","slice","$44dcb04f21663935$export$b61bda4fbca264f2","obj","p","p5","prototype","Object","defineProperties","$44dcb04f21663935$export$e00416b3cd122575","methodName","wrapper","$44dcb04f21663935$export$49218a2feaa1d459","propNames","forEach","propName","$24d08737f90f200a$export$f5ddaad6515de8cc","baseClass","create_camera","this","pInst","createCamera","create_shader","createShader","arguments","$b95df7bebb66e675$export$df7182d31779a5d2","lerp_color","lerpColor","$dcca091abd33c5ad$export$89e97ff02600e0c0","storage","Proxy","get","target","prop","clearStorage","removeItem","getItem","set","val","storeItem","$28056ddf9d69f138$export$480a8cd27449d6bd","create_string_dict","createStringDict","create_number_dict","createNumberDict","$6b5f8785577a2743$var$Collide","static","point","circle","ellipse","rect","line","arc","triangle","poly","debug","element","constructor","elements","elementA","elementB","collider","colliderA","colliderB","argsA","collision_args","argsB","fnNameForward","fnNameBackward","console","warn","rect_rect","x","y","w","h","x2","y2","w2","h2","rect_rect_vector","p1","sz","p2","sz2","rect_circle","rx","ry","rw","rh","cx","cy","diameter","testX","testY","dist","rect_circle_vector","r","c","circle_circle","d","d2","circle_circle_vector","point_circle","point_circle_vector","point_ellipse","dx","dy","xx","yy","eyy","sqrt","abs","point_ellipse_vector","point_rect","pointX","pointY","xW","yW","point_rect_vector","point_line","px","py","x1","y1","buffer","d1","lineLen","undefined","point_line_vector","line_circle","inside1","inside2","distX","distY","len","dot","pow","closestX","closestY","line_circle_vector","line_line","x3","y3","x4","y4","calcIntersection","uA","uB","intersectionX","intersectionY","line_line_vector","p3","p4","line_rect","left","right","top","bottom","intersection","line_rect_vector","rsz","point_poly","vertices","collision","next","current","length","vc","vn","point_poly_vector","circle_poly","interior","circle_poly_vector","rect_poly","rect_poly_vector","line_poly","line_poly_vector","vertice","poly_poly","poly_poly_vector","point_triangle","areaOrig","point_triangle_vector","point_point","point_point_vector","point_arc","ax","ay","arcRadius","arcHeading","arcAngle","createVector","arcPos","radius","rotate","pointToArc","copy","sub","angle","angleBetween","point_arc_vector","a","collider_type","$6b5f8785577a2743$export$c8dddae6889b41c4","$6b5f8785577a2743$export$b46a7ea7c25c5e6d","collide","colliding_with","el","$ad9ddeec68350049$export$1a988e7317c65621","NONE","CORNER","CORNERS","CENTER","$f692e3f0f3a045dc$var$singleCharTokens","Set","$f692e3f0f3a045dc$export$2b7f80a2c1376e05","number","property","member","boolean","additive","multiplicative","not","comparison","equality","string","constant","logical","until","end","$f692e3f0f3a045dc$var$token","kind","start","value","$f692e3f0f3a045dc$export$2362472f718c8625","$f692e3f0f3a045dc$export$19b172c586f937c9","str","getTokens","tokens","strFromStart","leadingWhitespace","match","has","end1","singleCharToken","concat","numberMatch","end2","numberToken","additiveMatch","end3","addToken","multiplicativeMatch","end4","multiplicativeToken","booleanMatch","end5","booleanToken","notMatch","end6","notToken","comparisonMatch","end7","comparisonToken","equalityMatch","end8","equalityToken","logicalMatch","end9","logicalToken","untilMatch","end10","untilToken","memberMatch","end11","memberToken","constantMatch","entries","find","key","end12","constantToken","propertyMatch","end13","propertyToken","stringMatch","end14","stringToken","error","$c6573d83a0176698$var$isArray","parenthesesDepth","token","remainder","$c6573d83a0176698$var$commaSeparateSections","squareBracketDepth","curlyBracketDepth","sections","lastSectionIndex","lastSectionConcatenated","sectionsConcatenated","$c6573d83a0176698$var$getRightParenthesisIndex","index","depth","$c6573d83a0176698$export$98e6a39c04603d36","attrName","fullListOfTokens","objectLiteral","tokensBetweenBrackets","log","keyValuePairs","map","sectionTokens","i","colonIndex","findIndex","getValue","parseExpression","propName1","tokensAfterColon","getValue1","getPropName","getValue2","parseAndAutoEnclose","fromEntries","fn","array","getSectionExpressions","s","getObj","getPreviousMemberName","afterPreviousMember","nextToken","call","getBaseObj","firstMemberName","afterFirstMember","getLastMemberName","afterLastMember","getNextMemberName","afterNextMember","t","join","afterNext","rightSquareBracketIndex","getComputedMemberName","tokensAfterBrackets","computedMember","afterNextToken","rightParenthesisIndex","getArguments","memberName","HTMLCanvasElement","parentElement","tagName","getObjectWithProperty","primary","numberStringVal","Number","booleanValue","rightOfNot","tokensAfterLeftParenthesis","tokensBetweenParentheses","parentheses","rightCurlyBracketIndex","afterLeft","operator","rightTokens","getCompareFn","is","ternary","middle","afterRight","getExpression","afterExpression","section","questionIndex","$c6573d83a0176698$var$hasColonOutsideTernaryAndParentheses","$4584bfdf7622d40e$export$67beed298888a38b","attrValue","$60a5ac0d41fb58c8$export$a00e2346eabbdbef","name","getAttribute","customElements","renderFunctionName","super","setDefaults","Array","from","attributes","hasAttribute","setAttribute","childClones","children","child","cloneNode","prepend","renderToCanvas","$60a5ac0d41fb58c8$var$Sketch","HTMLLinkElement","loadXML","href","convertElement","xmlEl","xmlTag","createElementArguments","xmlTagToCreateElementArguments","pEl","document","createElement","copyAttributes","childNode","childNodes","nodeType","appendChild","convertXML","e","xml","response","documentElement","body","querySelectorAll","canvas","runCode","orig","attrs","attr","path","request","XMLHttpRequest","open","responseType","overrideMimeType","addEventListener","bind","send","xmlTag1","define","extends","$60a5ac0d41fb58c8$var$Asset","HTMLElement","image","font","json","strings","table","bytes","shader","async","data","loadFn","loadFns","$4065c0fe60141175$export$9f9bf41e917f10e","angle_mode","RADIANS","perlin_octaves","perlin_amp_falloff","noise_seed","random_seed","mode","angleMode","_angleMode","math","Math","noise_detail","noiseDetail","noiseSeed","randomSeed","$6805b2e8a7c91216$export$ee3de0a7dd131a91","vector","$ffa5c21022f5e20d$export$a58b47d028f9234f","mouseX","mouseY","previous","pmouseX","pmouseY","window","winMouseX","winMouseY","pwinMouseX","pwinMouseY","movedX","movedY","pressed","mouseIsPressed","button","mouseButton","dragging","accelerationX","accelerationY","z","accelerationZ","pAccelerationX","$2685a5c7a5290281$var$addAnchor","anchor","Vector","isArray","$2685a5c7a5290281$var$add2DAngle","$2685a5c7a5290281$var$addScale","scale","$2685a5c7a5290281$var$addShear","shear_x","shear_y","$2685a5c7a5290281$var$addMatrixProps","apply_matrix","DOMMatrix","reset_transform","apply_transform","$2685a5c7a5290281$export$cd9f7ba93ec6c49f","$2685a5c7a5290281$var$add3DAngle","angle_x","angle_y","angle_z","$2685a5c7a5290281$export$7d759072b2be4e22","$64e5c86ae77fede0$var$addPositionConverters","canvas_to_local_position","vx","vy","vz","canvas_position","DOMPoint","canvas_point","transform_matrix","inverse","pixelDensity","transformPoint","local_to_canvas_position","local_position","local_point","$64e5c86ae77fede0$export$c0049cef078ecb01","transform","resetMatrix","shear_x_rads","_toRadians","shear_y_rads","shear_x_matrix","tan","shear_y_matrix","translate","multiply","b","f","drawingContext","getTransform","$64e5c86ae77fede0$export$bc17fd552ac7bdac","rotateX","rotateY","rotateZ","shearX","shearY","base","options","descriptor","getOwnPropertyDescriptor","globalObject","writable","defineProperty","assignCanvas","noCanvas","mainDiv","querySelector","id","remove","WEBGL","_setProperty","RendererGL","Renderer2D","_renderer","_applyDefaults","assets","loadAssets","assetElements","promises","load","Promise","all","result","_decrementPreload","registerPreloadMethod","_debug_attributes","create_canvas_element","elementName","createdElement","setup","this_element","object_assign","sources","assign","debug_attributes","valType","$8906e57642561d24$var$attributePriorities","$8906e57642561d24$export$a11dc51f2ecd743e","frame_created","proxy","state","updateFunctions","Map","on","repeat","change","above_sibling","previousElementSibling","above_siblings_off","firstElementChild","applyChange","changed","assignProp","changeVal","attributeInherited","attributeName","props","split","blend_mode","isP3D","curBlendMode","globalCompositeOperation","blendMode","callAttributeUpdater","color_mode","_colorMode","colorMode","comments","html","flat","content","getInherited","owner","filter","nodeValue","_","trim","node","removeChild","insertBefore","createTextNode","firstChild","draw","updateAttribute","push","updateState","description","describe","describeElement","render","pop","updaters","updater","endRender","drawing_context","replaceAll","erase","_isErasing","noErase","first_frame","frame_count","frameCount","outerHTML","innerHTML","otherDescribedElementsWithThisName","orderedAttributeNames","sort","indexOf","parent","setupEvalFns","setupRenderFunction","setupEvalFn","getAssignPropRef","beforeDot","afterDot","assignObj","assignPropName","interpretation","err","removeAttribute","inheritedAttributes","add","includes","customAttributeToProperty","attrName1","v","Color","toString","valToString","updateFunction","webgl_attributes","_glAttributes","setAttributes","$8906e57642561d24$export$82fefa1d40d42487","$8906e57642561d24$export$66cca51e2e9c1a33","toUpperCase","getArgumentsFromOverloads","overloads","isOptional","param","overloadMatch","overloadsSplitSorted","o","overloadParams","optional","every","lastParamWithAttribute","findLastIndex","args","$8906e57642561d24$var$_","$8906e57642561d24$var$_3D","$9b5f65468e15ca6f$export$bf2e82bce1545c45","background","Image","color","cursor","style","noCursor","height","isNaN","resize","width","pixels","loadPixels","updatePixels","loop","noLoop","_pixelDensity","savedKey","redraw","$fc5fb412c5036f0e$export$5eb092502585022b","preload","renderer","orbit_control","orbitControl","window_resized","registerMethod","$53b86be160e08b80$var$Window","resized","windowWidth","windowHeight","$53b86be160e08b80$export$a9e2f2714159e1ff","fullscreen","frame_rate","_frameRate","frameRate","pixel_density","display_density","displayDensity","delta_time","deltaTime","screen","grid_output","_accessibleOutputs","grid","gridOutput","$6c0b298c3cfb5d66$var$Canvas","$6c0b298c3cfb5d66$var$WebGLCanvas","bezier_detail","curve_detail","debug_mode","bezierDetail","_bezierDetail","camera","_curCamera","Camera","setCamera","curveDetail","_curveDetail","noDebugMode","debugMode","ortho","$da97febd6adddc1f$export$a4b143f4d85e7bf7","point_at","bezierPoint","tangent_at","bezierTangent","$da97febd6adddc1f$export$f9e88d76da73025c","curvePoint","curveTangent","$022e415a751e8338$export$b2e29383819ac3c4","stroke","stroke_weight","noStroke","curStrokeColor","strokeStyle","strokeWeight","curStrokeWeight","lineWidth","$022e415a751e8338$export$2a83b8e39b618423","fill","noFill","curFillColor","fillStyle","$022e415a751e8338$export$306219eb761ac4c2","$022e415a751e8338$export$1c730bb33b0db09f","v1","v2","v3","$b2c70728a33f900e$export$5f4909ba2c08017a","$b2c70728a33f900e$export$767c784c12981b7a","$b2c70728a33f900e$var$addZ","$b2c70728a33f900e$export$339b9be62e060004","$b2c70728a33f900e$var$addXY1","$b2c70728a33f900e$var$addXY2","$b2c70728a33f900e$export$d38590504f301641","$b2c70728a33f900e$export$3b9f5e1deb5b3f70","$b2c70728a33f900e$var$addZ1","z1","$b2c70728a33f900e$export$604ef710b341881f","$b2c70728a33f900e$var$addZ2","z2","$b2c70728a33f900e$export$81fbedce0d6f2624","$b2c70728a33f900e$export$6945b0bfc23861d6","$b2c70728a33f900e$var$addXY123","$b2c70728a33f900e$export$f37ee723107c34f2","z3","$b2c70728a33f900e$export$fae99258cbe6a26a","$b2c70728a33f900e$export$3cfeb607d06c2291","z4","$b2c70728a33f900e$export$e267bc9e857642fc","$b2c70728a33f900e$export$7757a7d90505b04a","rect_mode","rectMode","_rectMode","$b2c70728a33f900e$export$1caa28391933d750","smooth","stroke_cap","stroke_join","noSmooth","strokeCap","lineCap","strokeJoin","lineJoin","$b2c70728a33f900e$export$99f537b5fba70e67","tightness","$b2c70728a33f900e$export$ef4fa9024d8dc750","$3205d1d25ffdfed4$var$add2DStroke","$3205d1d25ffdfed4$var$add2DFillStroke","$3205d1d25ffdfed4$var$transformVertexFn","$3205d1d25ffdfed4$var$Transformed2DElement","$3205d1d25ffdfed4$export$761535d4bf6998ba","start_angle","stop_angle","PI","mouse_over","local_mouse_x","local_mouse_y","assert","arcRotation","$3205d1d25ffdfed4$var$Arc","$3205d1d25ffdfed4$var$addEllipse2DCollisionProps","$3205d1d25ffdfed4$var$Ellipse","$3205d1d25ffdfed4$var$addCircle2DCollisionProps","mouseX1","mouseY1","$3205d1d25ffdfed4$export$115022717b09ec84","$3205d1d25ffdfed4$var$Circle","$3205d1d25ffdfed4$var$addLine2DCollisionProps","$3205d1d25ffdfed4$var$Line","$3205d1d25ffdfed4$var$addPointCollisionProps","$3205d1d25ffdfed4$var$Point","$3205d1d25ffdfed4$var$addQuad2DCollisionProps","$3205d1d25ffdfed4$var$Quad","$3205d1d25ffdfed4$var$addCornerRadius","top_left_radius","top_right_radius","bottom_left_radius","bottom_right_radius","$3205d1d25ffdfed4$var$Rect","$3205d1d25ffdfed4$var$Square","size","$3205d1d25ffdfed4$var$Triangle","$3205d1d25ffdfed4$var$Bezier","$3205d1d25ffdfed4$var$Curve","$3205d1d25ffdfed4$var$Contour","endContour","$3205d1d25ffdfed4$var$addShape2DCollisionProps","arrayFromChildren","ca","$3205d1d25ffdfed4$var$Vertex","$3205d1d25ffdfed4$var$QuadraticVertex","$3205d1d25ffdfed4$export$d11dd115fc87026","endShape","$3205d1d25ffdfed4$var$Shape","$3205d1d25ffdfed4$var$CurveVertex","_createDescriptionContainer","cnvId","descriptionContainer","append","type","text","describeId","dummyDOM","descriptions","fallback","display","getElementById","parentNode","text_output","_updateAccsOutput","url","getURL","url_path","getURLPath","url_params","getURLParams","print","textOutput","animate","isLooping","remove_canvas","device_moved","device_turned","mouse_down","mouse_up","mouse_dragging","mouse_double_clicked","_mouseWheel","key_down","key_up","touch_started","touch_moved","touch_ended","_startAngleZ","_mouseWheelDeltaY","mouse_held","_moveThreshold","_shakeThreshold","rotationX","rotationY","rotationZ","pRotationX","pRotationY","pRotationZ","key_code","keyCode","mouse_wheel","move_threshold","setMoveThreshold","pointer_lock_request","pointerLockElement","_curElement","elt","requestPointerLock","exitPointerLock","shake_threshold","setShakeThreshold","http_post","httpPost","http_do","httpDo","save_file","save","save_json_file","saveJSON","save_strings_file","saveStrings","save_table_file","saveTable","$fe8322642c88a6fe$var$Image","image_mode","tint","noTint","_tint","imageMode","DEFAULT","AMBIENT","SPECULAR","EMISSIVE","$852ce654068efccb$export$f7627f06e20bd00e","ambient_material","emissive_material","shininess","specular_material","no_lights","ambientMaterial","emissiveMaterial","normal_material","useNormalMaterial","normalMaterial","userStrokeShader","userFillShader","resetShader","specularMaterial","texture","_tex","texture_mode","textureMode","texture_wrap","textureWrapX","textureWrapY","textureWrap","noLights","$852ce654068efccb$export$c1b6c06f00a3c53a","inherited","$852ce654068efccb$export$fe226f30800ca89d","specular_color","specularColor","$852ce654068efccb$export$ebd05637ed7f2471","light_falloff","linear","quadratic","lightFalloff","constantAttenuation","linearAttenuation","quadraticAttenuation","$63bcb537b6312bd1$export$512a862c62a0defc","align","LEFT","BASELINE","leading","font_size","NORMAL","wrap","WORD","textAlign","_textAlign","_textBaseline","textLeading","_textLeading","textFont","_textFont","textSize","$aa674f0fae135a0a$var$Text","$aa674f0fae135a0a$var$addFont3D","$aa674f0fae135a0a$var$Text3D","$eb996006dee34211$var$WebGLGeometry","$eb996006dee34211$var$Normal","$eb996006dee34211$var$Plane","$eb996006dee34211$var$Box","$eb996006dee34211$var$remove3DFromRenderFunctionName","$eb996006dee34211$var$addDetail","detail","$eb996006dee34211$var$addDetailXY","detail_x","detail_y","$eb996006dee34211$var$Arc3D","$eb996006dee34211$var$Base2DTo3D","$eb996006dee34211$var$Ellipse3D","$eb996006dee34211$var$Circle3D","$eb996006dee34211$var$Line3D","$eb996006dee34211$var$Point3D","$eb996006dee34211$var$Quad3D","$eb996006dee34211$var$Rect3D","$eb996006dee34211$var$Triangle3D","$eb996006dee34211$var$Bezier3D","$eb996006dee34211$var$Curve3D","$eb996006dee34211$var$Contour3D","$eb996006dee34211$var$Shape3D","$eb996006dee34211$var$addUV","u","$eb996006dee34211$var$Vertex3D","$eb996006dee34211$var$QuadraticVertex3D","$eb996006dee34211$var$CurveVertex3D","$6a00c392c3730426$var$DirectionalLight","$6a00c392c3730426$var$PointLight","$6a00c392c3730426$var$Lights","$6a00c392c3730426$var$SpotLight","$35da740d59af89ba$var$customElementsDefined","Event","dispatchEvent"],"version":3,"file":"p5.marker.min.js.map"}