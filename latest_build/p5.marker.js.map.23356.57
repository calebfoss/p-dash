{"mappings":"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","sources":["src/index.js","src/core.js","src/utils/caseConvert.js","src/utils/attrParse.js","src/utils/p5Modifiers.js","src/methods/3d_methods.js","src/properties/color_props.js","src/methods/color_methods.js","src/properties/environment_props.js","src/properties/data_props.js","src/methods/data_methods.js","src/methods/collide_methods.js","src/elements/canvas_elements.js","src/properties/canvas_props.js","src/methods/canvas_methods.js","src/elements/2d_shape_elements.js","src/methods/shape_methods.js","src/properties/shape_props.js","src/properties/transform_props.js","src/methods/transform_methods.js","src/modules/environment.js","src/elements/color_elements.js","src/elements/beyond_canvas_elements.js","src/modules/structure.js","src/modules/dom.js","src/modules/math.js","src/modules/rendering.js","src/modules/transform.js","src/modules/events.js","src/modules/image.js","src/modules/io.js","src/modules/typography.js","src/elements/3d_shape_elements.js","src/properties/3d_props.js","src/elements/3d_light_elements.js"],"sourcesContent":["\"use strict\";\nimport \"./core\";\nimport \"./elements/canvas_elements\";\nimport \"./elements/2d_shape_elements\";\nimport \"./modules/environment\";\nimport \"./elements/color_elements\";\nimport \"./elements/beyond_canvas_elements\";\nimport \"./modules/structure\";\nimport \"./modules/dom\";\nimport \"./modules/math\";\nimport \"./modules/rendering\";\nimport \"./modules/transform\";\nimport \"./modules/events\";\nimport \"./modules/image\";\nimport \"./modules/io\";\nimport \"./modules/typography\";\nimport \"./elements/3d_shape_elements\";\nimport \"./elements/3d_light_elements\";\n\nconst customElementsDefined = new Event(\"customElementsDefined\");\ndispatchEvent(customElementsDefined);\n","import { pascalToKebab, kebabToCamel } from \"./utils/caseConvert\";\nimport { AttrParseUtil } from \"./utils/attrParse\";\nimport { wrapMethod, defineProperties } from \"./utils/p5Modifiers\";\nimport { addWebGLMethods } from \"./methods/3d_methods\";\nimport { addColorConstants } from \"./properties/color_props\";\nimport { addColorMethods } from \"./methods/color_methods\";\nimport { addEnvironmentProps } from \"./properties/environment_props\";\nimport { addStorage } from \"./properties/data_props\";\nimport { addDataMethods } from \"./methods/data_methods\";\nimport { addCollide } from \"./methods/collide_methods\";\n\nwrapMethod(\n  \"_createFriendlyGlobalFunctionBinder\",\n  (base) =>\n    function (options = {}) {\n      return (prop, value) => {\n        const descriptor = Object.getOwnPropertyDescriptor(p5.prototype, prop);\n        const globalObject = options.globalObject || window;\n        if (typeof descriptor === \"undefined\" || descriptor.writable)\n          return base.call(this, options)(prop, value);\n        return Object.defineProperty(globalObject, prop, descriptor);\n      };\n    }\n);\n\np5.prototype.assignCanvas = function (c, r) {\n  this.noCanvas();\n  const mainDiv = document.querySelector(\"main\");\n  let index = 0;\n  if (typeof c.id === \"undefined\") {\n    while (document.querySelector(`p5MarkerCanvas${index}`)) index++;\n  }\n  c.id = `p5MarkerCanvas${index}`;\n  if (mainDiv.children.length === 0) mainDiv.remove();\n  if (r === this.WEBGL) {\n    this._setProperty(\"_renderer\", new p5.RendererGL(c, this, true));\n  } else {\n    //P2D mode\n    this._setProperty(\"_renderer\", new p5.Renderer2D(c, this, true));\n  }\n  this._renderer._applyDefaults();\n  this._setProperty(\"_elements\", [this._renderer]);\n};\n\np5.prototype.assets = {};\n\np5.prototype.loadAssets = async function () {\n  const assetElements = Array.from(document.querySelectorAll(\"p-asset\"));\n  const pInst = this;\n  const promises = assetElements.map((el) => el.load(pInst));\n  const results = await Promise.all(promises);\n  results.forEach(\n    (result, i) => (this.assets[assetElements[i].getAttribute(\"name\")] = result)\n  );\n  this._decrementPreload();\n};\np5.prototype.registerPreloadMethod(\"loadAssets\", p5.prototype);\np5.prototype._debug_attributes = true;\np5.prototype.create_canvas_element = function (elementName) {\n  const createdElement = document.createElement(elementName);\n  this.canvas.appendChild(createdElement);\n  createdElement.setup(this, this.canvas);\n  return createdElement.this_element;\n};\ndefineProperties({\n  object_assign: {\n    set: function ([target, ...sources]) {\n      Object.assign(target, ...sources);\n    },\n  },\n  debug_attributes: {\n    get: function () {\n      return this._debug_attributes;\n    },\n    set: function (val) {\n      const valType = typeof val;\n      if (typeof val === \"boolean\") this._debug_attributes = val;\n      else\n        console.error(\n          `debug_attributes was set to a value of type ${valType} but may only be set to a boolean true/false value.`\n        );\n    },\n  },\n});\n\nconst attributePriorities = [\n  \"debug_attributes\",\n  \"anchor\",\n  \"angle\",\n  \"scale_factor\",\n  \"shear\",\n  \"_default\",\n  \"repeat\",\n  \"change\",\n];\nexport const addP5PropsAndMethods = (baseClass) =>\n  class P5Extension extends addColorMethods(\n    addColorConstants(\n      addWebGLMethods(addCollide(addStorage(addDataMethods(baseClass))))\n    )\n  ) {\n    /**\n     * This element's parent canvas.\n     * @private\n     */\n    #canvas;\n    #frame_created;\n    /**\n     * @private\n     */\n    #pInst;\n    /**\n     * @private\n     */\n    #proxy = new Proxy(this, {\n      get(target, prop) {\n        if (prop in target) return target[prop];\n        return target.#state[prop];\n      },\n      has(target, prop) {\n        if (prop in target) return true;\n        return prop in target.#state;\n      },\n      set(target, prop, val) {\n        target.set(prop, val);\n      },\n    });\n    /**\n     * @private\n     */\n    #state = {};\n\n    /**\n     * @private\n     */\n    #updateFunctions = new Map();\n    constructor() {\n      super();\n    }\n    /**\n     * Proxy for the sibling element above this element with access to its\n     * properties, methods, and attributes.\n     * @type {proxy}\n     */\n    get above_sibling() {\n      return this.previousElementSibling.this_element;\n    }\n    /**\n     * True if siblings directly above this element with an \"on\" attribute have\n     * \"on\" set to false. This can be used to switch between elements based on\n     * conditions, similar to if/else.\n     * @type {boolean}\n     */\n    get above_siblings_off() {\n      if (this === this.parentElement.firstElementChild) return true;\n      const { above_sibling } = this;\n      if (above_sibling.on) return false;\n      return above_sibling.above_siblings_off;\n    }\n    /**\n     * @method applyChange\n     * @private\n     */\n    #applyChange() {\n      const change = (this.#state.change = this.#updateAttribute(\n        this.#state,\n        \"change\",\n        this\n      ));\n      let changed = false;\n      const assignProp = (obj, prop) => {\n        if (prop in obj) {\n          const changeVal = change[prop];\n          changed ||= obj[prop] !== changeVal;\n          obj[prop] = changeVal;\n          if (this.pInst.debug_attributes) this.setAttribute(prop, changeVal);\n          return true;\n        }\n        return false;\n      };\n      for (const prop in change) {\n        assignProp(this, prop) ||\n          assignProp(this.#state, prop) ||\n          assignProp(this.pInst, prop) ||\n          console.error(\n            `${this.constructor.elementName}'s change attribute has a prop called ${prop} that is unknown`\n          );\n\n        this.#state[prop] = change[prop];\n      }\n      return changed;\n    }\n    /**\n     * Checks if the provided attribute name belongs to a parent element. If\n     * the attribute refers to an object property, this will check for an\n     * attribute with a name that matches the object.\n     * @param {string} attributeName - name of the attribute to check\n     * @returns {boolean} true\n     */\n    attributeInherited(attributeName) {\n      const [obj, ...props] = attributeName.split(\".\");\n      if (props.length) return this.attributeInherited(obj);\n      if (this.parentElement.hasAttribute(attributeName)) return true;\n      if (this.parentElement.attributeInherited)\n        return this.parentElement.attributeInherited(attributeName);\n      return false;\n    }\n    /**\n     * Blends the pixels in the display window according to the defined mode.\n     * There is a choice of the following modes to blend the source pixels (A)\n     * with the ones of pixels already in the display window (B):\n     * <ul>\n     * <li><code>BLEND</code> - linear interpolation of colours: C =\n     * A*factor + B. <b>This is the default blending mode.</b></li>\n     * <li><code>ADD</code> - sum of A and B</li>\n     * <li><code>DARKEST</code> - only the darkest colour succeeds: C =\n     * min(A*factor, B).</li>\n     * <li><code>LIGHTEST</code> - only the lightest colour succeeds: C =\n     * max(A*factor, B).</li>\n     * <li><code>DIFFERENCE</code> - subtract colors from underlying image.\n     * <em>(2D)</em></li>\n     * <li><code>EXCLUSION</code> - similar to <code>DIFFERENCE</code>, but less\n     * extreme.</li>\n     * <li><code>MULTIPLY</code> - multiply the colors, result will always be\n     * darker.</li>\n     * <li><code>SCREEN</code> - opposite multiply, uses inverse values of the\n     * colors.</li>\n     * <li><code>REPLACE</code> - the pixels entirely replace the others and\n     * don't utilize alpha (transparency) values.</li>\n     * <li><code>REMOVE</code> - removes pixels from B with the alpha strength of A.</li>\n     * <li><code>OVERLAY</code> - mix of <code>MULTIPLY</code> and <code>SCREEN\n     * </code>. Multiplies dark values, and screens light values. <em>(2D)</em></li>\n     * <li><code>HARD_LIGHT</code> - <code>SCREEN</code> when greater than 50%\n     * gray, <code>MULTIPLY</code> when lower. <em>(2D)</em></li>\n     * <li><code>SOFT_LIGHT</code> - mix of <code>DARKEST</code> and\n     * <code>LIGHTEST</code>. Works like <code>OVERLAY</code>, but not as harsh. <em>(2D)</em>\n     * </li>\n     * <li><code>DODGE</code> - lightens light tones and increases contrast,\n     * ignores darks. <em>(2D)</em></li>\n     * <li><code>BURN</code> - darker areas are applied, increasing contrast,\n     * ignores lights. <em>(2D)</em></li>\n     * <li><code>SUBTRACT</code> - remainder of A and B <em>(3D)</em></li>\n     * </ul>\n     *\n     * <em>(2D)</em> indicates that this blend mode <b>only</b> works in the 2D renderer.<br>\n     * <em>(3D)</em> indicates that this blend mode <b>only</b> works in the WEBGL renderer.\n     * @type {BLEND|DARKEST|LIGHTEST|DIFFERENCE|MULTIPLY|EXCLUSION|SCREEN|\n     * REPLACE|OVERLAY|HARD_LIGHT|SOFT_LIGHT|DODGE|BURN|ADD|REMOVE|SUBTRACT}\n     */\n    get blend_mode() {\n      if (this.pInst._renderer.isP3D) return this.curBlendMode;\n      return this.pInst.drawingContext.globalCompositeOperation;\n    }\n    set blend_mode(val) {\n      this.pInst.blendMode(val);\n    }\n\n    /**\n     * @private\n     */\n    #callAttributeUpdater(inherited, attrName, thisArg) {\n      if (this.#updateFunctions.has(attrName)) {\n        const evalFn = this.#updateFunctions.get(attrName);\n        return evalFn.call(thisArg, this.pInst, inherited);\n      }\n      if (attrName in inherited) return inherited[attrName];\n      if (attrName in this.pInst) return this.pInst[attrName];\n      return;\n    }\n    /**\n     * The parent canvas for this element\n     * @type {HTMLCanvasElement}\n     */\n    get canvas() {\n      return this.#canvas.this_element;\n    }\n    /**\n     * color_mode changes the way p5.js interprets\n     * color data. By default, fill,\n     * <a href=\"https://p5js.org/reference/#/p5/color\">color()</a> are defined\n     * by values between 0 and 255 using the RGB color model. This is equivalent\n     * to setting color_mode=\"RGB, 255\".\n     * Setting color_mode=\"HSB\" lets you use the HSB system instead. By default,\n     * this is color_mode=\"HSB, 360, 100, 100, 1\". You can also use HSL.\n     *\n     * Note: existing color objects remember the mode that they were created in,\n     * so you can change modes as you like without affecting their appearance.\n     *\n     * @type {RGB|HSB|HSL}\n     */\n    get color_mode() {\n      return this.pInst._colorMode;\n    }\n    set color_mode(val) {\n      this.pInst.colorMode(val);\n    }\n    /**\n     * @private\n     */\n    get #comments() {\n      return this.#html\n        .split(/(?:\\r\\n|\\r|\\n)/)\n        .map((line) => line.match(/.{1,80}/g))\n        .flat()\n        .map((line) => \"//\\t\" + line);\n    }\n    /**\n     * Updates the element's attribute values, renders it to the canvas, and\n     * calls the draw method on its children.\n     * @method draw\n     * @param {object} inherited - object containing attribute values passed\n     * down from parent element\n     */\n    draw(inherited) {\n      if (this.hasAttribute(\"on\")) {\n        this.#state.on = this.#updateAttribute(\n          inherited,\n          \"on\",\n          this.this_element\n        );\n        if (!this.#state.on) return;\n      }\n      this.pInst.push();\n      this.updateState(inherited);\n      const { WHILE } = p5.prototype;\n      let repeat = true;\n      while (repeat) {\n        this.transform?.();\n        this.render?.();\n        for (const child of this.children) {\n          child.draw(this.#state);\n        }\n        repeat = this.hasAttribute(\"repeat\") && this.#state.repeat;\n        const { change } = this.#state;\n        if (Array.isArray(repeat)) {\n          const [key, ...conditions] = this.#updateAttribute(\n            this.#state,\n            \"repeat\"\n          );\n          repeat = (key === WHILE) === conditions.every((c) => c);\n        }\n        if (repeat) {\n          this.pInst.pop();\n          this.pInst.push();\n          const changed = this.#applyChange();\n          const updaters = this.#updateFunctions.entries();\n          for (const [attrName, updater] of updaters) {\n            if (attrName in change === false)\n              this.#state[attrName] = this.#updateAttribute(\n                inherited,\n                attrName,\n                this\n              );\n          }\n          if (!changed) repeat = false;\n        }\n        this.endRender?.(this.#state);\n      }\n      this.pInst.pop();\n    }\n    /**\n     * The p5.js API provides a lot of functionality for creating graphics, but\n     * there is some native HTML5 Canvas functionality that is not exposed by\n     * p5.\n     *\n     * You can still assign to\n     * it directly using the property `drawing_context`. This is\n     * the equivalent of calling `canvas.getContext('2d');` or\n     * `canvas.getContext('webgl');` and then calling Object.assign on the\n     * result.\n     * See this\n     * <a href=\"https://developer.mozilla.org/en-US/docs/Web/API/CanvasRenderingContext2D\">\n     * reference for the native canvas API</a> for possible drawing functions\n     * you can call.\n     *\n     * ```xml\n     * <_ drawing_context=\"shadowOffsetX: 5, shadowOffsetY: -5, shadowBlur: 10,\n     * shadowColor: 'black'\" />\n     * ```\n     * @type {Object}\n     */\n    get drawing_context() {\n      return this.pInst.drawingContext;\n    }\n    set drawing_context(obj) {\n      Object.assign(this.pInst.drawingContext, obj);\n    }\n    /**\n     * Name of the HTML element generated from this class.\n     * @type {string}\n     */\n    static get elementName() {\n      return `p-${pascalToKebab(this.name)}`;\n    }\n    /**\n     * With erase=\"true\", this element and all elements rendered after it will\n     * subtract from the canvas. Erased areas will reveal the web page\n     * underneath the canvas. This may be canceled with erase=\"false\"\n     *\n     * Arguments for the optional parameters to\n     * <a href=\"https://p5js.org/reference/#/p5/erase\">erase()</a>\n     * may also be provided as a comma separated list.\n     *\n     * ```<p-image>``` elements will not erase the canvas but works as usual.\n     * @type {boolean}\n     */\n    get erase() {\n      return this.pInst._renderer._isErasing;\n    }\n    set erase(val) {\n      if (val === true) this.pInst.erase();\n      else if (val === false) this.pInst.noErase();\n      else if (Array.isArray(val)) this.pInst.erase(...val);\n      else\n        console.error(\n          `${\n            this.tagName\n          }'s erase property was set using type ${typeof val}, but erase may only be set to a boolean or array.`\n        );\n    }\n    /**\n     * first_frame is true if the element was just created.\n     * This can be used for setup. For example,\n     * ```xml\n     * <_ rand_ball=\"this_element\">\n     *  <_ on=\"first_frame\"\n     *     rand_ball.x=\"random(canvas.width)\"\n     *     rand_ball.y=\"random(canvas.height)\"></_>\n     *   <circle></circle>\n     * </_>\n     * ```\n     * Sets the ```<_>```'s x-coordinate to a random position along the\n     * canvas when it is first created. The value then stays the same.\n     * As a result, the circle is played at that random position.\n     * (read-only)\n     * @type {boolean}\n     */\n    get first_frame() {\n      return this.frame_count === 1;\n    }\n    /**\n     * frame_count counts the number of frames this element has been\n     * rendered. The first time this element is rendered, frame_count\n     * with be 1. (read-only)\n     * @type {number}\n     */\n    get frame_count() {\n      return this.pInst.frameCount - this.#frame_created;\n    }\n    /**\n     * @private\n     */\n    get #html() {\n      return this.outerHTML.replace(this.innerHTML, \"\");\n    }\n    /**\n     * List of attribute names in the order in which they will be evaluated.\n     * Element attributes are not guaranteed to be in the order in which they\n     * are written. Transformation attributes are prioritized before others\n     * and use this order: anchor, angle, scale_factor, shear.\n     * @type {Array}\n     */\n    get orderedAttributeNames() {\n      const ordered = Array.from(this.attributes)\n        .sort(\n          ({ name: a }, { name: b }) =>\n            (attributePriorities.indexOf(a) + 1 ||\n              attributePriorities.indexOf(\"_default\")) -\n            (attributePriorities.indexOf(b) + 1 ||\n              attributePriorities.indexOf(\"_default\"))\n        )\n        .map(({ name }) => name);\n      this.transformDoneIndex =\n        ordered.findLastIndex((attrName) =>\n          attributePriorities.includes(attrName)\n        ) + 1;\n      return ordered;\n    }\n    /**\n     * Proxy for this element's parent element with access to its properties,\n     * methods, and attributes.\n     * @type {proxy}\n     */\n    get parent() {\n      return this.parentElement.this_element;\n    }\n    /**\n     * This element's p5 instance.\n     * @type {object}\n     */\n    get pInst() {\n      return this.#pInst;\n    }\n    /**\n     * Sets an attribute's value on this element.\n     * @param {string} attributeName\n     * @param {*} value\n     */\n    set(attributeName, value) {\n      if (attributeName in this) {\n        this.#updateFunctions.set(\n          attributeName,\n          () => (this[attributeName] = value)\n        );\n        this[attributeName] = value;\n      } else if (attributeName in this.pInst) {\n        this.#updateFunctions.set(\n          attributeName,\n          () => (this.pInst[attributeName] = value)\n        );\n      } else {\n        this.#updateFunctions.set(attributeName, () => value);\n      }\n      this.#state[attributeName] = value;\n    }\n    /**\n     * Sets this element up with a p5 instance and sets up its children.\n     * @param {p5} pInst\n     */\n    setup(pInst, canvas) {\n      this.#pInst = pInst;\n      this.#frame_created = pInst.frameCount;\n      this.#canvas = canvas;\n      this.setDefaults?.();\n      this.#setupEvalFns?.();\n      this.setupRenderFunction?.();\n      for (const child of this.children) {\n        child.setup(pInst, canvas);\n      }\n    }\n    /**\n     * @private\n     */\n    #setupEvalFn(attr) {\n      //  The attribute's value will be modified, then run as JS\n      const attrJsStr = attr.value;\n      //  TODO - catch improperly ordered quote marks: \"foo'var\"'\n      if (AttrParseUtil.allQuotesMatched(attrJsStr) === false)\n        console.error(\n          `It looks like a ${this.constructor.elementName}'s ${attr.name} ` +\n            `attribute has an open string. Check that each string has a beginning and end character.`\n        );\n      const getOwnerName = (prop) => {\n        if (prop in this) return \"this\";\n        //  TODO - remove condition when p5 props have been moved to elments\n        if (\n          prop in this.pInst &&\n          typeof this.pInst[prop] !== \"function\" &&\n          prop !== \"width\" &&\n          prop !== \"height\"\n        )\n          return \"this.pInst\";\n        if (this.attributeInherited(prop)) return \"inherited\";\n      };\n      const owner = getOwnerName(attr.name);\n      //  This is plural because there may be a prop name within\n      //  Ex:  myArray[i]\n      const varName = AttrParseUtil.replacePropNames(this, attr.name);\n      const attrValueVarsReplaced = AttrParseUtil.replacePropNames(\n        this,\n        attrJsStr\n      );\n      const varValue = AttrParseUtil.enclose(attrValueVarsReplaced);\n      const evalFnName = `${this.constructor.name}_${attr.name.replace(\n        /[^a-z0-9]/g,\n        \"_\"\n      )}`;\n      const fnHeader = `return function ${evalFnName}(_pInst, _inherited) {`;\n      //  TODO Fix this mess\n      const fnBody =\n        owner === \"inherited\" && !attr.name.includes(\".\")\n          ? `return ${varValue};\\n}`\n          : `return ${varName} = ${varValue};\\n};`;\n      const fnStr = [fnHeader, ...this.#comments, fnBody].join(\"\\n\");\n      const evalFn = new Function(fnStr)();\n      this.#updateFunctions.set(attr.name, evalFn);\n    }\n    /**\n     * @private\n     */\n    #setupEvalFns() {\n      if (this.hasAttribute(\"repeat\") && !this.hasAttribute(\"change\")) {\n        console.error(\n          `It looks like a ${this.constructor.elementName} has a repeat attribute ` +\n            \"but does not have a change attribute. The change attribute is required to \" +\n            \"prevent infinite loops.\"\n        );\n        this.removeAttribute(\"repeat\");\n      }\n      const { orderedAttributeNames, transformDoneIndex } = this;\n      for (let i = 0; i < orderedAttributeNames.length; i++) {\n        if (i === transformDoneIndex)\n          this.#updateFunctions.set(\"transform_matrix\", function () {\n            this.transform_matrix = this.pInst.transform_matrix;\n          });\n        this.#setupEvalFn(this.attributes[orderedAttributeNames[i]]);\n      }\n    }\n    /**\n     * This element's proxy with access to properties, methods, and attributes.\n     */\n    get this_element() {\n      return this.#proxy;\n    }\n    /**\n     * @private\n     * @param {*} inherited\n     * @param {*} attrName\n     * @param {*} thisArg\n     * @returns\n     */\n    #updateAttribute(inherited, attrName, thisArg) {\n      if (attrName === \"repeat\" || attrName === \"change\")\n        inherited = this.#state;\n      const val = this.#callAttributeUpdater(inherited, attrName, thisArg);\n      //  Setting canvas width or height resets the drawing context\n      //  Only set the attribute if it's not one of those\n      if (this.pInst.debug_attributes === false) return val;\n      if (\n        this instanceof HTMLCanvasElement &&\n        (attrName === \"width\" || attrName === \"height\")\n      )\n        return val;\n\n      //  Brackets will throw a 'not a valid attribute name' error\n      if (attrName.match(/[\\[\\]]/)) return val;\n\n      const valToString = (v) => {\n        if (v instanceof p5.Color) return v.toString(this.pInst.color_mode);\n        if (typeof v?.toString === \"undefined\") return v;\n        return v.toString();\n      };\n      this.setAttribute(attrName, valToString(val));\n      return val;\n    }\n    /**\n     * Updates the values of all attributes using the provided expressions.\n     * @param {Object} inherited - object\n     * @returns\n     */\n    updateState(inherited) {\n      for (const prop in inherited) {\n        if (prop in this) this[prop] = inherited[prop];\n        this.#state[prop] = inherited[prop];\n      }\n      const updaters = this.#updateFunctions.entries();\n      for (const [attrName, updateFunction] of updaters) {\n        this.#state[attrName] = this.#updateAttribute(\n          inherited,\n          attrName,\n          this\n        );\n      }\n      return this.#state;\n    }\n    /**\n     * Set attributes for the WebGL Drawing context.\n     * This is a way of adjusting how the WebGL\n     * renderer works to fine-tune the display and performance.\n     *\n     * Note that this will reinitialize the drawing context\n     * if set after the WebGL canvas is made.\n     *\n     * If webgl_attributes is set to an object, all attributes\n     * not declared in the object will be set to defaults.\n     *\n     * The available attributes are:\n     * <br>\n     * alpha - indicates if the canvas contains an alpha buffer\n     * default is false\n     *\n     * depth - indicates whether the drawing buffer has a depth buffer\n     * of at least 16 bits - default is true\n     *\n     * stencil - indicates whether the drawing buffer has a stencil buffer\n     * of at least 8 bits\n     *\n     * antialias - indicates whether or not to perform anti-aliasing\n     * default is false (true in Safari)\n     *\n     * premultipliedAlpha - indicates that the page compositor will assume\n     * the drawing buffer contains colors with pre-multiplied alpha\n     * default is false\n     *\n     * preserveDrawingBuffer - if true the buffers will not be cleared and\n     * and will preserve their values until cleared or overwritten by author\n     * (note that p5 clears automatically on draw loop)\n     * default is true\n     *\n     * perPixelLighting - if true, per-pixel lighting will be used in the\n     * lighting shader otherwise per-vertex lighting is used.\n     * default is true.\n     *\n     * @type {Object}\n     */\n    get webgl_attributes() {\n      return this.pInst._glAttributes;\n    }\n    set webgl_attributes(val) {\n      this.pInst.setAttributes(...arguments);\n    }\n  };\nexport class P5Element extends addP5PropsAndMethods(HTMLElement) {}\n\nexport class RenderedElement extends P5Element {\n  static overloads = [\"\"];\n  constructor() {\n    super();\n    /**\n     * @private\n     */\n    this.renderFunctionName ||= kebabToCamel(\n      this.tagName.toLowerCase().slice(2)\n    );\n  }\n  /**\n   * Sets the parameters used to call this element's render function based\n   * on the overloads for that function and this element's attributes.\n   * @private\n   */\n  #getArgumentsFromOverloads() {\n    const { overloads } = this.constructor;\n    //  Check every required parameter has an attribute\n    const isOptional = (param) => param.match(/^\\[.*\\]$/);\n    let overloadMatch = false;\n    //  Split the parameters and start with overloads with most parameters\n    const overloadsSplitSorted = overloads\n      .map((o) => o.split(\",\").map((p) => p.trim()))\n      .sort((a, b) => a.length - b.length);\n    //  If there aren't any overloads, return an empty array\n    if (overloadsSplitSorted.length === 0) return [];\n    for (let i = 0; i < overloadsSplitSorted.length; i++) {\n      const overloadParams = overloadsSplitSorted[i];\n      overloadMatch = overloadParams.every(\n        (p) =>\n          this.hasAttribute(p) ||\n          this.attributeInherited(p) ||\n          isOptional(p) ||\n          p === \"\" ||\n          (i === overloadsSplitSorted.length - 1 &&\n            (this.attributeInherited(p) || p in this))\n      );\n\n      //  If matched overload found\n      if (overloadMatch) {\n        //  Filter params recursively\n        const filterParams = (overloadParams, filteredParams = [], i = 0) => {\n          //  If there are no more overload params, return filtered params\n          if (i === overloadParams.length) return filteredParams;\n          const optional = isOptional(overloadParams[i]);\n          const p = overloadParams[i].replaceAll(/\\[|\\]/g, \"\");\n          //  If param defined on this element, add it to filtered params\n          if (this.hasAttribute(p) || p in this)\n            return filterParams(\n              overloadParams,\n              filteredParams.concat({ owner: this.this_element, param: p }),\n              ++i\n            );\n          //  If not defined on this element and optional, return filtered params\n          if (optional) return filteredParams;\n          //  If required and already initialized, add it to filtered params\n          if (this.attributeInherited(p))\n            return filterParams(\n              overloadParams,\n              filteredParams.concat({ owner: this.this_element, param: p }),\n              ++i\n            );\n          return filteredParams;\n        };\n        return filterParams(overloadParams);\n      }\n    }\n    console.error(\n      `Element ${this.tagName} does not have the required attributes to render and will be removed from the sketch`\n    );\n    this.remove();\n  }\n  /**\n   * @private\n   */\n  setupRenderFunction() {\n    const args = this.#getArgumentsFromOverloads();\n    this.render = function () {\n      this.pInst[this.renderFunctionName](\n        ...args.map(({ param, owner }) => owner[param])\n      );\n    };\n  }\n}\n/**\n * The blank `<_>` element renders nothing to the canvas. This is useful\n * for adjusting attributes for child elements.\n * @element _\n */\nclass _ extends P5Element {\n  constructor() {\n    super();\n  }\n}\ncustomElements.define(\"p-_\", _);\n","//  regex\nconst upperCaseChar = /([A-Z])/g;\nconst upperCaseCharAfterFirst = /(?<!^)[A-Z]/g;\n\n//  js string replace 2nd param\nconst prependMatch = (char) => char + \"$&\";\n\n//  casing converters\nexport const camelToKebab = (camelStr) =>\n  camelStr.replace(upperCaseCharAfterFirst, prependMatch(\"-\")).toLowerCase();\n\nexport const camelToSnake = (camelStr) =>\n  camelStr.replace(upperCaseCharAfterFirst, prependMatch(\"_\")).toLowerCase();\n\nexport const kebabToCamel = (kebabStr) =>\n  kebabStr.replace(/-./g, (s) => s[1].toUpperCase());\n\nexport const pascalToCamel = (pascalStr) =>\n  pascalStr.slice(0, 1).toLowerCase() + pascalStr.slice(1);\n\nexport const pascalToKebab = (pascalStr) =>\n  pascalToCamel(pascalStr).replaceAll(\n    upperCaseChar,\n    (c) => \"-\" + c.toLowerCase()\n  );\n\nexport const pascalToSnake = (pascalStr) =>\n  pascalToCamel(pascalStr).replaceAll(\n    upperCaseChar,\n    (c) => \"_\" + c.toLowerCase()\n  );\n\nexport const snakeToCamel = (snakeStr) =>\n  snakeStr\n    .split(\"_\")\n    .map((s, i) => (i > 0 ? s.slice(0, 1).toUpperCase() + s.slice(1) : s))\n    .join(\"\");\n","const notExistingObjProp = \"(?<![^\\\\.]\\\\.)\";\r\nconst legalVarName = \"\\\\b[a-z$_][a-z0-9$_]*\\\\b\";\r\nconst notNewObjProp = \"(?:(?!\\\\s*:)|(?<=\\\\?[^,]*))\";\r\nconst notBoolean = \"(?<!\\\\btrue\\\\b)(?<!\\\\bfalse\\\\b)\";\r\nconst notNewKeyword = \"(?<!\\\\bnew\\\\b)\";\r\nconst notProceededByOpenString = \"(?=(?:[^\\\"'`](?:([\\\"'`]).*\\\\1)*)*$)\";\r\nconst varName = new RegExp(\r\n  notExistingObjProp +\r\n    legalVarName +\r\n    notNewObjProp +\r\n    notBoolean +\r\n    notNewKeyword +\r\n    notProceededByOpenString,\r\n  \"gi\"\r\n);\r\n\r\nexport class AttrParseUtil {\r\n  static regex = {\r\n    legalVarName,\r\n    notExistingObjProp,\r\n    notNewObjProp,\r\n    notBoolean,\r\n    notNewKeyword,\r\n    notProceededByOpenString,\r\n    varName,\r\n  };\r\n  static allQuotesMatched(str) {\r\n    const quoteExps = [/\"/g, /'/g, /`/g];\r\n    for (const i in quoteExps) {\r\n      const matches = str.match(quoteExps[i]);\r\n      if (matches && matches.length % 2 !== 0) return false;\r\n    }\r\n    return true;\r\n  }\r\n  static enclose = (str) => {\r\n    const strMinusStrings = str.replace(/([\"'`]).*?\\1/gi, \"\");\r\n    const items = strMinusStrings.split(/(?<!{[^}]*),/gi);\r\n    const isObject = strMinusStrings.match(/^[^\\?\\{]*:/gi);\r\n    if (items.length === 1 && !isObject) return str;\r\n    const isUnenclosed = str.match(/(?<!\\([^\\)]*)(?<!{[^}]*)[,:]/gi) !== null;\r\n    if (!isUnenclosed) return str;\r\n    if (isObject) return `{${str}}`;\r\n    return `[${str}]`;\r\n  };\r\n  static escapes = {\r\n    LESS_THAN: \"<\",\r\n    GREATER_THAN: \">\",\r\n    AT_LEAST: \">=\",\r\n    NO_MORE_THAN: \"<=\",\r\n    AND: \"&&\",\r\n    OR: \"||\",\r\n    WHILE: \"\",\r\n  };\r\n  static isP5 = (name) => p5.prototype.hasOwnProperty(name);\r\n  static keywords = [\r\n    \"break\",\r\n    \"case\",\r\n    \"catch\",\r\n    \"class\",\r\n    \"const\",\r\n    \"continue\",\r\n    \"debugger\",\r\n    \"default\",\r\n    \"delete\",\r\n    \"do\",\r\n    \"else\",\r\n    \"export\",\r\n    \"extends\",\r\n    \"false\",\r\n    \"finally\",\r\n    \"for\",\r\n    \"function\",\r\n    \"if\",\r\n    \"import\",\r\n    \"in\",\r\n    \"instanceof\",\r\n    \"new\",\r\n    \"null\",\r\n    \"return\",\r\n    \"static\",\r\n    \"super\",\r\n    \"switch\",\r\n    \"this\",\r\n    \"throw\",\r\n    \"true\",\r\n    \"try\",\r\n    \"typeof\",\r\n    \"var\",\r\n    \"void\",\r\n    \"while\",\r\n    \"with\",\r\n    \"yield\",\r\n  ];\r\n  static getOwnerName(el, prop) {\r\n    if (prop in el) return \"this\";\r\n    if (\r\n      AttrParseUtil.keywords.includes(prop) ||\r\n      prop in AttrParseUtil.escapes ||\r\n      prop in globalThis\r\n    )\r\n      return \"none\";\r\n    //  TODO - remove this temporary check when no longer needed\r\n    if (prop in el.pInst && prop !== \"width\" && prop !== \"height\")\r\n      return \"pInst\";\r\n    return \"inherited\";\r\n  }\r\n  static getPrefix(el, prop) {\r\n    const ownerName = AttrParseUtil.getOwnerName(el, prop);\r\n    if (ownerName === \"none\") return \"\";\r\n    if (ownerName.slice(0, 4) === \"this\") return `${ownerName}.`;\r\n    else return `_${ownerName}.`;\r\n  }\r\n  static replacePropName(el, prop) {\r\n    if (prop in AttrParseUtil.escapes) return AttrParseUtil.escapes[prop];\r\n    return AttrParseUtil.getPrefix(el, prop) + prop;\r\n  }\r\n  static replacePropNames(el, str) {\r\n    return str\r\n      .replace(/UNTIL(.*)/, \"!($1)\")\r\n      .replace(AttrParseUtil.regex.varName, (prop) =>\r\n        AttrParseUtil.replacePropName(el, prop)\r\n      );\r\n  }\r\n}\r\n","import { camelToSnake } from \"./caseConvert\";\r\n\r\nexport function defineProperties(obj) {\r\n  for (const p in obj) {\r\n    p5.prototype[p] = {};\r\n  }\r\n  Object.defineProperties(p5.prototype, obj);\r\n}\r\n\r\nexport const wrapMethod = (methodName, wrapper) =>\r\n  (p5.prototype[methodName] = wrapper(p5.prototype[methodName]));\r\n\r\nexport const defineSnakeAlias = (...propNames) =>\r\n  propNames.forEach(\r\n    (propName) =>\r\n      (p5.prototype[camelToSnake(propName)] = p5.prototype[propName])\r\n  );\r\n\r\nexport const defineRendererGetterSetters = (...methodNames) =>\r\n  methodNames.forEach((methodName) =>\r\n    defineProperties({\r\n      [camelToSnake(methodName)]: {\r\n        get: function () {\r\n          return this._renderer?.[`_${methodName}`];\r\n        },\r\n        set: function (val) {\r\n          if (Array.isArray(val)) this[methodName](...val);\r\n          else this[methodName](val);\r\n        },\r\n      },\r\n    })\r\n  );\r\n","export const addWebGLMethods = (baseClass) =>\r\n  class extends baseClass {\r\n    /**\r\n     * Creates a new <a href=\"#/p5.Camera\">p5.Camera</a> object and sets it\r\n     * as the current (active) camera.\r\n     *\r\n     * The new camera is initialized with a default position\r\n     * (see camera property)\r\n     * and a default perspective projection\r\n     * (see <a href=\"#/p5.Camera/perspective\">perspective()</a>).\r\n     * Its properties can be controlled with the <a href=\"#/p5.Camera\">p5.Camera</a>\r\n     * methods.\r\n     *\r\n     * Note: Every 3D sketch starts with a default camera initialized.\r\n     * This camera can be controlled with the canvas properties\r\n     * camera,\r\n     * perspective, ortho,\r\n     * and frustum if it is the only camera\r\n     * in the scene.\r\n     * @method create_camera\r\n     * @return {p5.Camera} The newly created camera object.\r\n     */\r\n    create_camera() {\r\n      this.pInst.createCamera();\r\n    }\r\n    /**\r\n     * Creates a new <a href=\"#/p5.Shader\">p5.Shader</a> object\r\n     * from the provided vertex and fragment shader code.\r\n     *\r\n     * Note, shaders can only be used in WEBGL mode.\r\n     * @method create_shader\r\n     * @param {String} vertSrc source code for the vertex shader\r\n     * @param {String} fragSrc source code for the fragment shader\r\n     * @returns {p5.Shader} a shader object created from the provided\r\n     */\r\n    create_shader() {\r\n      this.pInst.createShader(...arguments);\r\n    }\r\n  };\r\n","export const addColorConstants = (baseClass) =>\n  class extends baseClass {\n    get NONE() {\n      return \"#0000\";\n    }\n  };\n\nexport const addStroke = (baseClass) =>\n  class extends baseClass {\n    #stroke;\n    #stroke_weight;\n    /**\n     * Sets the color used to draw lines and borders around shapes. This color\n     * is either a <a href=\"#/p5.Color\">p5.Color</a> object or a comma\n     * separated list of values to pass into\n     * <a href=\"https://p5js.org/reference/#/p5/color\">color()</a>.\n     * @type {p5.Color}\n     */\n    get stroke() {\n      return this.#stroke;\n    }\n    set stroke(val) {\n      const { pInst } = this;\n      if (val === this.NONE) pInst.noStroke();\n      else pInst.stroke(val);\n      this.#stroke = pInst.color(\n        pInst._renderer.isP3D\n          ? pInst._renderer.curStrokeColor\n          : pInst.drawingContext.strokeStyle\n      );\n    }\n    /**\n     * Sets the width of the stroke used for lines, points and the border around\n     * shapes. All widths are set in units of pixels.\n     *\n     * Note that it is affected by any transformation or scaling that has\n     * been applied previously.\n     * @type {number}\n     */\n    get stroke_weight() {\n      return this.#stroke_weight;\n    }\n    set stroke_weight(val) {\n      this.pInst.strokeWeight(val);\n      this.#stroke_weight = this.pInst._renderer.isP3D\n        ? this.pInst._renderer.curStrokeWeight\n        : this.pInst.drawingContext.lineWidth;\n    }\n  };\n\nexport const addFillStroke = (baseClass) =>\n  class extends addStroke(baseClass) {\n    #fill;\n    /**\n     * Sets the color used to fill shapes. This may be a\n     * <a href=\"https://p5js.org/reference/#/p5.Color\">p5.Color</a> object or\n     * a comma separated list of values to pass into\n     * <a href=\"https://p5js.org/reference/#/p5/color\">color()</a>.\n     * @type {p5.Color}\n     */\n    get fill() {\n      return this.#fill;\n    }\n    set fill(val) {\n      const { pInst } = this;\n      if (val === this.NONE) pInst.noFill();\n      else pInst.fill(val);\n      this.#fill = pInst.color(\n        pInst._renderer.isP3D\n          ? pInst._renderer.curFillColor\n          : pInst.drawingContext.fillStyle\n      );\n    }\n  };\n","export const addColorMethods = (baseClass) =>\n  class extends baseClass {\n    lerp_color() {\n      return this.pInst.lerpColor(...arguments);\n    }\n  };\n","import { wrapMethod } from \"../utils/p5Modifiers\";\r\n\r\np5.prototype.window_resized = false;\r\nwrapMethod(\r\n  \"_onresize\",\r\n  (base) =>\r\n    function (e) {\r\n      base.call(this, e);\r\n      this._setProperty(\"window_resized\", true);\r\n    }\r\n);\r\np5.prototype.registerMethod(\"post\", function () {\r\n  this._setProperty(\"window_resized\", false);\r\n});\r\n\r\nclass Window {\r\n  #element;\r\n  constructor(element) {\r\n    this.#element = element;\r\n  }\r\n  get #pInst() {\r\n    return this.#element.pInst;\r\n  }\r\n  /**\r\n   * window_resized is true if the window was resized since the last frame\r\n   * and false if not (read-only)\r\n   * @type {boolean}\r\n   * @readonly\r\n   */\r\n  get resized() {\r\n    return this.#pInst.window_resized;\r\n  }\r\n  get width() {\r\n    return this.#pInst.windowWidth;\r\n  }\r\n  get height() {\r\n    return this.#pInst.windowHeight;\r\n  }\r\n}\r\n\r\nexport const addEnvironmentProps = (baseClass) =>\r\n  class extends baseClass {\r\n    get fullscreen() {\r\n      return this.pInst.fullscreen();\r\n    }\r\n    set fullscreen(val) {\r\n      this.pInst.fullscreen(val);\r\n    }\r\n    /**\r\n     * frame_rate specifies the number of frames to be displayed every second.\r\n     * For example,\r\n     * frame_rate=\"30\" will attempt to refresh 30 times a second.\r\n     * If the processor is not fast enough to maintain the specified rate, the\r\n     * frame rate will not be achieved. The default frame rate is\r\n     * based on the frame rate of the display (here also called \"refresh rate\"),\r\n     * which is set to 60 frames per second on most computers.\r\n     * A frame rate of 24\r\n     * frames per second (usual for movies) or above will be enough for smooth\r\n     * animations.\r\n     *\r\n     * The canvas must be rendered at least once for frame_rate to have a\r\n     * value.\r\n     * @type {number}\r\n     */\r\n    get frame_rate() {\r\n      return this.pInst._frameRate;\r\n    }\r\n    set frame_rate(val) {\r\n      this.pInst.frameRate(val);\r\n    }\r\n    /**\r\n     * The delta_time property contains the time\r\n     * difference between the beginning of the previous frame and the beginning\r\n     * of the current frame in milliseconds.\r\n     *\r\n     * This variable is useful for creating time sensitive animation or physics\r\n     * calculation that should stay constant regardless of frame rate.\r\n     * (read-only)\r\n     * @readonly\r\n     * @type {number}\r\n     */\r\n    get delta_time() {\r\n      return this.pInst.deltaTime;\r\n    }\r\n    /**\r\n     * screen stores information about the screen displaying the canvas.\r\n     * To get the dimensions of the screen, use:\r\n     * ```\r\n     * screen.width\r\n     * screen.height\r\n     * ```\r\n     * screen is available in any browser and is not specific to this\r\n     * library.\r\n     * The full documentation is here:\r\n     * https://developer.mozilla.org/en-US/docs/Web/API/Screen\r\n     * (read-only)\r\n     * @readonly\r\n     */\r\n    get screen() {\r\n      return screen;\r\n    }\r\n    /**\r\n     * The window object provides information about the window containing the\r\n     * canvas.\r\n     * - window.width   - number: width of the window\r\n     * - window.height  - number: height of the window\r\n     * - window.resized - boolean: true if the window was resized since last\r\n     * frame\r\n     * @type {Object}\r\n     */\r\n    get window() {\r\n      return this.#window;\r\n    }\r\n    #window = new Window(this);\r\n  };\r\n","export const addStorage = (baseClass) =>\n  class extends baseClass {\n    /**\n     * The storage property allows data to be saved in local storage on\n     * the device displaying the sketch. This data will remain until the\n     * user clears local storage, so you can use this to remember something\n     * between uses, such as the high score of a game.\n     *\n     * To store something, simply add a custom property to storage:\n     * ```xml\n     * <_ storage.my_property=\"123\" />\n     * ```\n     * Any element can reference that property.\n     * ```xml\n     * <square x=\"storage.my_property\" />\n     * ```\n     * To clear the storage, call the clear method on storage.\n     * ```xml\n     * <_ _=\"storage.clear()\" />\n     * ```\n     * To remove a property, call the remove method and pass in the name\n     * of the property as a string.\n     * ```xml\n     * <_ _=\"storage.remove('my_property')\" />\n     * ```\n     * @type {Proxy}\n     */\n    get storage() {\n      return new Proxy(this.pInst, {\n        get(target, prop) {\n          if (prop === \"clear\") return target.clearStorage;\n          if (prop === \"remove\") return target.removeItem;\n          return target.getItem(prop);\n        },\n        set(target, prop, val) {\n          target.storeItem(prop, val);\n          return true;\n        },\n      });\n    }\n  };\n","export const addDataMethods = (baseClass) =>\r\n  class extends baseClass {\r\n    /**\r\n     *\r\n     * Creates a new instance of p5.StringDict using the key-value pair\r\n     * or the object you provide.\r\n     *\r\n     * @method create_string_dict\r\n     * @param {String} key\r\n     * @param {String} value\r\n     * @returns {p5.StringDict}\r\n     * @method create_string_dict\r\n     * @param {Object} object - key-value pairs\r\n     * @return {p5.StringDict}\r\n     */\r\n    create_string_dict() {\r\n      return this.pInst.createStringDict(...arguments);\r\n    }\r\n    /**\r\n     *\r\n     * Creates a new instance of <a href=\"#/p5.NumberDict\">p5.NumberDict</a> using the key-value pair\r\n     * or object you provide.\r\n     *\r\n     * @method create_number_dict\r\n     * @param {Number} key\r\n     * @param {Number} value\r\n     * @return {p5.NumberDict}\r\n     *\r\n     */\r\n    /**\r\n     * @method create_number_dict\r\n     * @param {Object} object - key-value pairs\r\n     * @return {p5.NumberDict}\r\n     */\r\n    create_number_dict() {\r\n      return this.pInst.createNumberDict(...arguments);\r\n    }\r\n  };\r\n","/*\r\nThese methods are adapted from:\r\nRepo: https://github.com/bmoren/p5.collide2D/\r\nCreated by http://benmoren.com\r\nSome functions and code modified version from http://www.jeffreythompson.org/collision-detection\r\nVersion v0.7.3 | June 22, 2020\r\nCC BY-NC-SA 4.0\r\n*/\r\nclass Collide {\r\n  static collider_type = {\r\n    point: \"point\",\r\n    circle: \"circle\",\r\n    ellipse: \"ellipse\",\r\n    rect: \"rect\",\r\n    line: \"line\",\r\n    arc: \"arc\",\r\n    triangle: \"triangle\",\r\n    poly: \"poly\",\r\n  };\r\n  #debug = false;\r\n  #element;\r\n  constructor(element) {\r\n    this.#element = element;\r\n  }\r\n  get #pInst() {\r\n    return this.#element.pInst;\r\n  }\r\n  get debug() {\r\n    return this.#debug;\r\n  }\r\n  set debug(val) {\r\n    this.#debug = val;\r\n  }\r\n  elements(elementA, elementB) {\r\n    const { collider: colliderA } = elementA;\r\n    const { collider: colliderB } = elementB;\r\n    const argsA = elementA.collision_args;\r\n    const argsB = elementB.collision_args;\r\n    const fnNameForward = `${colliderA}_${colliderB}`;\r\n    if (fnNameForward in this) return this[fnNameForward](...argsA, ...argsB);\r\n    const fnNameBackward = `${colliderB}_${colliderA}`;\r\n    if (fnNameBackward in this) return this[fnNameBackward](...argsB, ...argsA);\r\n    console.warn(\r\n      `Collision check between ${colliderA} and ${colliderB} has not been implemented`\r\n    );\r\n    return false;\r\n  }\r\n\r\n  /*~++~+~+~++~+~++~++~+~+~ 2D ~+~+~++~+~++~+~+~+~+~+~+~+~+~+~+*/\r\n\r\n  rect_rect(x, y, w, h, x2, y2, w2, h2) {\r\n    //2d\r\n    //add in a thing to detect rectMode CENTER\r\n    if (\r\n      x + w >= x2 && // r1 right edge past r2 left\r\n      x <= x2 + w2 && // r1 left edge past r2 right\r\n      y + h >= y2 && // r1 top edge past r2 bottom\r\n      y <= y2 + h2\r\n    ) {\r\n      // r1 bottom edge past r2 top\r\n      return true;\r\n    }\r\n    return false;\r\n  }\r\n\r\n  // p5.vector version of collideRectRect\r\n  rect_rect_vector(p1, sz, p2, sz2) {\r\n    return this.rect_rect(p1.x, p1.y, sz.x, sz.y, p2.x, p2.y, sz2.x, sz2.y);\r\n  }\r\n\r\n  rect_circle(rx, ry, rw, rh, cx, cy, diameter) {\r\n    //2d\r\n    // temporary variables to set edges for testing\r\n    var testX = cx;\r\n    var testY = cy;\r\n\r\n    // which edge is closest?\r\n    if (cx < rx) {\r\n      testX = rx; // left edge\r\n    } else if (cx > rx + rw) {\r\n      testX = rx + rw;\r\n    } // right edge\r\n\r\n    if (cy < ry) {\r\n      testY = ry; // top edge\r\n    } else if (cy > ry + rh) {\r\n      testY = ry + rh;\r\n    } // bottom edge\r\n\r\n    // // get distance from closest edges\r\n    var distance = this.#pInst.dist(cx, cy, testX, testY);\r\n\r\n    // if the distance is less than the radius, collision!\r\n    if (distance <= diameter / 2) {\r\n      return true;\r\n    }\r\n    return false;\r\n  }\r\n\r\n  // p5.vector version of collideRectCircle\r\n  rect_circle_vector(r, sz, c, diameter) {\r\n    return this.rect_circle(r.x, r.y, sz.x, sz.y, c.x, c.y, diameter);\r\n  }\r\n\r\n  circle_circle(x, y, d, x2, y2, d2) {\r\n    //2d\r\n    if (this.#pInst.dist(x, y, x2, y2) <= d / 2 + d2 / 2) {\r\n      return true;\r\n    }\r\n    return false;\r\n  }\r\n\r\n  // p5.vector version of collideCircleCircle\r\n  circle_circle_vector(p1, d, p2, d2) {\r\n    return this.circle_circle(p1.x, p1.y, d, p2.x, p2.y, d2);\r\n  }\r\n\r\n  point_circle(x, y, cx, cy, d) {\r\n    //2d\r\n    if (this.#pInst.dist(x, y, cx, cy) <= d / 2) {\r\n      return true;\r\n    }\r\n    return false;\r\n  }\r\n\r\n  // p5.vector version of collidePointCircle\r\n  point_circle_vector(p, c, d) {\r\n    return this.point_circle(p.x, p.y, c.x, c.y, d);\r\n  }\r\n\r\n  point_ellipse(x, y, cx, cy, dx, dy) {\r\n    //2d\r\n    var rx = dx / 2,\r\n      ry = dy / 2;\r\n    // Discarding the points outside the bounding box\r\n    if (x > cx + rx || x < cx - rx || y > cy + ry || y < cy - ry) {\r\n      return false;\r\n    }\r\n    // Compare the point to its equivalent on the ellipse\r\n    var xx = x - cx,\r\n      yy = y - cy;\r\n    var eyy = (ry * this.#pInst.sqrt(this.#pInst.abs(rx * rx - xx * xx))) / rx;\r\n    return yy <= eyy && yy >= -eyy;\r\n  }\r\n\r\n  // p5.vector version of collidePointEllipse\r\n  point_ellipse_vector(p, c, d) {\r\n    return this.point_ellipse(p.x, p.y, c.x, c.y, d.x, d.y);\r\n  }\r\n\r\n  point_rect(pointX, pointY, x, y, xW, yW) {\r\n    //2d\r\n    if (\r\n      pointX >= x && // right of the left edge AND\r\n      pointX <= x + xW && // left of the right edge AND\r\n      pointY >= y && // below the top AND\r\n      pointY <= y + yW\r\n    ) {\r\n      // above the bottom\r\n      return true;\r\n    }\r\n    return false;\r\n  }\r\n\r\n  // p5.vector version of collidePointRect\r\n  point_rect_vector(point, p1, sz) {\r\n    return this.point_rect(point.x, point.y, p1.x, p1.y, sz.x, sz.y);\r\n  }\r\n  //  TODO - Accommodate lines with higher stroke_weight\r\n  point_line(px, py, x1, y1, x2, y2, buffer) {\r\n    // get distance from the point to the two ends of the line\r\n    var d1 = this.#pInst.dist(px, py, x1, y1);\r\n    var d2 = this.#pInst.dist(px, py, x2, y2);\r\n\r\n    // get the length of the line\r\n    var lineLen = this.#pInst.dist(x1, y1, x2, y2);\r\n\r\n    // since floats are so minutely accurate, add a little buffer zone that will give collision\r\n    if (buffer === undefined) {\r\n      buffer = 0.1;\r\n    } // higher # = less accurate\r\n\r\n    // if the two distances are equal to the line's length, the point is on the line!\r\n    // note we use the buffer here to give a range, rather than one #\r\n    if (d1 + d2 >= lineLen - buffer && d1 + d2 <= lineLen + buffer) {\r\n      return true;\r\n    }\r\n    return false;\r\n  }\r\n\r\n  // p5.vector version of collidePointLine\r\n  point_line_vector(point, p1, p2, buffer) {\r\n    return this.point_line(point.x, point.y, p1.x, p1.y, p2.x, p2.y, buffer);\r\n  }\r\n\r\n  line_circle(x1, y1, x2, y2, cx, cy, diameter) {\r\n    // is either end INSIDE the circle?\r\n    // if so, return true immediately\r\n    var inside1 = this.point_circle(x1, y1, cx, cy, diameter);\r\n    var inside2 = this.point_circle(x2, y2, cx, cy, diameter);\r\n    if (inside1 || inside2) return true;\r\n\r\n    // get length of the line\r\n    var distX = x1 - x2;\r\n    var distY = y1 - y2;\r\n    var len = this.#pInst.sqrt(distX * distX + distY * distY);\r\n\r\n    // get dot product of the line and circle\r\n    var dot =\r\n      ((cx - x1) * (x2 - x1) + (cy - y1) * (y2 - y1)) / this.#pInst.pow(len, 2);\r\n\r\n    // find the closest point on the line\r\n    var closestX = x1 + dot * (x2 - x1);\r\n    var closestY = y1 + dot * (y2 - y1);\r\n\r\n    // is this point actually on the line segment?\r\n    // if so keep going, but if not, return false\r\n    var onSegment = this.point_line(closestX, closestY, x1, y1, x2, y2);\r\n    if (!onSegment) return false;\r\n\r\n    // draw a debug circle at the closest point on the line\r\n    if (this.#debug) {\r\n      this.#pInst.ellipse(closestX, closestY, 10, 10);\r\n    }\r\n\r\n    // get distance to closest point\r\n    distX = closestX - cx;\r\n    distY = closestY - cy;\r\n    var distance = this.#pInst.sqrt(distX * distX + distY * distY);\r\n\r\n    if (distance <= diameter / 2) {\r\n      return true;\r\n    }\r\n    return false;\r\n  }\r\n\r\n  // p5.vector version of collideLineCircle\r\n  line_circle_vector(p1, p2, c, diameter) {\r\n    return this.line_circle(p1.x, p1.y, p2.x, p2.y, c.x, c.y, diameter);\r\n  }\r\n  line_line(x1, y1, x2, y2, x3, y3, x4, y4, calcIntersection) {\r\n    var intersection;\r\n\r\n    // calculate the distance to intersection point\r\n    var uA =\r\n      ((x4 - x3) * (y1 - y3) - (y4 - y3) * (x1 - x3)) /\r\n      ((y4 - y3) * (x2 - x1) - (x4 - x3) * (y2 - y1));\r\n    var uB =\r\n      ((x2 - x1) * (y1 - y3) - (y2 - y1) * (x1 - x3)) /\r\n      ((y4 - y3) * (x2 - x1) - (x4 - x3) * (y2 - y1));\r\n\r\n    // if uA and uB are between 0-1, lines are colliding\r\n    if (uA >= 0 && uA <= 1 && uB >= 0 && uB <= 1) {\r\n      if (this.#debug || calcIntersection) {\r\n        // calc the point where the lines meet\r\n        var intersectionX = x1 + uA * (x2 - x1);\r\n        var intersectionY = y1 + uA * (y2 - y1);\r\n      }\r\n\r\n      if (this.#debug) {\r\n        this.#pInst.ellipse(intersectionX, intersectionY, 10, 10);\r\n      }\r\n\r\n      if (calcIntersection) {\r\n        intersection = {\r\n          x: intersectionX,\r\n          y: intersectionY,\r\n        };\r\n        return intersection;\r\n      } else {\r\n        return true;\r\n      }\r\n    }\r\n    if (calcIntersection) {\r\n      intersection = {\r\n        x: false,\r\n        y: false,\r\n      };\r\n      return intersection;\r\n    }\r\n    return false;\r\n  }\r\n\r\n  // p5.vector version of collideLineLine\r\n  line_line_vector(p1, p2, p3, p4, calcIntersection) {\r\n    return this.line_line(\r\n      p1.x,\r\n      p1.y,\r\n      p2.x,\r\n      p2.y,\r\n      p3.x,\r\n      p3.y,\r\n      p4.x,\r\n      p4.y,\r\n      calcIntersection\r\n    );\r\n  }\r\n\r\n  line_rect(x1, y1, x2, y2, rx, ry, rw, rh, calcIntersection) {\r\n    // check if the line has hit any of the rectangle's sides. uses the collideLineLine function above\r\n    var left, right, top, bottom, intersection;\r\n\r\n    if (calcIntersection) {\r\n      left = this.line_line(x1, y1, x2, y2, rx, ry, rx, ry + rh, true);\r\n      right = this.line_line(\r\n        x1,\r\n        y1,\r\n        x2,\r\n        y2,\r\n        rx + rw,\r\n        ry,\r\n        rx + rw,\r\n        ry + rh,\r\n        true\r\n      );\r\n      top = this.line_line(x1, y1, x2, y2, rx, ry, rx + rw, ry, true);\r\n      bottom = this.line_line(\r\n        x1,\r\n        y1,\r\n        x2,\r\n        y2,\r\n        rx,\r\n        ry + rh,\r\n        rx + rw,\r\n        ry + rh,\r\n        true\r\n      );\r\n      intersection = {\r\n        left: left,\r\n        right: right,\r\n        top: top,\r\n        bottom: bottom,\r\n      };\r\n    } else {\r\n      //return booleans\r\n      left = this.line_line(x1, y1, x2, y2, rx, ry, rx, ry + rh);\r\n      right = this.line_line(x1, y1, x2, y2, rx + rw, ry, rx + rw, ry + rh);\r\n      top = this.line_line(x1, y1, x2, y2, rx, ry, rx + rw, ry);\r\n      bottom = this.line_line(x1, y1, x2, y2, rx, ry + rh, rx + rw, ry + rh);\r\n    }\r\n\r\n    // if ANY of the above are true, the line has hit the rectangle\r\n    if (left || right || top || bottom) {\r\n      if (calcIntersection) {\r\n        return intersection;\r\n      }\r\n      return true;\r\n    }\r\n    return false;\r\n  }\r\n\r\n  // p5.vector version of collideLineRect\r\n  line_rect_vector(p1, p2, r, rsz, calcIntersection) {\r\n    return this.line_rect(\r\n      p1.x,\r\n      p1.y,\r\n      p2.x,\r\n      p2.y,\r\n      r.x,\r\n      r.y,\r\n      rsz.x,\r\n      rsz.y,\r\n      calcIntersection\r\n    );\r\n  }\r\n\r\n  point_poly(px, py, vertices) {\r\n    var collision = false;\r\n\r\n    // go through each of the vertices, plus the next vertex in the list\r\n    var next = 0;\r\n    for (var current = 0; current < vertices.length; current++) {\r\n      // get next vertex in list if we've hit the end, wrap around to 0\r\n      next = current + 1;\r\n      if (next === vertices.length) next = 0;\r\n\r\n      // get the PVectors at our current position this makes our if statement a little cleaner\r\n      var vc = vertices[current]; // c for \"current\"\r\n      var vn = vertices[next]; // n for \"next\"\r\n\r\n      // compare position, flip 'collision' variable back and forth\r\n      if (\r\n        ((vc.y >= py && vn.y < py) || (vc.y < py && vn.y >= py)) &&\r\n        px < ((vn.x - vc.x) * (py - vc.y)) / (vn.y - vc.y) + vc.x\r\n      ) {\r\n        collision = !collision;\r\n      }\r\n    }\r\n    return collision;\r\n  }\r\n\r\n  // p5.vector version of collidePointPoly\r\n  point_poly_vector(p1, vertices) {\r\n    return this.point_poly(p1.x, p1.y, vertices);\r\n  }\r\n\r\n  // POLYGON/CIRCLE\r\n  circle_poly(cx, cy, diameter, vertices, interior) {\r\n    if (interior === undefined) {\r\n      interior = false;\r\n    }\r\n\r\n    // go through each of the vertices, plus the next vertex in the list\r\n    var next = 0;\r\n    for (var current = 0; current < vertices.length; current++) {\r\n      // get next vertex in list if we've hit the end, wrap around to 0\r\n      next = current + 1;\r\n      if (next === vertices.length) next = 0;\r\n\r\n      // get the PVectors at our current position this makes our if statement a little cleaner\r\n      var vc = vertices[current]; // c for \"current\"\r\n      var vn = vertices[next]; // n for \"next\"\r\n\r\n      // check for collision between the circle and a line formed between the two vertices\r\n      var collision = this.line_circle(\r\n        vc.x,\r\n        vc.y,\r\n        vn.x,\r\n        vn.y,\r\n        cx,\r\n        cy,\r\n        diameter\r\n      );\r\n      if (collision) return true;\r\n    }\r\n\r\n    // test if the center of the circle is inside the polygon\r\n    if (interior === true) {\r\n      var centerInside = this.point_poly(cx, cy, vertices);\r\n      if (centerInside) return true;\r\n    }\r\n\r\n    // otherwise, after all that, return false\r\n    return false;\r\n  }\r\n\r\n  // p5.vector version of collideCirclePoly\r\n  circle_poly_vector(c, diameter, vertices, interior) {\r\n    return this.circle_poly(c.x, c.y, diameter, vertices, interior);\r\n  }\r\n\r\n  rect_poly(rx, ry, rw, rh, vertices, interior) {\r\n    if (interior == undefined) {\r\n      interior = false;\r\n    }\r\n\r\n    // go through each of the vertices, plus the next vertex in the list\r\n    var next = 0;\r\n    for (var current = 0; current < vertices.length; current++) {\r\n      // get next vertex in list if we've hit the end, wrap around to 0\r\n      next = current + 1;\r\n      if (next === vertices.length) next = 0;\r\n\r\n      // get the PVectors at our current position this makes our if statement a little cleaner\r\n      var vc = vertices[current]; // c for \"current\"\r\n      var vn = vertices[next]; // n for \"next\"\r\n\r\n      // check against all four sides of the rectangle\r\n      var collision = this.line_rect(vc.x, vc.y, vn.x, vn.y, rx, ry, rw, rh);\r\n      if (collision) return true;\r\n\r\n      // optional: test if the rectangle is INSIDE the polygon note that this iterates all sides of the polygon again, so only use this if you need to\r\n      if (interior === true) {\r\n        var inside = this.point_poly(rx, ry, vertices);\r\n        if (inside) return true;\r\n      }\r\n    }\r\n\r\n    return false;\r\n  }\r\n\r\n  // p5.vector version of collideRectPoly\r\n  rect_poly_vector(r, rsz, vertices, interior) {\r\n    return this.rect_poly(r.x, r.y, rsz.x, rsz.y, vertices, interior);\r\n  }\r\n\r\n  line_poly(x1, y1, x2, y2, vertices) {\r\n    // go through each of the vertices, plus the next vertex in the list\r\n    var next = 0;\r\n    for (var current = 0; current < vertices.length; current++) {\r\n      // get next vertex in list if we've hit the end, wrap around to 0\r\n      next = current + 1;\r\n      if (next === vertices.length) next = 0;\r\n\r\n      // get the PVectors at our current position extract X/Y coordinates from each\r\n      var x3 = vertices[current].x;\r\n      var y3 = vertices[current].y;\r\n      var x4 = vertices[next].x;\r\n      var y4 = vertices[next].y;\r\n\r\n      // do a Line/Line comparison if true, return 'true' immediately and stop testing (faster)\r\n      var hit = this.line_line(x1, y1, x2, y2, x3, y3, x4, y4);\r\n      if (hit) {\r\n        return true;\r\n      }\r\n    }\r\n    // never got a hit\r\n    return false;\r\n  }\r\n\r\n  // p5.vector version of collideLinePoly\r\n  line_poly_vector(p1, p2, vertice) {\r\n    return this.line_poly(p1.x, p1.y, p2.x, p2.y, vertice);\r\n  }\r\n\r\n  poly_poly(p1, p2, interior) {\r\n    if (interior === undefined) {\r\n      interior = false;\r\n    }\r\n\r\n    // go through each of the vertices, plus the next vertex in the list\r\n    var next = 0;\r\n    for (var current = 0; current < p1.length; current++) {\r\n      // get next vertex in list, if we've hit the end, wrap around to 0\r\n      next = current + 1;\r\n      if (next === p1.length) next = 0;\r\n\r\n      // get the PVectors at our current position this makes our if statement a little cleaner\r\n      var vc = p1[current]; // c for \"current\"\r\n      var vn = p1[next]; // n for \"next\"\r\n\r\n      //use these two points (a line) to compare to the other polygon's vertices using polyLine()\r\n      var collision = this.line_poly(vc.x, vc.y, vn.x, vn.y, p2);\r\n      if (collision) return true;\r\n\r\n      //check if the either polygon is INSIDE the other\r\n      if (interior === true) {\r\n        collision = this.point_poly(p2[0].x, p2[0].y, p1);\r\n        if (collision) return true;\r\n        collision = this.point_poly(p1[0].x, p1[0].y, p2);\r\n        if (collision) return true;\r\n      }\r\n    }\r\n\r\n    return false;\r\n  }\r\n\r\n  poly_poly_vector(p1, p2, interior) {\r\n    return this.poly_poly(p1, p2, interior);\r\n  }\r\n\r\n  point_triangle(px, py, x1, y1, x2, y2, x3, y3) {\r\n    // get the area of the triangle\r\n    var areaOrig = this.#pInst.abs(\r\n      (x2 - x1) * (y3 - y1) - (x3 - x1) * (y2 - y1)\r\n    );\r\n\r\n    // get the area of 3 triangles made between the point and the corners of the triangle\r\n    var area1 = this.#pInst.abs((x1 - px) * (y2 - py) - (x2 - px) * (y1 - py));\r\n    var area2 = this.#pInst.abs((x2 - px) * (y3 - py) - (x3 - px) * (y2 - py));\r\n    var area3 = this.#pInst.abs((x3 - px) * (y1 - py) - (x1 - px) * (y3 - py));\r\n\r\n    // if the sum of the three areas equals the original, we're inside the triangle!\r\n    if (area1 + area2 + area3 === areaOrig) {\r\n      return true;\r\n    }\r\n    return false;\r\n  }\r\n\r\n  // p5.vector version of collidePointTriangle\r\n  point_triangle_vector(p, p1, p2, p3) {\r\n    return this.point_triangle(p.x, p.y, p1.x, p1.y, p2.x, p2.y, p3.x, p3.y);\r\n  }\r\n\r\n  point_point(x, y, x2, y2, buffer) {\r\n    if (buffer === undefined) {\r\n      buffer = 0;\r\n    }\r\n\r\n    if (this.#pInst.dist(x, y, x2, y2) <= buffer) {\r\n      return true;\r\n    }\r\n\r\n    return false;\r\n  }\r\n\r\n  // p5.vector version of collidePointPoint\r\n  point_point_vector(p1, p2, buffer) {\r\n    return this.point_point(p1.x, p1.y, p2.x, p2.y, buffer);\r\n  }\r\n  //  TODO - accommodate arcs with unequal width and height\r\n  point_arc(px, py, ax, ay, arcRadius, arcHeading, arcAngle, buffer) {\r\n    if (buffer === undefined) {\r\n      buffer = 0;\r\n    }\r\n    // point\r\n    var point = this.#pInst.createVector(px, py);\r\n    // arc center point\r\n    var arcPos = this.#pInst.createVector(ax, ay);\r\n    // arc radius vector\r\n    var radius = this.#pInst.createVector(arcRadius, 0).rotate(arcHeading);\r\n\r\n    var pointToArc = point.copy().sub(arcPos);\r\n\r\n    if (point.dist(arcPos) <= arcRadius + buffer) {\r\n      var dot = radius.dot(pointToArc);\r\n      var angle = radius.angleBetween(pointToArc);\r\n      if (dot > 0 && angle <= arcAngle / 2 && angle >= -arcAngle / 2) {\r\n        return true;\r\n      }\r\n    }\r\n    return false;\r\n  }\r\n\r\n  // p5.vector version of collidePointArc\r\n  point_arc_vector(p1, a, arcRadius, arcHeading, arcAngle, buffer) {\r\n    return this.point_arc(\r\n      p1.x,\r\n      p1.y,\r\n      a.x,\r\n      a.y,\r\n      arcRadius,\r\n      arcHeading,\r\n      arcAngle,\r\n      buffer\r\n    );\r\n  }\r\n}\r\nexport const { collider_type } = Collide;\r\nexport const addCollide = (baseClass) =>\r\n  class extends baseClass {\r\n    /**\r\n     * The collide object provides collision detection methods for different\r\n     * shapes. These methods are adapted from\r\n     * <a href=\"https://github.com/bmoren\">Ben Moren's</a>\r\n     * <a href=\"https://github.com/bmoren/p5.collide2D\">Collide2D library</a>.\r\n     * These links are written how these methods would be called in Marker, and\r\n     * they link to the documentation for their corresponding Collide2D\r\n     * function, which has the same parameters:\r\n     * - <a href=\"https://github.com/bmoren/p5.collide2D#collidepointpoint\">\r\n     * collide.point_point()</a>\r\n     * - <a href=\"https://github.com/bmoren/p5.collide2D#collidepointcircle\">\r\n     * collide.point_circle()</a>\r\n     * - <a href=\"https://github.com/bmoren/p5.collide2D#collidepointellipse\">\r\n     * collide.point_ellipse()</a>\r\n     * - <a href=\"https://github.com/bmoren/p5.collide2D#collidepointrect\">\r\n     * collide.point_rect()</a>\r\n     * - <a href=\"https://github.com/bmoren/p5.collide2D#collidepointline\">\r\n     * collide.point_line()</a>\r\n     * - <a href=\"https://github.com/bmoren/p5.collide2D#collidepointarc\">\r\n     * collide.point_arc()</a>\r\n     * - <a href=\"https://github.com/bmoren/p5.collide2D#colliderectrect\">\r\n     * collide.rect_rect()</a>\r\n     * - <a href=\"https://github.com/bmoren/p5.collide2D#collidecirclecircle\">\r\n     * collide.circle_circle()</a>\r\n     * - <a href=\"https://github.com/bmoren/p5.collide2D#colliderectcircle\">\r\n     * collide.rect_circle()</a>\r\n     * - <a href=\"https://github.com/bmoren/p5.collide2D#collidelineline\">\r\n     * collide.line_line()</a>\r\n     * - <a href=\"https://github.com/bmoren/p5.collide2D#collidelinecircle\">\r\n     * collide.line_circle()</a>\r\n     * - <a href=\"https://github.com/bmoren/p5.collide2D#collidelinerect\">\r\n     * collide.line_rect()</a>\r\n     * - <a href=\"https://github.com/bmoren/p5.collide2D#collidepointpoly\">\r\n     * collide.point_poly()</a>\r\n     * - <a href=\"https://github.com/bmoren/p5.collide2D#collidecirclepoly\">\r\n     * collide.circle_poly()</a>\r\n     * - <a href=\"https://github.com/bmoren/p5.collide2D#colliderectpoly\">\r\n     * collide.rect_poly()</a>\r\n     * - <a href=\"https://github.com/bmoren/p5.collide2D#collidelinepoly\">\r\n     * collide.line_poly()</a>\r\n     *- <a href=\"https://github.com/bmoren/p5.collide2D#collidepolypoly\">\r\n     * collide.poly_poly()</a>\r\n     * - <a href=\"https://github.com/bmoren/p5.collide2D#collidepointtriangle\">\r\n     * collide.point_triangle()</a>\r\n     */\r\n    collide = new Collide(this);\r\n    /**\r\n     * Checks if this element is colliding with the provided other element.\r\n     * @method colliding_with\r\n     * @param {P5Element} el - other element to check\r\n     * @returns {boolean} true if elements are colliding\r\n     */\r\n    colliding_with(el) {\r\n      return this.collide.elements(this, el);\r\n    }\r\n  };\r\n","import { addP5PropsAndMethods } from \"../core\";\r\nimport { addCanvasProperties } from \"../properties/canvas_props\";\r\nimport { addCanvasMethods } from \"../methods/canvas_methods\";\r\nimport { addEnvironmentProps } from \"../properties/environment_props\";\r\n\r\n/**\r\n * The `<canvas>` element is a rectangular area of the window for rendering\r\n * imagery. All child elements are rendered to the canvas.\r\n *\r\n * This canvas will render 2D elements only. For a 3D canvas, use\r\n * ```<canvas-3d>```.\r\n */\r\nclass Canvas extends addCanvasMethods(\r\n  addCanvasProperties(\r\n    addP5PropsAndMethods(addEnvironmentProps(HTMLCanvasElement))\r\n  )\r\n) {\r\n  static renderer = \"p2d\";\r\n\r\n  constructor() {\r\n    super();\r\n    window.addEventListener(\"customElementsDefined\", this.runCode.bind(this));\r\n  }\r\n}\r\ncustomElements.define(\"p-canvas\", Canvas, { extends: \"canvas\" });\r\n\r\n/**\r\n * The ```<canvas-3d>``` element is a ```<canvas>``` element\r\n * for rendering 3D elements.\r\n */\r\nclass WebGLCanvas extends addCanvasMethods(\r\n  addCanvasProperties(\r\n    addP5PropsAndMethods(addEnvironmentProps(HTMLCanvasElement))\r\n  )\r\n) {\r\n  #bezier_detail;\r\n  #curve_detail;\r\n  #debug_mode;\r\n  #orbit_control;\r\n  static renderer = \"webgl\";\r\n  constructor() {\r\n    super();\r\n    window.addEventListener(\"customElementsDefined\", this.runCode.bind(this));\r\n  }\r\n  /**\r\n   * Sets the resolution at which Bezier's curve is displayed. The default value is 20.\r\n   * @type {number}\r\n   */\r\n  get bezier_detail() {\r\n    return this.#bezier_detail;\r\n  }\r\n  set bezier_detail(val) {\r\n    this.pInst.bezierDetail(val);\r\n    this.#bezier_detail = this.pInst._bezierDetail;\r\n  }\r\n  /**\r\n   * Sets the current (active) camera of a 3D sketch.\r\n   * Allows for switching between multiple cameras.\r\n   *\r\n   * Comma-separated arguments for\r\n   * <a href=\"https://p5js.org/reference/#/p5/camera\">camera()</a>\r\n   * may also be provided to adjust the current camera.\r\n   *\r\n   * @type {p5.Camera}\r\n   * */\r\n  get camera() {\r\n    return this.pInst._renderer._curCamera;\r\n  }\r\n  set camera(val) {\r\n    const { pInst } = this;\r\n    if (val instanceof p5.Camera) pInst.setCamera(val);\r\n    else if (Array.isArray(val)) pInst.camera(...val);\r\n    else pInst.camera(val);\r\n  }\r\n  /**\r\n   * Sets the resolution at which curves display. The default value is 20 while\r\n   * the minimum value is 3.\r\n   * @type {number}\r\n   */\r\n  get curve_detail() {\r\n    return this.#curve_detail;\r\n  }\r\n  set curve_detail(val) {\r\n    this.pInst.curveDetail(val);\r\n    this.#curve_detail = this.pInst._curveDetail;\r\n  }\r\n  /**\r\n   * debug_mode helps visualize 3D space by adding a grid to indicate where the\r\n   * ‘ground’ is in a sketch and an axes icon which indicates the +X, +Y, and +Z\r\n   * directions. This property can be set to \"true\" to create a\r\n   * default grid and axes icon, or it can be set to a comma-separated list\r\n   * of values to pass into\r\n   * <a href=\"https://p5js.org/reference/#/p5/debugMode\">debugMode()</a>.\r\n   *\r\n   * By default, the grid will run through the origin (0,0,0) of the sketch\r\n   * along the XZ plane\r\n   * and the axes icon will be offset from the origin.  Both the grid and axes\r\n   * icon will be sized according to the current canvas size.\r\n   * Note that because the\r\n   * grid runs parallel to the default camera view, it is often helpful to use\r\n   * debug_mode along with orbit_control to allow full view of the grid.\r\n   * @type {boolean}\r\n   */\r\n  get debug_mode() {\r\n    return this.#debug_mode;\r\n  }\r\n  set debug_mode(val) {\r\n    const { pInst } = this;\r\n    if (val === false) {\r\n      pInst.noDebugMode();\r\n      this.#debug_mode = false;\r\n      return;\r\n    } else if (val === true) pInst.debugMode();\r\n    else if (Array.isArray(val)) pInst.debugMode(...val);\r\n    else pInst.debugMode(val);\r\n    this.#debug_mode = true;\r\n  }\r\n  /**\r\n   * Allows movement around a 3D sketch using a mouse or trackpad.\r\n   * Left-clicking and dragging will rotate the camera position about the\r\n   * center of the sketch,\r\n   * right-clicking and dragging will pan the camera position without rotation,\r\n   * and using the mouse wheel (scrolling) will move the camera closer or\r\n   * further\r\n   * from the center of the sketch. This property can be set with parameters\r\n   * dictating sensitivity to mouse movement along the X, Y, and Z axes.\r\n   * Setting orbit_control=\"true\" is equivalent to setting\r\n   * orbit_control=\"1, 1\".\r\n   * To reverse direction of movement in either axis, enter a negative number\r\n   * for sensitivity.\r\n   * @type {boolean}\r\n   * */\r\n  get orbit_control() {\r\n    return this.#orbit_control;\r\n  }\r\n  set orbit_control(val) {\r\n    if (val === false) return (this.#orbit_control = false);\r\n    this.#orbit_control = true;\r\n    if (Array.isArray(val)) return this.pInst.orbitControl(...val);\r\n    this.pInst.orbitControl();\r\n  }\r\n  /**\r\n   * Sets an orthographic projection for the current camera in a 3D sketch\r\n   * and defines a box-shaped viewing frustum within which objects are seen.\r\n   * In this projection, all objects with the same dimension appear the same\r\n   * size, regardless of whether they are near or far from the camera.\r\n   *\r\n   * This may be set to a comma-separated list of arguments to\r\n   * <a href=\"https://p5js.org/reference/#/p5/ortho\">ortho()</a>\r\n   *\r\n   * If set to \"true\", the following default is used:\r\n   * ortho(-width/2, width/2, -height/2, height/2).\r\n   *\r\n   * @type {boolean}\r\n   */\r\n  set ortho(val) {\r\n    if (val === true) this.pInst.ortho();\r\n    else if (Array.isArray(val)) this.pInst.ortho(...val);\r\n    else if (val !== false) this.pInst.ortho(val);\r\n  }\r\n}\r\ncustomElements.define(\"p-canvas-3d\", WebGLCanvas, {\r\n  extends: \"canvas\",\r\n});\r\n","export const addCanvasProperties = (baseClass) =>\r\n  class extends baseClass {\r\n    #background;\r\n    /**\r\n     * The background property sets the color or image used\r\n     * for the background of the p5.js canvas. The default background is transparent.\r\n     * A <a href=\"https://p5js.org/reference/#/p5.Color\">p5.Color</a> object can be provided to set the background color.\r\n     *\r\n     * A <a href=\"https://p5js.org/reference/#/p5.Image\">p5.Image</a> can also be provided to set the background image.\r\n     *\r\n     * The arguments to <a href=\"https://p5js.org/reference/#/p5/color\">color()</a> can also be provided,\r\n     * separated by commas.\r\n     * @type {p5.Color|p5.Image}\r\n     */\r\n    get background() {\r\n      return this.#background;\r\n    }\r\n    set background(c) {\r\n      if (c instanceof p5.Color || c instanceof p5.Image) this.#background = c;\r\n      this.#background = this.pInst.color(c);\r\n    }\r\n    /**\r\n     * Sets the cursor when hovering over the canvas.\r\n     *\r\n     * You can set cursor to any of the following constants:\r\n     * ARROW, CROSS, HAND, MOVE, TEXT and WAIT\r\n     *\r\n     * You may also set cursor to the URL of an image file. The recommended size\r\n     * is 16x16 or 32x32 pixels. (Allowed File extensions: .cur, .gif, .jpg, .jpeg, .png)\r\n     *\r\n     * For more information on Native CSS cursors and url visit:\r\n     * https://developer.mozilla.org/en-US/docs/Web/CSS/cursor\r\n     *\r\n     * You may also set cursor to \"type, x, y\", where type is one of the types above,\r\n     * x is the horizontal active spot of the cursor (must be less than 32)\r\n     * and\r\n     * y is the vertical active spot of the cursor (must be less than 32)\r\n     * @type {string}\r\n     */\r\n    get cursor() {\r\n      return this.style.cursor;\r\n    }\r\n    set cursor(val) {\r\n      const { pInst } = this;\r\n      if (val === this.NONE) pInst.noCursor();\r\n      else if (Array.isArray(val)) pInst.cursor(...val);\r\n      else pInst.cursor(val);\r\n    }\r\n    get description() {\r\n      const { pInst } = this;\r\n      const cnvId = this.id;\r\n      const descContainer = pInst.dummyDOM.querySelector(\r\n        `#${cnvId}_Description`\r\n      );\r\n      if (descContainer) return descContainer;\r\n      const labelContainer = pInst.dummyDOM.querySelector(`#${cnvId}_Label`);\r\n      return labelContainer;\r\n    }\r\n    set description(val) {\r\n      if (Array.isArray(val)) this.pInst.describe(...val);\r\n      else this.pInst.describe(val);\r\n    }\r\n    /**\r\n     * The height of the canvas in pixels.\r\n     * @type {number}\r\n     */\r\n    get height() {\r\n      return this.pInst.height;\r\n    }\r\n    set height(val) {\r\n      if (val === this.height || isNaN(val)) return;\r\n      this.#resize(this.width, val);\r\n    }\r\n    get orderedAttributeNames() {\r\n      //  Remove 'is' and 'style' from attrNames\r\n      return super.orderedAttributeNames.filter(\r\n        (v) => v !== \"is\" && v != \"style\"\r\n      );\r\n    }\r\n    /**\r\n     * Array containing the values for all the pixels in the display window.\r\n     * These values are numbers. This array is the size (include an appropriate\r\n     * factor for pixel_density) of the display window x4,\r\n     * representing the R, G, B, A values in order for each pixel, moving from\r\n     * left to right across each row, then down each column. Retina and other\r\n     * high density displays may have more pixels (by a factor of\r\n     * pixel_density^2).\r\n     * For example, if the image is 100×100 pixels, there will be 40,000. With\r\n     * pixel_density = 2, there will be 160,000. The first four values\r\n     * (indices 0-3) in the array will be the R, G, B, A values of the pixel at\r\n     * (0, 0). The second four values (indices 4-7) will contain the R, G, B, A\r\n     * values of the pixel at (1, 0).\r\n     * @type {number[]}\r\n     */\r\n    get pixels() {\r\n      this.pInst.loadPixels();\r\n      return this.pInst.pixels;\r\n    }\r\n    set pixels(px) {\r\n      this.pInst.pixels = px;\r\n      this.pInst.updatePixels();\r\n    }\r\n    set loop(val) {\r\n      if (val) this.pInst.loop();\r\n      else this.pInst.noLoop();\r\n    }\r\n    #resize(w, h) {\r\n      if (w === this.width && h === this.height) return;\r\n      const { pInst } = this;\r\n      const props = {};\r\n      for (const key in pInst.drawingContext) {\r\n        const val = pInst.drawingContext[key];\r\n        if (typeof val !== \"object\" && typeof val !== \"function\") {\r\n          props[key] = val;\r\n        }\r\n      }\r\n      pInst.width = pInst._renderer.width = w;\r\n      pInst.height = pInst._renderer.height = h;\r\n      this.setAttribute(\"width\", w * pInst._pixelDensity);\r\n      this.setAttribute(\"height\", h * pInst._pixelDensity);\r\n      this.style.width = `${w}px`;\r\n      this.style.height = `${h}px`;\r\n      pInst.drawingContext.scale(pInst._pixelDensity, pInst._pixelDensity);\r\n      for (const savedKey in props) {\r\n        try {\r\n          pInst.drawingContext[savedKey] = props[savedKey];\r\n        } catch (err) {}\r\n      }\r\n      pInst.drawingContext.scale(pInst._pixelDensity, pInst._pixelDensity);\r\n      pInst.redraw();\r\n    }\r\n    /**\r\n     * The width of the canvas in pixels.\r\n     * @type {number}\r\n     */\r\n    get width() {\r\n      return this.pInst.width;\r\n    }\r\n    set width(val) {\r\n      if (val === this.width || isNaN(val)) return;\r\n      this.#resize(val, this.height);\r\n    }\r\n  };\r\n","export const addCanvasMethods = (baseClass) =>\r\n  class extends baseClass {\r\n    attributeInherited(attributeName) {\r\n      if (this.hasAttribute(attributeName) || attributeName in this.defaults)\r\n        return true;\r\n      return super.attributeInherited(attributeName);\r\n    }\r\n    runCode() {\r\n      const canvas = this;\r\n      const sketch = (pInst) => {\r\n        canvas.defaults = {\r\n          x: 0,\r\n          x1: 0,\r\n          x2: 0,\r\n          x3: 100,\r\n          x4: 100,\r\n          cx: 0,\r\n          y: 0,\r\n          y1: 0,\r\n          y2: 100,\r\n          y3: 100,\r\n          y4: 0,\r\n          cy: 0,\r\n          z: 0,\r\n          w: 100,\r\n          h: 100,\r\n          d: 100,\r\n          size: 100,\r\n          start_angle: 0,\r\n          stop_angle: pInst.PI,\r\n          vector: pInst.createVector(),\r\n          v1: 255,\r\n          v2: 255,\r\n          v3: 255,\r\n          rx: 1,\r\n          ry: 1,\r\n          rz: -1,\r\n          img: pInst.createImage(100, 100),\r\n          content: \"\",\r\n          on: true,\r\n          repeat: false,\r\n          change: {},\r\n        };\r\n\r\n        pInst.preload = () => pInst.loadAssets();\r\n\r\n        pInst.setup = function () {\r\n          canvas.setup(pInst, canvas);\r\n          // Set default dimensions (100, 100)\r\n          canvas.width = 100;\r\n          canvas.height = 100;\r\n          //  Set default background to transparent\r\n          canvas.background = pInst.color(0, 0);\r\n          pInst.assignCanvas(canvas, canvas.constructor.renderer);\r\n        };\r\n        pInst.draw = function () {\r\n          const state = canvas.updateState(canvas.defaults);\r\n          pInst.background(canvas.background);\r\n          for (const child of canvas.children) {\r\n            child.draw?.(state);\r\n          }\r\n        };\r\n      };\r\n      new p5(sketch);\r\n    }\r\n  };\r\n","import { RenderedElement } from \"../core\";\r\nimport { addBezierMethods, addCurveMethods } from \"../methods/shape_methods\";\r\nimport { addStroke, addFillStroke } from \"../properties/color_props\";\r\nimport {\r\n  addXY,\r\n  addXYZ,\r\n  addXY12,\r\n  addWidthHeight,\r\n  addRectMode,\r\n  add2DStrokeStyling,\r\n  addCurveTightness,\r\n  addCXY,\r\n  addXY3,\r\n  addXY4,\r\n} from \"../properties/shape_props\";\r\nimport { collider_type } from \"../methods/collide_methods\";\r\nimport { add2DTransformProps } from \"../properties/transform_props\";\r\nimport { add2DTransformMethod } from \"../methods/transform_methods\";\r\n\r\nconst add2DStroke = (baseClass) => addStroke(add2DStrokeStyling(baseClass));\r\nconst add2DFillStroke = (baseClass) =>\r\n  addFillStroke(add2DStrokeStyling(baseClass));\r\n\r\nconst transformVertexFn = (el) => (v) => {\r\n  const originalPoint = new DOMPoint(v.x, v.y);\r\n  const { x, y } = el.pInst._transform_point_matrix(\r\n    originalPoint,\r\n    el.transform_matrix\r\n  );\r\n  return el.pInst.createVector(x, y);\r\n};\r\n\r\nexport const addArcProps = (baseClass) =>\r\n  class extends baseClass {\r\n    #start_angle = 0;\r\n    #stop_angle = Math.PI;\r\n    #mode;\r\n    get mouse_over() {\r\n      const { mouse_trans_pos_x, mouse_trans_pos_y } = this.pInst;\r\n      const { x, y, width, height, start_angle, stop_angle } = this;\r\n      console.assert(\r\n        width === height,\r\n        \"mouse_over currently only works for arc's with equal width and height.\"\r\n      );\r\n      const arcRadius = width / 2;\r\n      const arcAngle = stop_angle - start_angle;\r\n      const arcRotation = start_angle + arcAngle / 2;\r\n\r\n      return this.collide.point_arc(\r\n        mouse_trans_pos_x,\r\n        mouse_trans_pos_y,\r\n        x,\r\n        y,\r\n        arcRadius,\r\n        arcRotation,\r\n        arcAngle\r\n      );\r\n    }\r\n    /**\r\n     * Angle to start the arc. Units are radians by default but may be changed\r\n     * to degrees with the degree_mode property.\r\n     * @type {number}\r\n     */\r\n    get start_angle() {\r\n      return this.#start_angle;\r\n    }\r\n    set start_angle(val) {\r\n      this.#start_angle = val;\r\n    }\r\n    /**\r\n     * Angle to stop the arc. Units are radians by default but may be changed\r\n     * to degrees with the degree_mode property.\r\n     * @type {number}\r\n     */\r\n    get stop_angle() {\r\n      return this.#stop_angle;\r\n    }\r\n    set stop_angle(val) {\r\n      this.#stop_angle = val;\r\n    }\r\n    /**\r\n     * determines the way of drawing the arc:\r\n     * - OPEN - like an open semi-circle\r\n     * - CHORD - closed semi-circle\r\n     * - PIE - closed pie segment\r\n     * @type {CHORD|PIE|OPEN}\r\n     */\r\n    get mode() {\r\n      return this.#mode;\r\n    }\r\n    set mode(val) {\r\n      this.#mode = val;\r\n    }\r\n  };\r\n/**\r\n * Draws an arc to the screen.\r\n * The origin may be changed with the ellipse_mode property.\r\n *\r\n * The arc is always drawn clockwise from wherever start falls to wherever\r\n * stop falls on the ellipse. Adding or subtracting TWO_PI to either angle\r\n * does not change where they fall. If both start and stop fall at the same\r\n * place, a full ellipse will be drawn. Be aware that the y-axis increases in\r\n * the downward direction, therefore angles are measured clockwise from the\r\n * positive x-direction (\"3 o'clock\").\r\n * @element arc\r\n */\r\nclass Arc extends addXY(\r\n  addWidthHeight(\r\n    addArcProps(add2DFillStroke(add2DTransformProps(RenderedElement)))\r\n  )\r\n) {\r\n  static overloads = [\"x, y, width, height, start_angle, stop_angle, [mode]\"];\r\n}\r\ncustomElements.define(\"p-arc\", Arc);\r\n\r\nconst addEllipse2DCollisionProps = (baseClass) =>\r\n  class extends baseClass {\r\n    collider = collider_type.ellipse;\r\n    get collision_args() {\r\n      const originalPoint = new DOMPoint(\r\n        this.this_element.x,\r\n        this.this_element.y\r\n      );\r\n      const { x, y } = this.pInst._transform_point_matrix(\r\n        originalPoint,\r\n        this.transform_matrix\r\n      );\r\n      const { pixel_density } = this.pInst;\r\n      const { w } = this.width * pixel_density;\r\n      const { h } = this.height * pixel_density || w;\r\n      return [x, y, w, h];\r\n    }\r\n    get mouse_over() {\r\n      const { mouse_trans_pos_x, mouse_trans_pos_y } = this.pInst;\r\n      const { x, y, width, height } = this.this_element;\r\n      return this.collide.point_ellipse(\r\n        mouse_trans_pos_x,\r\n        mouse_trans_pos_y,\r\n        x,\r\n        y,\r\n        width,\r\n        height\r\n      );\r\n    }\r\n  };\r\n/**\r\n * Draws an ellipse (oval) to a 3D canvas. If no height is specified, the\r\n * value of width is used for both the width and height. If a\r\n * negative height or width is specified, the absolute value is taken.\r\n *\r\n * An ellipse with equal width and height is a circle. The origin may be\r\n * changed with the ellipseMode() function.\r\n * @element ellipse\r\n */\r\nclass Ellipse extends addXY(\r\n  addWidthHeight(\r\n    addFillStroke(\r\n      addEllipse2DCollisionProps(add2DTransformProps(RenderedElement))\r\n    )\r\n  )\r\n) {\r\n  static overloads = [\"x, y, width, [height]\"];\r\n}\r\ncustomElements.define(\"p-ellipse\", Ellipse);\r\n\r\nconst addCircle2DCollisionProps = (baseClass) =>\r\n  class extends baseClass {\r\n    constructor() {\r\n      super([\"x, y, d\"]);\r\n    }\r\n    collider = collider_type.circle;\r\n    get collision_args() {\r\n      const originalPoint = new DOMPoint(this.x, this.y);\r\n      const { x, y } = this.pInst._transform_point_matrix(\r\n        originalPoint,\r\n        this.transform_matrix\r\n      );\r\n      const d =\r\n        this.this_element.d * this.pInst.pow(this.pInst.pixel_density, 2);\r\n      return [x, y, d];\r\n    }\r\n    get mouse_over() {\r\n      const { mouse_trans_pos_x, mouse_trans_pos_y } = this.pInst;\r\n      const { x, y, d } = this.this_element;\r\n      return this.collide.point_circle(\r\n        mouse_trans_pos_x,\r\n        mouse_trans_pos_y,\r\n        x,\r\n        y,\r\n        d\r\n      );\r\n    }\r\n  };\r\nexport const addDiameter = (baseClass) =>\r\n  class extends baseClass {\r\n    #diameter = 100;\r\n    get diameter() {\r\n      return this.#diameter;\r\n    }\r\n    set diameter(val) {\r\n      this.#diameter = val;\r\n    }\r\n  };\r\n/**\r\n * Draws a circle to the screen. A circle is a simple closed shape. It is the\r\n * set of all points in a plane that are at a given distance from a given\r\n * point, the center.\r\n * @element circle\r\n */\r\nclass Circle extends addXY(\r\n  addDiameter(\r\n    add2DFillStroke(\r\n      add2DTransformProps(addCircle2DCollisionProps(RenderedElement))\r\n    )\r\n  )\r\n) {\r\n  static overloads = [\"x, y, diameter\"];\r\n}\r\ncustomElements.define(\"p-circle\", Circle);\r\n\r\nconst addLine2DCollisionProps = (baseClass) =>\r\n  class extends baseClass {\r\n    collider = collider_type.line;\r\n    get collision_args() {\r\n      const originalStart = new DOMPoint(\r\n        this.this_element.x1,\r\n        this.this_element.y1\r\n      );\r\n      const { x: x1, y: y1 } = this.pInst._transform_point_matrix(\r\n        originalStart,\r\n        this.transform_matrix\r\n      );\r\n      const originalEnd = new DOMPoint(\r\n        this.this_element.x2,\r\n        this.this_element.y2\r\n      );\r\n      const { x: x2, y: y2 } = this.pInst._transform_point_matrix(\r\n        originalEnd,\r\n        this.transform_matrix\r\n      );\r\n      return [x1, y1, x2, y2];\r\n    }\r\n    get mouse_over() {\r\n      const { mouse_trans_pos_x, mouse_trans_pos_y } = this.pInst;\r\n      const { x1, y1, x2, y2 } = this.this_element;\r\n      return this.collide.point_line(\r\n        mouse_trans_pos_x,\r\n        mouse_trans_pos_y,\r\n        x1,\r\n        y1,\r\n        x2,\r\n        y2\r\n      );\r\n    }\r\n  };\r\n/**\r\n * Draws a line (a direct path between two points) to the screen. Its width\r\n * can be modified by using the stroke_weight property. A line cannot be\r\n * filled, therefore the fill_color property will not affect the color of a\r\n * line. So to color a line, use the stroke property.\r\n * @element line\r\n */\r\nclass Line extends addXY12(\r\n  add2DStroke(add2DTransformProps(addLine2DCollisionProps(RenderedElement)))\r\n) {\r\n  static overloads = [\"x1, y1, x2, y2\"];\r\n}\r\ncustomElements.define(\"p-line\", Line);\r\n\r\nconst addPointCollisionProps = (baseClass) =>\r\n  class extends baseClass {\r\n    collider = collider_type.circle;\r\n    get collision_args() {\r\n      const originalPoint = new DOMPoint(this.x, this.y);\r\n      const { x, y } = this.pInst._transform_point_matrix(\r\n        originalPoint,\r\n        this.transform_matrix\r\n      );\r\n      const { stroke_weight } = this;\r\n      const { pixel_density } = this.pInst;\r\n      const d = stroke_weight * this.pInst.pow(pixel_density, 2);\r\n      return [x, y, d];\r\n    }\r\n    get mouse_over() {\r\n      const {\r\n        x,\r\n        y,\r\n        stroke_weight,\r\n        pixel_density,\r\n        mouse_trans_pos_x,\r\n        mouse_trans_pos_y,\r\n      } = this;\r\n      const d = stroke_weight * this.pInst.pow(pixel_density, 2);\r\n      return this.collide.point_circle(\r\n        mouse_trans_pos_x,\r\n        mouse_trans_pos_y,\r\n        x,\r\n        y,\r\n        d\r\n      );\r\n    }\r\n  };\r\n/**\r\n * Draws a point, a coordinate in space at the dimension of one pixel. The\r\n * color of the point is changed with the stroke property. The size of\r\n * the point can be changed with the stroke_weight property.\r\n * @element point\r\n */\r\nclass Point extends addXY(\r\n  add2DStroke(add2DTransformProps(addPointCollisionProps(RenderedElement)))\r\n) {\r\n  static overloads = [\"x, y\"];\r\n}\r\ncustomElements.define(\"p-point\", Point);\r\n\r\nconst addQuad2DCollisionProps = (baseClass) =>\r\n  class extends baseClass {\r\n    collider = collider_type.poly;\r\n    get collision_args() {\r\n      return [this.vertices.map(transformVertexFn(this))];\r\n    }\r\n    get mouse_over() {\r\n      const { mouse_trans_pos_x, mouse_trans_pos_y } = this.pInst;\r\n      return this.collide.point_poly(\r\n        mouse_trans_pos_x,\r\n        mouse_trans_pos_y,\r\n        this.vertices\r\n      );\r\n    }\r\n    get vertices() {\r\n      const { x1, y1, x2, y2, x3, y3, x4, y4 } = this;\r\n      return [\r\n        this.pInst.createVector(x1, y1),\r\n        this.pInst.createVector(x2, y2),\r\n        this.pInst.createVector(x3, y3),\r\n        this.pInst.createVector(x4, y4),\r\n      ];\r\n    }\r\n  };\r\n/**\r\n * Draws a quad on the canvas. A quad is a quadrilateral, a four-sided\r\n * polygon. It is similar to a rectangle, but the angles between its edges\r\n * are not constrained to ninety degrees. The x1 and y1 properties set the\r\n * first vertex and the subsequent pairs should proceed clockwise or\r\n * counter-clockwise around the defined shape.\r\n * @element quad\r\n */\r\nclass Quad extends addXY12(\r\n  addXY3(\r\n    addXY4(\r\n      add2DFillStroke(\r\n        add2DTransformProps(addQuad2DCollisionProps(RenderedElement))\r\n      )\r\n    )\r\n  )\r\n) {\r\n  static overloads = [\"x1, y1, x2, y2, x3, y3, x4, y4\"];\r\n}\r\ncustomElements.define(\"p-quad\", Quad);\r\nconst addCornerRadius = (baseClass) =>\r\n  class extends baseClass {\r\n    #top_left_radius = 0;\r\n    #top_right_radius = 0;\r\n    #bottom_left_radius = 0;\r\n    #bottom_right_radius = 0;\r\n    /**\r\n     * radius of top-left corner\r\n     * @type {number}\r\n     */\r\n    get top_left_radius() {\r\n      return this.#top_left_radius;\r\n    }\r\n    set top_left_radius(val) {\r\n      this.#top_left_radius = val;\r\n    }\r\n    /**\r\n     * radius of top-right corner\r\n     * @type {number}\r\n     */\r\n    get top_right_radius() {\r\n      return this.#top_right_radius;\r\n    }\r\n    set top_right_radius(val) {\r\n      this.#top_right_radius = val;\r\n    }\r\n    /**\r\n     * radius of bottom-left corner\r\n     * @type {number}\r\n     */\r\n    get bottom_left_radius() {\r\n      return this.#bottom_left_radius;\r\n    }\r\n    set bottom_left_radius(val) {\r\n      this.#bottom_left_radius = val;\r\n    }\r\n    /**\r\n     * radius of bottom-right corner\r\n     * @type {number}\r\n     */\r\n    get bottom_right_radius() {\r\n      return this.#bottom_right_radius;\r\n    }\r\n    set bottom_right_radius(val) {\r\n      this.#bottom_right_radius = val;\r\n    }\r\n  };\r\n/**\r\n * Draws a rectangle on the canvas. A rectangle is a four-sided closed shape\r\n * with every angle at ninety degrees. By default, the x and y properties\r\n * set the location of the upper-left corner, w sets the width, and h sets\r\n * the height. The way these properties are interpreted may be changed with\r\n * the rect_mode property.\r\n * @element rect\r\n */\r\nclass Rect extends addXY(\r\n  addWidthHeight(addRectMode(addCornerRadius(add2DFillStroke(RenderedElement))))\r\n) {\r\n  static overloads = [\r\n    \"x, y, width, [height], [top_left_radius], [top_right_radius], [bottom_right_radius], [bottom_left_radius]\",\r\n  ];\r\n  collider = collider_type.rect;\r\n  get collision_args() {\r\n    const originalPoint = new DOMPoint(this.x, this.y);\r\n    const { x, y } = this.pInst._transform_point_matrix(\r\n      originalPoint,\r\n      this.transform_matrix\r\n    );\r\n    const { pixel_density } = this.pInst;\r\n    const w = this.width * this.pInst.pow(pixel_density, 2);\r\n    const h = this.height * this.pInst.pow(pixel_density, 2);\r\n    return [x, y, w, h];\r\n  }\r\n  get mouse_over() {\r\n    const { mouse_trans_pos_x, mouse_trans_pos_y } = this.pInst;\r\n    const { x, y, width, height } = this;\r\n    return this.collide.point_rect(\r\n      mouse_trans_pos_x,\r\n      mouse_trans_pos_y,\r\n      x,\r\n      y,\r\n      width,\r\n      height\r\n    );\r\n  }\r\n}\r\ncustomElements.define(\"p-rect\", Rect);\r\n/**\r\n * Draws a square to the screen. A square is a four-sided shape with every\r\n * angle at ninety degrees, and equal side size. This element is a special\r\n * case of the rect element, where the width and height are the same, and the\r\n * attribute is called \"s\" for side size. By default, the x and y attributes\r\n * set the location of the upper-left corner, and s sets the side size of the\r\n * square. The way these attributes are interpreted, may be changed with the\r\n * rect_mode attribute.\r\n *\r\n * The tl, tr, br, and bl attributes, if specified, determine corner radius\r\n * for the top-left, top-right, lower-right and lower-left corners,\r\n * respectively. An omitted corner radius attribute is set to the value of\r\n * the previously specified radius value in the attribute list.\r\n *\r\n * @element square\r\n */\r\nclass Square extends addXY(\r\n  addRectMode(\r\n    addCornerRadius(\r\n      add2DFillStroke(\r\n        add2DTransformProps(add2DTransformMethod(RenderedElement))\r\n      )\r\n    )\r\n  )\r\n) {\r\n  #size;\r\n  static overloads = [\r\n    \"x, y, size, [top_left_radius], [top_right_radius], [bottom_right_radius], [bottom_left_radius]\",\r\n  ];\r\n  collider = collider_type.rect;\r\n  get collision_args() {\r\n    const originalPoint = new DOMPoint(this.x, this.y);\r\n    const { x, y } = this.pInst._transform_point_matrix(\r\n      originalPoint,\r\n      this.transform_matrix\r\n    );\r\n    const { pixel_density } = this.pInst;\r\n    const { size } = this;\r\n    const w = size * this.pInst.pow(pixel_density, 2);\r\n    const h = w;\r\n    return [x, y, w, h];\r\n  }\r\n  get mouse_over() {\r\n    const { mouse_trans_pos_x, mouse_trans_pos_y } = this.pInst;\r\n    const { x, y, size } = this;\r\n    return this.collide.point_rect(\r\n      mouse_trans_pos_x,\r\n      mouse_trans_pos_y,\r\n      x,\r\n      y,\r\n      size,\r\n      size\r\n    );\r\n  }\r\n  /**\r\n   * The side size of the square\r\n   * @type {number}\r\n   */\r\n  get size() {\r\n    return this.#size;\r\n  }\r\n  set size(val) {\r\n    if (!isNaN(val)) this.#size = Number(val);\r\n    else\r\n      console.error(\r\n        `${this.tagName}'s size is being set to ${val}, but it may only be set to a number.`\r\n      );\r\n  }\r\n}\r\ncustomElements.define(\"p-square\", Square);\r\n/**\r\n * Draws a triangle to the canvas. A triangle is a plane created by connecting\r\n * three points. x1 and y1 specify the first point, x2 and y2 specify the\r\n * second point, and x3 and y3 specify the\r\n * third point.\r\n * @element triangle\r\n */\r\nclass Triangle extends addXY12(\r\n  addXY3(add2DFillStroke(add2DTransformProps(RenderedElement)))\r\n) {\r\n  static overloads = [\"x1, y1, x2, y2, x3, y3\"];\r\n  collider = collider_type.poly;\r\n  get collision_args() {\r\n    return [this.vertices.map(transformVertexFn(this))];\r\n  }\r\n  get mouse_over() {\r\n    const { mouse_trans_pos_x, mouse_trans_pos_y } = this.pInst;\r\n    const { x1, y1, x2, y2, x3, y3 } = this;\r\n    return this.collide.point_triangle(\r\n      mouse_trans_pos_x,\r\n      mouse_trans_pos_y,\r\n      x1,\r\n      y1,\r\n      x2,\r\n      y2,\r\n      x3,\r\n      y3\r\n    );\r\n  }\r\n  get vertices() {\r\n    const { x1, y1, x2, y2, x3, y3 } = this;\r\n    return [\r\n      this.pInst.createVector(x1, y1),\r\n      this.pInst.createVector(x2, y2),\r\n      this.pInst.createVector(x3, y3),\r\n    ];\r\n  }\r\n}\r\ncustomElements.define(\"p-triangle\", Triangle);\r\n\r\n/**\r\n * Draws a cubic Bezier curve on the screen. These curves are defined by a\r\n * series of anchor and control points. x1 and y1 specify\r\n * the first anchor point and x4 and y4 specify the other\r\n * anchor point, which become the first and last points on the curve. (x2, y2)\r\n * and (x3, y3) specify the two control points which define the shape\r\n * of the curve. Approximately speaking, control points \"pull\" the curve\r\n * towards them.\r\n *\r\n * Bezier curves were developed by French automotive engineer Pierre Bezier,\r\n * and are commonly used in computer graphics to define gently sloping curves.\r\n * @element bezier\r\n */\r\nclass Bezier extends addXY12(\r\n  addXY3(addXY4(add2DFillStroke(addBezierMethods(RenderedElement))))\r\n) {\r\n  static overloads = [\"x1, y1, x2, y2, x3, y3, x4, y4\"];\r\n}\r\ncustomElements.define(\"p-bezier\", Bezier);\r\n\r\n/**\r\n * Draws a curved line on the screen between two points, given as (x2, y2) and (x3, y3).\r\n * (x1, y1) is a control point, as\r\n * if the curve came from this point even though it's not drawn. (x4, y4) similarly describes\r\n * the other control point.\r\n *\r\n * Longer curves can be created by putting a series of ```<curve>``` elements\r\n * together or using ```<curve-vertex>```. The curve_tightness property provides control\r\n * for the visual quality of the curve.\r\n * The ```<curve>``` element is an implementation of Catmull-Rom splines.\r\n * @element curve\r\n */\r\nclass Curve extends addXY12(\r\n  addXY3(\r\n    addXY4(\r\n      addCurveTightness(\r\n        add2DFillStroke(addCurveMethods(add2DTransformProps(RenderedElement)))\r\n      )\r\n    )\r\n  )\r\n) {\r\n  static overloads = [\"x1, y1, x2, y2, x3, y3, x4, y4\"];\r\n}\r\ncustomElements.define(\"p-curve\", Curve);\r\n/**\r\n * Use the ```<contour>``` element to create negative shapes\r\n * within a ```<shape>``` element such as the center of the letter 'O'.\r\n * The vertices of the ```<contour>``` are defined by its\r\n * ```<vertex>``` and ```<curve-vertex>``` children.\r\n * The vertices that define a negative shape must \"wind\" in the opposite direction\r\n * from the exterior shape. First draw vertices for the exterior clockwise order, then for internal shapes, draw vertices\r\n * shape in counter-clockwise.\r\n *\r\n * This element must be a child of a ```<shape>```.\r\n * @element contour\r\n * @example Rectangular cut out\r\n * ```html\r\n * <canvas\r\n *    width=\"400\"\r\n *    height=\"400\"\r\n *    background=\"120, 140, 80\"\r\n *    loop=\"false\"\r\n * >\r\n *  <shape\r\n *      anchor=\"width/2, height/2\"\r\n *      mode=\"CLOSE\"\r\n *      fill=\"240, 200, 180\"\r\n *      stroke=\"200, 100, 60\"\r\n *      stroke_weight=\"4\"\r\n *  >\r\n *    <vertex x=\"-100\" y=\"-100\">\r\n *      <vertex x=\"100\">\r\n *        <vertex y=\"100\">\r\n *          <vertex x=\"-100\" />\r\n *        </vertex>\r\n *      </vertex>\r\n *    </vertex>\r\n *    <contour>\r\n *      <vertex x=\"-50\" y=\"-50\">\r\n *        <vertex y=\"50\">\r\n *          <vertex x=\"50\">\r\n *            <vertex y=\"-50\" />\r\n *          </vertex>\r\n *        </vertex>\r\n *      </vertex>\r\n *    </contour>\r\n *  </shape>\r\n * </canvas>\r\n * ```\r\n */\r\nclass Contour extends add2DFillStroke(RenderedElement) {\r\n  renderFunctionName = \"beginContour\";\r\n  endRender() {\r\n    this.pInst.endContour();\r\n  }\r\n}\r\ncustomElements.define(\"p-contour\", Contour);\r\n\r\nconst addShape2DCollisionProps = (baseClass) =>\r\n  class extends baseClass {\r\n    collider = collider_type.poly;\r\n    get collision_args() {\r\n      return [this.vertices.map(transformVertexFn(this))];\r\n    }\r\n    get vertices() {\r\n      const arrayFromChildren = (el) => {\r\n        const ca = Array.from(el.children);\r\n        return ca.concat(ca.map(arrayFromChildren)).flat();\r\n      };\r\n      const childArray = arrayFromChildren(this);\r\n      const vertexChildren = childArray.filter(\r\n        (el) => el instanceof Vertex && el.this_element\r\n      );\r\n      const vertices = vertexChildren.map((el) => {\r\n        if (el instanceof QuadraticVertex) {\r\n          const { x3, y3 } = el;\r\n          return this.pInst.createVector(x3, y3);\r\n        }\r\n        const { x, y } = el;\r\n        return this.pInst.createVector(x, y);\r\n      });\r\n      return vertices.concat(vertices.slice(0));\r\n    }\r\n  };\r\nexport const addShapeElementProps = (baseClass) =>\r\n  class extends baseClass {\r\n    #kind;\r\n    renderFunctionName = \"beginShape\";\r\n    static overloads = [\"[kind]\"];\r\n\r\n    endRender(assigned) {\r\n      if (assigned.hasOwnProperty(\"mode\")) this.pInst.endShape(assigned.mode);\r\n      else this.pInst.endShape();\r\n    }\r\n    /**\r\n     * The options available for kind are\r\n     *\r\n     * POINTS\r\n     * Draw a series of points\r\n     *\r\n     * LINES\r\n     * Draw a series of unconnected line segments (individual lines)\r\n     *\r\n     * TRIANGLES\r\n     * Draw a series of separate triangles\r\n     *\r\n     * TRIANGLE_FAN\r\n     * Draw a series of connected triangles sharing the first vertex in a fan-like fashion\r\n     *\r\n     * TRIANGLE_STRIP\r\n     * Draw a series of connected triangles in strip fashion\r\n     *\r\n     * QUADS\r\n     * Draw a series of separate quads\r\n     *\r\n     * QUAD_STRIP\r\n     * Draw quad strip using adjacent edges to form the next quad\r\n     *\r\n     * TESS (WEBGL only)\r\n     * Handle irregular polygon for filling curve by explicit tessellation\r\n     * @type {POINTS|LINES|TRIANGLES|TRIANGLE_FAN TRIANGLE_STRIP|QUADS|QUAD_STRIP|TESS}\r\n     */\r\n    get kind() {\r\n      return this.#kind;\r\n    }\r\n    set kind(val) {\r\n      this.#kind = val;\r\n    }\r\n  };\r\n/**\r\n * Using the ```<shape>``` element allow creating more\r\n * complex forms. The vertices of the shape are defined by its ```<vertex>```,\r\n * ```<curve-vertex>```, and/or ```<quadratic-vertex>``` children.\r\n * The value of the kind property tells it which\r\n * types of shapes to create from the provided vertices. With no mode\r\n * specified, the shape can be any irregular polygon.\r\n *\r\n * Transformations such as translate, angle, and scale do not work on children on ```<shape>```.\r\n * It is also not possible to use other shapes, such as\r\n * ```<ellipse>``` or ```<rect>``` as children of ```<shape>```.\r\n * @element shape\r\n */\r\nclass Shape extends addShapeElementProps(\r\n  add2DFillStroke(\r\n    addShape2DCollisionProps(add2DTransformProps(RenderedElement))\r\n  )\r\n) {}\r\ncustomElements.define(\"p-shape\", Shape);\r\n\r\n/**\r\n * All shapes are constructed by connecting a series of vertices. ```<vertex>```\r\n * is used to specify the vertex coordinates for points, lines, triangles,\r\n * quads, and polygons. It is used exclusively as a child of the ```<shape>``` element.\r\n * @element vertex\r\n */\r\nclass Vertex extends addXY(RenderedElement) {\r\n  static overloads = [\"x, y\"];\r\n}\r\ncustomElements.define(\"p-vertex\", Vertex);\r\n/**\r\n * Specifies vertex coordinates for quadratic Bezier curves. Each ```<quadratic-vertex>```\r\n * defines the position of one control points and one\r\n * anchor point of a Bezier curve, adding a new segment to a line or shape.\r\n * The first ```<quadratic-vertex>``` child of a ```<shape>``` element\r\n * must have a ```<vertex>``` sibling above it to set the first anchor point.\r\n *\r\n * This element must be a child of a ```<shape>``` element\r\n * and only when there is no MODE or POINTS property specified on the\r\n *  ```<shape>```.\r\n */\r\nclass QuadraticVertex extends addCXY(addXY3(RenderedElement)) {\r\n  static overloads = [\"cx, cy, x3, y3\"];\r\n}\r\ncustomElements.define(\"p-quadratic-vertex\", QuadraticVertex);\r\n/**\r\n * Specifies vertex coordinates for curves. This function may only\r\n * be used as a child of the ```<shape>``` element and only when there\r\n * is no MODE property specified on the ```<shape>``.\r\n *\r\n * The first and last points in a series of ```<curve-vertex>``` lines\r\n * will be used to\r\n * guide the beginning and end of the curve. A minimum of four\r\n * points is required to draw a tiny curve between the second and\r\n * third points. Adding a fifth point with ```<curve-vertex>``` will draw\r\n * the curve between the second, third, and fourth points. The\r\n * ```<curve-vertex>``` element is an implementation of Catmull-Rom\r\n * splines.\r\n */\r\nclass CurveVertex extends addXYZ(addCurveTightness(RenderedElement)) {\r\n  static overloads = [\"x, y\"];\r\n}\r\ncustomElements.define(\"p-curve-vertex\", CurveVertex);\r\n","export const addBezierMethods = (baseClass) =>\n  class extends baseClass {\n    /**\n     * Evaluates the position on the bezier at t. t is the\n     * resultant point which is given between 0 (start of Bezier) and 1 (end of Bezier).\n     *\n     * @param {number} t - value between 0 and 1\n     * @returns {p5.Vector} - position on Bezier at t\n     */\n    point_at(t) {\n      const x = this.pInst.bezierPoint(this.x1, this.x2, this.x3, this.x4, t);\n      const y = this.pInst.bezierPoint(this.y1, this.y2, this.y3, this.y4, t);\n      return this.pInst.createVector(x, y);\n    }\n    /**\n     * Evaluates the tangent to the Bezier at position t.\n     * t is between 0 (start of Bezier) and 1 (end of Bezier).\n     * @param {number} t - value between 0 and 1\n     * @returns {p5.Vector} - tangent of Bezier at t\n     */\n    tangent_at(t) {\n      const x = this.pInst.bezierTangent(this.x1, this.x2, this.x3, this.x4, t);\n      const y = this.pInst.bezierTangent(this.y1, this.y2, this.y3, this.y4, t);\n      return this.pInst.createVector(x, y);\n    }\n  };\n\nexport const addCurveMethods = (baseClass) =>\n  class extends baseClass {\n    /**\n     * Evaluates the position on the curve at t.\n     * t is between 0 (start of curve) and 1 (end of curve).\n     *\n     * @param {number} t - value between 0 and 1\n     * @returns {p5.Vector} - position on curve at t\n     */\n    point_at(t) {\n      const x = this.pInst.curvePoint(this.x1, this.x2, this.x3, this.x4, t);\n      const y = this.pInst.curvePoint(this.y1, this.y2, this.y3, this.y4, t);\n      return this.pInst.createVector(x, y);\n    }\n    /**\n     * Evaluates the tangent to the curve at t.\n     * t is between 0 (start of curve) and 1 (end of curve).\n     *\n     * @param {number} t - value between 0 and 1\n     * @returns {p5.Vector} - tangent of curve at t\n     */\n    tangent_at(t) {\n      const x = this.pInst.curveTangent(this.x1, this.x2, this.x3, this.x4, t);\n      const y = this.pInst.curveTangent(this.y1, this.y2, this.y3, this.y4, t);\n      return this.pInst.createVector(x, y);\n    }\n  };\n","export const addWidthHeight = (baseClass) =>\r\n  class extends baseClass {\r\n    #width;\r\n    #height;\r\n    /**\r\n     * The width of the element in pixels.\r\n     * @type {number}\r\n     */\r\n    get width() {\r\n      return this.#width;\r\n    }\r\n    set width(val) {\r\n      if (!isNaN(val)) this.#width = Number(val);\r\n      else\r\n        console.error(\r\n          `${this.tagName}'s width is being set to ${val}, but it may only be set to a number.`\r\n        );\r\n    }\r\n    /**\r\n     * The height of the element in pixels.\r\n     * @type {number}\r\n     */\r\n    get height() {\r\n      return this.#height;\r\n    }\r\n    set height(val) {\r\n      if (!isNaN(val)) this.#height = Number(val);\r\n      else\r\n        console.error(\r\n          `${this.tagName}'s height is being set to ${val}, but it may only be set to a number.`\r\n        );\r\n    }\r\n  };\r\nexport const addXY = (baseClass) =>\r\n  class extends baseClass {\r\n    #x;\r\n    #y;\r\n    /**\r\n     * The x-coordinate of the element relative to the current anchor.\r\n     * @type {number}\r\n     */\r\n    get x() {\r\n      return this.#x;\r\n    }\r\n    set x(val) {\r\n      if (!isNaN(val)) this.#x = Number(val);\r\n      else\r\n        console.error(\r\n          `${this.tagName}'s x property is being set to ${val}, but it may only be set to a number`\r\n        );\r\n    }\r\n    /**\r\n     * The y-coordinate of the element relative to the current anchor.\r\n     * @type {number}\r\n     */\r\n    get y() {\r\n      return this.#y;\r\n    }\r\n    set y(val) {\r\n      if (!isNaN(val)) this.#y = Number(val);\r\n      else\r\n        console.error(\r\n          `${this.tagName}'s y property is being set to ${val}, but it may only be set to a number`\r\n        );\r\n    }\r\n  };\r\n\r\nconst addZ = (baseClass) =>\r\n  class extends baseClass {\r\n    #z;\r\n    /**\r\n     * The z-coordinate of the element relative to the current anchor.\r\n     * @type {number}\r\n     */\r\n    get z() {\r\n      return this.#z;\r\n    }\r\n    set z(val) {\r\n      if (!isNaN(val)) this.#z = Number(val);\r\n      else\r\n        console.error(\r\n          `${this.tagName}'s z property is being set to ${val}, but it may only be set to a number`\r\n        );\r\n    }\r\n  };\r\nexport const addXYZ = (baseClass) => class extends addXY(addZ(baseClass)) {};\r\n\r\nconst addXY1 = (baseClass) =>\r\n  class extends baseClass {\r\n    #x1;\r\n    #y1;\r\n    /**\r\n     * The first x-coordinate of the element relative to the current anchor.\r\n     * @type {number}\r\n     */\r\n    get x1() {\r\n      return this.#x1;\r\n    }\r\n    set x1(val) {\r\n      if (!isNaN(val)) this.#x1 = val;\r\n      else\r\n        console.error(\r\n          `${this.tagName}'s x1 is being set to ${val}, but it may only be set to a number.`\r\n        );\r\n    }\r\n    /**\r\n     * The first y-coordinate of the element relative to the current anchor.\r\n     * @type {number}\r\n     */\r\n    get y1() {\r\n      return this.#y1;\r\n    }\r\n    set y1(val) {\r\n      if (!isNaN(val)) this.#y1 = val;\r\n      else\r\n        console.error(\r\n          `${this.tagName}'s y1 is being set to ${val}, but it may only be set to a number.`\r\n        );\r\n    }\r\n  };\r\nconst addXY2 = (baseClass) =>\r\n  class extends baseClass {\r\n    #x2;\r\n    #y2;\r\n    /**\r\n     * The second x-coordinate of the element relative to the current anchor.\r\n     * @type {number}\r\n     */\r\n    get x2() {\r\n      return this.#x2;\r\n    }\r\n    set x2(val) {\r\n      if (!isNaN(val)) this.#x2 = val;\r\n      else\r\n        console.error(\r\n          `${this.tagName}'s x2 is being set to ${val}, but it may only be set to a number.`\r\n        );\r\n    }\r\n    /**\r\n     * The second y-coordinate of the element relative to the current anchor.\r\n     * @type {number}\r\n     */\r\n    get y2() {\r\n      return this.#y2;\r\n    }\r\n    set y2(val) {\r\n      if (!isNaN(val)) this.#y2 = val;\r\n      else\r\n        console.error(\r\n          `${this.tagName}'s y2 is being set to ${val}, but it may only be set to a number.`\r\n        );\r\n    }\r\n  };\r\n\r\nexport const addXY12 = (baseClass) =>\r\n  class extends addXY1(addXY2(baseClass)) {};\r\nexport const addXY3 = (baseClass) =>\r\n  class extends baseClass {\r\n    #x3;\r\n    #y3;\r\n    /**\r\n     * The third x-coordinate of the element relative to the current anchor.\r\n     * @type {number}\r\n     */\r\n    get x3() {\r\n      return this.#x3;\r\n    }\r\n    set x3(val) {\r\n      if (!isNaN(val)) this.#x3 = val;\r\n      else\r\n        console.error(\r\n          `${this.tagName}'s x3 is being set to ${val}, but it may only be set to a number.`\r\n        );\r\n    }\r\n    /**\r\n     * The third y-coordinate of the element relative to the current anchor.\r\n     * @type {number}\r\n     */\r\n    get y3() {\r\n      return this.#y3;\r\n    }\r\n    set y3(val) {\r\n      if (!isNaN(val)) this.#y3 = val;\r\n      else\r\n        console.error(\r\n          `${this.tagName}'s y3 is being set to ${val}, but it may only be set to a number.`\r\n        );\r\n    }\r\n  };\r\n\r\nconst addXY123 = (baseClass) => class extends addXY12(addXY3(baseClass)) {};\r\n\r\nconst addZ1 = (baseClass) =>\r\n  class extends baseClass {\r\n    #z1;\r\n    /**\r\n     * The first z-coordinate of the element relative to the current anchor. |\r\n     * @type {number}\r\n     */\r\n    get z1() {\r\n      return this.#z1;\r\n    }\r\n    set z1(val) {\r\n      if (!isNaN(val)) this.#z1 = val;\r\n      else\r\n        console.error(\r\n          `${this.tagName}'s z1 is being set to ${val}, but it may only be set to a number.`\r\n        );\r\n    }\r\n  };\r\nexport const addXYZ1 = (baseClass) => class extends addXY1(addZ1(baseClass)) {};\r\nconst addZ2 = (baseClass) =>\r\n  class extends baseClass {\r\n    #z2;\r\n    /**\r\n     * The second z-coordinate of the element relative to the current anchor. |\r\n     * @type {number}\r\n     */\r\n    get z2() {\r\n      return this.#z2;\r\n    }\r\n    set z2(val) {\r\n      if (!isNaN(val)) this.#z2 = val;\r\n      else\r\n        console.error(\r\n          `${this.tagName}'s z2 is being set to ${val}, but it may only be set to a number.`\r\n        );\r\n    }\r\n  };\r\nexport const addXYZ2 = (baseClass) => class extends addXY2(addZ2(baseClass)) {};\r\nconst addXYZ12 = (baseClass) => class extends addXYZ1(addXYZ2(baseClass)) {};\r\n\r\nexport const addXY4 = (baseClass) =>\r\n  class extends addXY123(baseClass) {\r\n    #x4;\r\n    #y4;\r\n    /**\r\n     * The fourth x-coordinate of the element relative to the current anchor.\r\n     * @type {number}\r\n     */\r\n    get x4() {\r\n      return this.#x4;\r\n    }\r\n    set x4(val) {\r\n      if (!isNaN(val)) this.#x4 = val;\r\n      else\r\n        console.error(\r\n          `${this.tagName}'s x4 is being set to ${val}, but it may only be set to a number.`\r\n        );\r\n    }\r\n    /**\r\n     * The fourth y-coordinate of the element relative to the current anchor.\r\n     * @type {number}\r\n     */\r\n    get y4() {\r\n      return this.#y4;\r\n    }\r\n    set y4(val) {\r\n      if (!isNaN(val)) this.#y4 = val;\r\n      else\r\n        console.error(\r\n          `${this.tagName}'s y4 is being set to ${val}, but it may only be set to a number.`\r\n        );\r\n    }\r\n  };\r\n\r\nexport const addZ3 = (baseClass) =>\r\n  class extends baseClass {\r\n    #z3;\r\n    /**\r\n     * The third z-coordinate of the element relative to the current anchor. |\r\n     * @type {number}\r\n     */\r\n    get z3() {\r\n      return this.#z3;\r\n    }\r\n    set z3(val) {\r\n      if (!isNaN(val)) this.#z3 = val;\r\n      else\r\n        console.error(\r\n          `${this.tagName}'s z3 is being set to ${val}, but it may only be set to a number.`\r\n        );\r\n    }\r\n  };\r\nexport const addXYZ3 = (baseClass) => class extends addXY3(addZ3(baseClass)) {};\r\nexport const addXYZ123 = (baseClass) =>\r\n  class extends addXYZ12(addXY3(addZ3(baseClass))) {};\r\n\r\nexport const addZ4 = (baseClass) =>\r\n  class extends baseClass {\r\n    #z4;\r\n    /**\r\n     * The fourth z-coordinate of the element relative to the current anchor. |\r\n     * @type {number}\r\n     */\r\n    get z4() {\r\n      return this.#z4;\r\n    }\r\n    set z4(val) {\r\n      if (!isNaN(val)) this.#z4 = val;\r\n      else\r\n        console.error(\r\n          `${this.tagName}'s z4 is being set to ${val}, but it may only be set to a number.`\r\n        );\r\n    }\r\n  };\r\nexport const addXYZ4 = (baseClass) => class extends addXY4(addZ4(baseClass)) {};\r\n\r\nexport const addRectMode = (baseClass) =>\r\n  class extends baseClass {\r\n    #rect_mode;\r\n    /**\r\n     * Modifies the location from which rectangles are drawn by changing the way\r\n     * in which x and y coordinates are interpreted.\r\n     *\r\n     * The default mode is CORNER, which interprets the x and y as the\r\n     * upper-left corner of the shape.\r\n     *\r\n     * rect_mode=\"CORNERS\" interprets x and y as the location of\r\n     * one of the corners, and width and height as the location of\r\n     * the diagonally opposite corner. Note, the rectangle is drawn between the\r\n     * coordinates, so it is not necessary that the first corner be the upper left\r\n     * corner.\r\n     *\r\n     * rect_mode=\"CENTER\" interprets x and y as the shape's center\r\n     * point.\r\n     *\r\n     * rect_mode=\"RADIUS\" also uses x and y as the shape's\r\n     * center\r\n     * point, but uses width and height to specify half of the shape's\r\n     * width and height respectively.\r\n     *\r\n     * The value to this property must be written in ALL CAPS because they are\r\n     * predefined as constants in ALL CAPS.\r\n     *\r\n     * @type {CORNER|CORNERS|CENTER|RADIUS}\r\n     */\r\n    get rect_mode() {\r\n      return this.#rect_mode;\r\n    }\r\n    set rect_mode(mode) {\r\n      this.pInst.rectMode(mode);\r\n      this.#rect_mode = this.pInst._renderer._rectMode;\r\n    }\r\n  };\r\n\r\nexport const add2DStrokeStyling = (baseClass) =>\r\n  class extends baseClass {\r\n    #smooth = true;\r\n    #stroke_cap = \"round\";\r\n    #stroke_join = \"miter\";\r\n    /**\r\n     * smooth=\"true\" draws all geometry with smooth (anti-aliased) edges. smooth=\"true\" will also\r\n     * improve image quality of resized images. smooth is true by\r\n     * default on a 2D canvas. smooth=\"false\" can be used to disable smoothing of geometry,\r\n     * images, and fonts.\r\n     * @type {boolean}\r\n     */\r\n    get smooth() {\r\n      return this.#smooth;\r\n    }\r\n    set smooth(val) {\r\n      if (typeof val !== \"boolean\")\r\n        return console.error(\r\n          `${this.tagName}'s smooth property is being set to ${val}, but it may only be set to true or false.`\r\n        );\r\n      if (val) this.pInst.smooth();\r\n      else this.pInst.noSmooth();\r\n      this.#smooth = val;\r\n    }\r\n    /**\r\n     * Sets the style for rendering line endings. These ends are either rounded,\r\n     * squared or extended, each of which specified with the corresponding\r\n     * parameters: ROUND, SQUARE and PROJECT. The default cap is ROUND.\r\n     *\r\n     * The value on this property must be written in ALL CAPS because they are\r\n     * predefined as constants in ALL CAPS.\r\n     * @type {ROUND|SQUARE|PROJECT}\r\n     */\r\n    get stroke_cap() {\r\n      return this.#stroke_cap;\r\n    }\r\n    set stroke_cap(val) {\r\n      this.pInst.strokeCap(val);\r\n      this.#stroke_cap = this.pInst.drawingContext.lineCap;\r\n    }\r\n    /**\r\n     * Sets the style of the joints which connect line segments. These joints\r\n     * are either mitered, beveled or rounded and specified with the\r\n     * corresponding parameters MITER, BEVEL and ROUND. The default joint is\r\n     * MITER.\r\n     *\r\n     * The parameter to this method must be written in ALL CAPS because they are\r\n     * predefined as constants in ALL CAPS.\r\n     * @type {MITER|BEVEL|ROUND}\r\n     */\r\n    get stroke_join() {\r\n      return this.#stroke_join;\r\n    }\r\n    set stroke_join(val) {\r\n      this.pInst.strokeJoin(val);\r\n      this.#stroke_join = this.pInst.drawingContext.lineJoin;\r\n    }\r\n  };\r\n\r\nexport const addCurveTightness = (baseClass) =>\r\n  class extends baseClass {\r\n    #tightness = 0;\r\n    /**\r\n     * Modifies the quality of the curve. The amount\r\n     * determines how the curve fits to the vertex points. The value 0.0 is the\r\n     * default value (this value defines the curves to be Catmull-Rom\r\n     * splines) and the value 1.0 connects all the points with straight lines.\r\n     * Values within the range -5.0 and 5.0 will deform the curves but will leave\r\n     * them recognizable and as values increase in magnitude, they will continue to deform.\r\n     * @type {number}\r\n     */\r\n    get tightness() {\r\n      return this.#tightness;\r\n    }\r\n    set tightness(val) {\r\n      this.#tightness = val;\r\n    }\r\n  };\r\n\r\nexport const addCXY = (baseClass) =>\r\n  class extends baseClass {\r\n    #cx;\r\n    #cy;\r\n    get cx() {\r\n      return this.#cx;\r\n    }\r\n    set cx(val) {\r\n      this.#cx = val;\r\n    }\r\n    get cy() {\r\n      return this.#cy;\r\n    }\r\n    set cy(val) {\r\n      this.#cy = val;\r\n    }\r\n  };\r\n\r\nexport const addCXYZ = (baseClass) =>\r\n  class extends baseClass {\r\n    #cz;\r\n    get cz() {\r\n      return this.#cz;\r\n    }\r\n    set cz(val) {\r\n      this.#cz = val;\r\n    }\r\n  };\r\n","const addAnchor = (baseClass) =>\r\n  class extends baseClass {\r\n    #anchor;\r\n    get anchor() {\r\n      return this.#anchor;\r\n    }\r\n    set anchor(val) {\r\n      this.#anchor = this.pInst.createVector(val);\r\n    }\r\n  };\r\n\r\nexport const add2DTransformProps = (baseClass) =>\r\n  class extends addAnchor(baseClass) {\r\n    #angle = 0;\r\n\r\n    /**\r\n     * The angle of rotation for the element and its children. The unit for\r\n     * angles may be set with angle_mode.\r\n     * @type {number}\r\n     */\r\n    get angle() {\r\n      return this.#angle;\r\n    }\r\n    set angle(val) {\r\n      this.#angle = val;\r\n    }\r\n  };\r\n\r\nexport const add3DTransformProps = (baseClass) =>\r\n  class extends addAnchor(baseClass) {\r\n    #angle_x;\r\n    #angle_y;\r\n    #angle_z;\r\n    /**\r\n     * The angle of rotation along the x-axis for the element and its children.\r\n     * The unit for angles may be set with angle_mode.\r\n     * @type {number}\r\n     */\r\n    get angle_x() {\r\n      return this.#angle_x;\r\n    }\r\n    set angle_x(val) {\r\n      this.#angle_x = val;\r\n    }\r\n    /**\r\n     * The angle of rotation along the y-axis for the element and its children.\r\n     * The unit for angles may be set with angle_mode.\r\n     * @type {number}\r\n     */\r\n    get angle_y() {\r\n      return this.#angle_y;\r\n    }\r\n    set angle_y(val) {\r\n      this.#angle_y = val;\r\n    }\r\n    /**\r\n     * The angle of rotation along the z-axis for the element and its children.\r\n     * The unit for angles may be set with angle_mode.\r\n     * @type {number}\r\n     */\r\n    get angle_z() {\r\n      return this.#angle_z;\r\n    }\r\n    set angle_z(val) {\r\n      this.#angle_z = val;\r\n    }\r\n  };\r\n","export const add2DTransformMethod = (baseClass) =>\r\n  class extends baseClass {\r\n    transform() {\r\n      console.log(this.anchor.x, this.anchor.y);\r\n      this.pInst.translate(this.anchor);\r\n      this.pInst.rotate(this.angle);\r\n    }\r\n  };\r\n\r\nexport const add3DTransformMethod = (baseClass) =>\r\n  class extends baseClass {\r\n    transform() {\r\n      this.pInst.translate(this.anchor);\r\n      this.pInst.rotateX(this.angleX);\r\n      this.pInst.rotateY(this.angleY);\r\n      this.pInst.rotateZ(this.angleZ);\r\n    }\r\n  };\r\n","import { defineProperties, wrapMethod } from \"../utils/p5Modifiers\";\n\np5.prototype._width = p5.prototype.width;\np5.prototype._height = p5.prototype.height;\n\np5.prototype._createDescriptionContainer = function () {\n  const cnvId = this.canvas.id;\n  const descriptionContainer = document.createElement(\"div\");\n  descriptionContainer.setAttribute(\"id\", `${cnvId}_Description`);\n  descriptionContainer.setAttribute(\"role\", \"region\");\n  descriptionContainer.setAttribute(\"aria-label\", \"Canvas Description\");\n  const p = document.createElement(\"p\");\n  p.setAttribute(\"id\", `${cnvId}_fallbackDesc`);\n  descriptionContainer.append(p);\n  this.canvas.append(descriptionContainer);\n  return descriptionContainer;\n};\nconst fallbackDescId = \"_fallbackDesc\";\nwrapMethod(\n  \"_describeHTML\",\n  (base) =>\n    function (type, text) {\n      const cnvId = this.canvas.id;\n      const describeId = `#${cnvId}_Description`;\n      if (type === \"fallback\") {\n        if (!this.dummyDOM.querySelector(describeId)) {\n          const fallback = this._createDescriptionContainer().querySelector(\n            `#${cnvId}_fallbackDesc`\n          );\n          fallback.innerHTML = text;\n        } else {\n          base.call(this, type, text);\n        }\n        //if the container for the description exists\n        this.descriptions.fallback = this.dummyDOM.querySelector(\n          `#${cnvId}${fallbackDescId}`\n        );\n        this.descriptions.fallback.innerHTML = text;\n      }\n    }\n);\n\nwrapMethod(\n  \"_describeElementHTML\",\n  (base) =>\n    function (type, name, text) {\n      const cnvId = this.canvas.id;\n      if (\n        type === \"fallback\" &&\n        !this.dummyDOM.querySelector(`#${cnvId}_Description`)\n      ) {\n        this._createDescriptionContainer();\n      }\n      base.call(this, type, name, text);\n    }\n);\n\nwrapMethod(\n  \"_createOutput\",\n  (base) =>\n    function (type, display) {\n      const cnvId = this.canvas.id;\n      if (!this.dummyDOM) {\n        this.dummyDOM = document.getElementById(cnvId).parentNode;\n      }\n      if (\n        (type === \"textOutput\" || type === \"gridOutput\") &&\n        !this.dummyDOM.querySelector(`#${cnvId}accessibleOutput${display}`)\n      )\n        this._createDescriptionContainer();\n      base.call(this, type, display);\n    }\n);\n\np5.prototype.registerMethod(\"post\", function () {\n  if (this.text_output || this.grid_output) this._updateAccsOutput();\n});\n\ndefineProperties({\n  grid_output: {\n    get: function () {\n      return this._accessibleOutputs.grid;\n    },\n    set: function (val) {\n      if (val === true) this.gridOutput();\n      else this.gridOutput(val);\n    },\n  },\n  pixel_density: {\n    get: function () {\n      return this.pixelDensity();\n    },\n    set: function (val) {\n      this.pixelDensity(val);\n    },\n  },\n  description: {\n    set: function (val) {\n      this.describeElement(...val);\n    },\n  },\n  display_density: {\n    get: function () {\n      return this.displayDensity();\n    },\n  },\n  url: {\n    get: function () {\n      return this.getURL();\n    },\n  },\n  url_path: {\n    get: function () {\n      return this.getURLPath();\n    },\n  },\n  url_params: {\n    get: function () {\n      return this.getURLParams();\n    },\n  },\n  log: {\n    set: function (val) {\n      this.print(val);\n    },\n  },\n  text_output: {\n    get: function () {\n      return this._accessibleOutputs.text;\n    },\n    set: function (val) {\n      if (val === true) this.textOutput();\n      else this.textOutput(val);\n    },\n  },\n});\n","import { RenderedElement } from \"../core\";\nimport { addStroke } from \"../properties/color_props\";\n\n/**\n * Clears the pixels within a buffer. This element only clears the canvas.\n * It will not clear objects created by create_x() functions such as\n * create_video() or create_div().\n * Unlike the main graphics context, pixels in additional graphics areas created\n * with create_graphics() can be entirely\n * or partially transparent. This element clears everything to make all of\n * the pixels 100% transparent.\n *\n * Note: In WebGL mode, this element can have attributes set to normalized RGBA\n * color values in order to clear the screen to a specific color.\n * In addition to color, it will also clear the depth buffer.\n * If you are not using the webGL renderer these color values will have no\n * effect.\n *\n * @element clear\n * @attribute {Number} r normalized red val.\n * @attribute {Number} g normalized green val.\n * @attribute {Number} b normalized blue val.\n * @attribute {Number} a normalized alpha val.\n */\nclass Clear extends RenderedElement {\n  static overloads = [\"\", \"r, g, b, a\"];\n}\ncustomElements.define(\"p-clear\", Clear);\n\n/**\n * The ```<paint-bucket>``` element fills the canvas with a particular color or\n * image.\n *\n * @element paint-bucket\n * @attribute {p5.Color} color  any value created by the <a href=\"#/p5/color\">color\n * @attribute {String} colorstring color string, possible formats include: integer\n *                         rgb() or rgba(), percentage rgb() or rgba(),\n *                         3-digit hex, 6-digit hex\n * @attribute {Number} [a]         opacity of the background relative to current\n *                             color range (default is 0-255)\n * @attribute {Number} gray   specifies a value between white and black\n * @attribute {Number} v1     red or hue value (depending on the current color\n *                        mode)\n * @attribute {Number} v2     green or saturation value (depending on the current\n *                        color mode)\n * @attribute {Number} v3     blue or brightness value (depending on the current\n *                        color mode)\n * @attribute  {Number[]}      values  an array containing the red, green, blue\n *                                 and alpha components of the color\n * @attribute {p5.Image} image    image loaded via an ```<asset>``` (must be\n *                                  same size as the sketch window)\n */\nclass PaintBucket extends RenderedElement {\n  static overloads = [\"c\", \"colorstring, [a]\", \"gray, [a]\", \"v1, v2, v3, [a]\"];\n  renderFunctionName = \"background\";\n}\ncustomElements.define(\"p-paint-bucket\", PaintBucket);\n","import { P5Element } from \"../core\";\r\n/**\r\n * This HTML element loads an XML sketch file. This should be added to the\r\n * index.html file as a `<link>` element with the attributes is=\"p-sketch\" and\r\n * href=\"[PATH TO XML FILE]\".\r\n * @element p-sketch\r\n * @example Add a sketch to html\r\n * ```html\r\n * <!DOCTYPE html>\r\n * <html lang=\"en\">\r\n * <head>\r\n *   <script src=\"p5.js\"></script>\r\n *   <script src=\"p5.marker.js\" defer></script>\r\n *   <link rel=\"stylesheet\" type=\"text/css\" href=\"style.css\" />\r\n *   <link href=\"sketch.xml\" is=\"p-sketch\" />\r\n *   <meta charset=\"utf-8\" />\r\n * </head>\r\n * <body></body>\r\n * </html>\r\n * ```\r\n */\r\nclass Sketch extends HTMLLinkElement {\r\n  static elementName = \"p-sketch\";\r\n  constructor() {\r\n    super();\r\n    this.#loadXML(this.href);\r\n  }\r\n  #convertElement(xmlEl) {\r\n    const xmlTag = xmlEl.tagName;\r\n    const createElementArguments = this.#xmlTagToCreateElementArguments(xmlTag);\r\n    const pEl = document.createElement(...createElementArguments);\r\n    this.#copyAttributes(xmlEl, pEl);\r\n    if (xmlTag === \"custom\") pEl.define();\r\n    return pEl;\r\n  }\r\n  #convertAllElements(xmlEl, parent = document.body) {\r\n    const pEl = this.#convertElement(xmlEl);\r\n    parent.appendChild(pEl);\r\n    for (let i = 0; i < xmlEl.children.length; i++) {\r\n      this.#convertAllElements(xmlEl.children[i], pEl);\r\n    }\r\n  }\r\n  #convertXML(e) {\r\n    const xml = e.target.response.documentElement;\r\n    this.#convertAllElements(xml);\r\n    document.querySelectorAll(\"canvas\").forEach((canvas) => canvas.runCode());\r\n  }\r\n  #copyAttributes(orig, copy) {\r\n    const attrs = orig.attributes;\r\n    for (let i = 0; i < attrs.length; i++) {\r\n      const attr = attrs[i];\r\n      copy.setAttribute(attr.name, attr.value);\r\n    }\r\n  }\r\n  #loadXML(path) {\r\n    if (!path)\r\n      return console.error(\r\n        \"p-sketch element is missing required path attribute\"\r\n      );\r\n    const request = new XMLHttpRequest();\r\n    request.open(\"GET\", path);\r\n    request.responseType = \"document\";\r\n    request.overrideMimeType(\"text/xml\");\r\n    request.addEventListener(\"load\", this.#convertXML.bind(this));\r\n    request.send();\r\n  }\r\n  #xmlTagToCreateElementArguments(xmlTag) {\r\n    if (xmlTag.slice(0, 2) === \"p-\") return [xmlTag];\r\n    if (xmlTag === \"canvas\") return [xmlTag, { is: \"p-canvas\" }];\r\n    if (xmlTag === \"canvas-3d\") return [\"canvas\", { is: \"p-canvas-3d\" }];\r\n    return [\"p-\" + xmlTag];\r\n  }\r\n}\r\ncustomElements.define(\"p-sketch\", Sketch, { extends: \"link\" });\r\n/**\r\n * The ```<custom>``` element generates a new element from a combination of existing\r\n * elements. This element should be placed outside the ```<canvas>``` element.\r\n * The name attribute defines the name of the new element. For\r\n * example, if name is set to \"my-element,\" you can add ```<my-element>``` to your sketch.\r\n * @element custom\r\n * @example Clouds\r\n * ```html\r\n * <_>\r\n *  <custom name=\"cloud\" attributes=\"center_x, center_y\" stroke=\"NONE\">\r\n *      <_ anchor=\"center_x, center_y\" d=\"40\">\r\n *          <circle x=\"-20\" y=\"-10\" fill_color=\"220\"></circle>\r\n *          <circle x=\"20\" y=\"-10\" fill_color=\"210\"></circle>\r\n *          <circle x=\"-10\" y=\"-20\" fill_color=\"250\"></circle>\r\n *          <circle x=\"10\" y=\"-20\" fill_color=\"210\"></circle>\r\n *          <circle x=\"0\" y=\"0\" fill_color=\"180\"></circle>\r\n *          <circle x=\"20\" y=\"0\" fill_color=\"200\"></circle>\r\n *          <circle x=\"-20\" y=\"0\" fill_color=\"240\"></circle>\r\n *          <circle x=\"0\" y=\"-5\" fill_color=\"235\"></circle>\r\n *      </_>\r\n *  </custom>\r\n *  <canvas\r\n *      width=\"400\"\r\n *      height=\"400\"\r\n *      background=\"100, 140, 200\"\r\n *      cloud_x=\"0\"\r\n *  >\r\n *      <cloud\r\n *          center_y=\"75\"\r\n *          center_x=\"cloud_x - 40 - width * 0.25\"\r\n *          change=\"center_x: center_x + width * 0.25\"\r\n *          repeat=\"WHILE center_x LESS_THAN width * 1.25\"\r\n *      ></cloud>\r\n *      <_ cloud_x=\"cloud_x + 0.25\">\r\n *          <_ on=\"cloud_x GREATER_THAN width * 0.25\" cloud_x=\"0\"></_>\r\n *      </_>\r\n *  </canvas>\r\n * </_>\r\n * ```\r\n */\r\nclass Custom extends P5Element {\r\n  constructor() {\r\n    super();\r\n    if (this.attributes.length) this.define(this);\r\n  }\r\n  /**\r\n   * Defines the custom element created by this element.\r\n   */\r\n  define() {\r\n    const pCustomEl = this;\r\n    const name = pCustomEl.getAttribute(\"name\");\r\n    //  Trick custom-elements-manifest into ignoring this\r\n    customElements[\"define\"](\r\n      `p-${name}`,\r\n      class extends P5Element {\r\n        constructor() {\r\n          super();\r\n        }\r\n        /**\r\n         * Sets the default values for this element's attributes.\r\n         */\r\n        setDefaults() {\r\n          Array.from(pCustomEl.attributes).forEach(\r\n            (a) =>\r\n              this.hasAttribute(a.name) === false &&\r\n              this.setAttribute(a.name, a.value)\r\n          );\r\n          const childClones = Array.from(pCustomEl.children).map((child) =>\r\n            child.cloneNode(true)\r\n          );\r\n          this.prepend(...childClones);\r\n        }\r\n        renderToCanvas = null;\r\n      }\r\n    );\r\n  }\r\n}\r\ncustomElements.define(\"p-custom\", Custom);\r\n\r\nclass Asset extends HTMLElement {\r\n  static elementName = \"p-asset\";\r\n  constructor() {\r\n    super();\r\n  }\r\n  static loadFns = {\r\n    image: \"loadImage\",\r\n    font: \"loadFont\",\r\n    json: \"loadJSON\",\r\n    strings: \"loadStrings\",\r\n    table: \"loadTable\",\r\n    xml: \"loadXML\",\r\n    bytes: \"loadBytes\",\r\n    get: \"httpGet\",\r\n    shader: \"loadShader\",\r\n  };\r\n\r\n  async load(pInst) {\r\n    if (this.data) return this.data;\r\n    const loadFn = Asset.loadFns[this.getAttribute(\"type\").toLowerCase()];\r\n    const path = this.getAttribute(\"path\");\r\n    this.data = await pInst[loadFn](path);\r\n    return this.data;\r\n  }\r\n}\r\ncustomElements.define(\"p-asset\", Asset);\r\n","import { defineProperties } from \"../utils/p5Modifiers\";\n\ndefineProperties({\n  animate: {\n    get: function () {\n      return this.isLooping();\n    },\n    set: function (val) {\n      if (val) this.loop();\n      else this.noLoop();\n    },\n  },\n  remove_canvas: {\n    get: function () {\n      return false;\n    },\n    set: function () {\n      this.remove();\n    },\n  },\n});\n","import { defineSnakeAlias } from \"../utils/p5Modifiers\";\n\ndefineSnakeAlias(\n  \"selectAll\",\n  \"removeElements\",\n  \"createDiv\",\n  \"createP\",\n  \"createSpan\",\n  \"createImg\",\n  \"createA\",\n  \"createSlider\",\n  \"createButton\",\n  \"createCheckbox\",\n  \"createSelect\",\n  \"createRadio\",\n  \"createColorPicker\",\n  \"createInput\",\n  \"createFileInput\",\n  \"createVideo\",\n  \"createAudio\",\n  \"createCapture\",\n  \"createElement\"\n);\n","import { defineProperties, defineSnakeAlias } from \"../utils/p5Modifiers\";\n\ndefineSnakeAlias(\"createVector\");\n\ndefineProperties({\n  angle_mode: {\n    get: function () {\n      return this._angleMode;\n    },\n    set: function (mode) {\n      this._setProperty(\"_angleMode\", mode);\n    },\n  },\n  noise_detail: {\n    set: function () {\n      this.noiseDetail(...arguments);\n    },\n  },\n  noise_seed: {\n    set: function () {\n      this.noiseSeed(...arguments);\n    },\n  },\n  random_seed: {\n    get: function () {\n      return this._lcg_random_state;\n    },\n    set: function () {\n      this.randomSeed(...arguments);\n    },\n  },\n});\n","import { defineSnakeAlias } from \"../utils/p5Modifiers\";\n\ndefineSnakeAlias(\"createCanvas\", \"createGraphics\");\n","import { defineProperties, wrapMethod } from \"../utils/p5Modifiers\";\n\nconst defaultShear = p5.prototype.createVector();\nconst defaultScale = p5.prototype.createVector(1, 1, 1);\nconst wrap = function (renderer) {\n  function wrappedRenderer() {\n    renderer.apply(this, arguments);\n    this._scaleStack = [defaultScale.copy()];\n    this._shearStack = [defaultShear.copy()];\n  }\n  wrappedRenderer.prototype = Object.create(renderer.prototype);\n  return wrappedRenderer;\n};\np5.Renderer = wrap(p5.Renderer);\n\nwrapMethod(\n  \"push\",\n  (base) =>\n    function () {\n      this._renderer._scaleStack.push(defaultScale.copy());\n      this._renderer._shearStack.push(defaultShear.copy());\n      base.call(this);\n    }\n);\n\nwrapMethod(\n  \"pop\",\n  (base) =>\n    function () {\n      this._renderer._scaleStack.pop();\n      this._renderer._shearStack.pop();\n      base.call(this);\n    }\n);\n\np5.prototype.RESET = \"reset\";\n\ndefineProperties({\n  scale_factor: {\n    get: function () {\n      return this._renderer?._scaleStack.slice(-1)[0];\n    },\n    set: function (val) {\n      if (Array.isArray(val))\n        this._renderer._scaleStack[this._renderer._scaleStack.length - 1].set(\n          ...val\n        );\n      else\n        this._renderer._scaleStack[this._renderer._scaleStack.length - 1].set(\n          val,\n          val,\n          val\n        );\n      this.scale(this.scale_factor);\n    },\n  },\n  shear: {\n    get: function () {\n      return this._renderer?._shearStack.slice(-1)[0];\n    },\n    set: function (val) {\n      if (Array.isArray(val))\n        this._renderer._shearStack[this._renderer._shearStack.length - 1].set(\n          ...val\n        );\n      else\n        this._renderer._shearStack[this._renderer._shearStack.length - 1].set(\n          val\n        );\n      this.shearX(this.shear.x);\n      this.shearY(this.shear.y);\n    },\n  },\n  transform_matrix: {\n    get: function () {\n      if (this._renderer.isP3D) return this._renderer.uMVMatrix;\n      return this.drawingContext?.getTransform();\n    },\n    set: function (val) {\n      if (val === this.RESET) this.resetMatrix();\n      else this.applyMatrix(val);\n    },\n  },\n});\n\nconst identityMatrix = new DOMMatrix([\n  1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1,\n]);\n\np5.prototype._transform_point_matrix = function (originalPoint, transMatrix) {\n  const pixelDensityMatrix = new DOMMatrix(identityMatrix).scale(\n    this.pixel_density\n  );\n  const scaledMatrix = transMatrix.multiply(pixelDensityMatrix);\n  const transformedPoint = scaledMatrix.transformPoint(originalPoint);\n  return transformedPoint;\n};\n\np5.prototype.untransform_point = function (x, y, z) {\n  const originalPoint = new DOMPoint(x, y, z);\n  return this._transform_point_matrix(originalPoint, this.transform_matrix);\n};\n\np5.prototype.transform_point = function (x, y, z) {\n  const originalPoint = new DOMPoint(x, y, z);\n  return this._transform_point_matrix(\n    originalPoint,\n    this.transform_matrix.inverse()\n  );\n};\n","import {\n  defineProperties,\n  defineSnakeAlias,\n  wrapMethod,\n} from \"../utils/p5Modifiers\";\n\ndefineSnakeAlias(\"deviceOrientation\", \"turnAxis\", \"keyIsDown\");\n\n//  TODO - test on mobile device\np5.prototype.device_moved = false;\n\n//  TODO - test on mobile device\np5.prototype.device_turned = false;\n\np5.prototype.mouse_down = false;\n\np5.prototype.mouse_up = false;\n\np5.prototype.mouse_dragging = false;\n\np5.prototype.mouse_double_clicked = false;\n\np5.prototype._mouseWheel = 0;\n\np5.prototype.key_down = false;\n\np5.prototype.key_up = false;\n\n//  TODO - test on mobile device\np5.prototype.touch_started = false;\np5.prototype.touch_moved = false;\np5.prototype.touch_ended = false;\n\np5.prototype._startAngleZ;\nwrapMethod(\n  \"_handleMotion\",\n  (base) =>\n    function () {\n      base.call(this);\n      this._setProperty(\"deviced_moved\", true);\n    }\n);\n\nwrapMethod(\n  \"_onmousedown\",\n  (base) =>\n    function (e) {\n      base.call(this, e);\n      this._setProperty(\"mouse_down\", true);\n    }\n);\n\nwrapMethod(\n  \"_ondbclick\",\n  (base) =>\n    function (e) {\n      base.call(this, e);\n      this._setProperty(\"mouse_double_clicked\", true);\n    }\n);\n\nwrapMethod(\n  \"_onmousemove\",\n  (base) =>\n    function (e) {\n      base.call(this, e);\n      this._setProperty(\"mouse_dragging\", this.mouseIsPressed);\n      this._setProperty(\"touch_moved\", this.mouseIsPressed);\n    }\n);\n\nwrapMethod(\n  \"_onwheel\",\n  (base) =>\n    function (e) {\n      base.call(this, e);\n      this._setProperty(\"_mouseWheel\", this._mouseWheelDeltaY);\n    }\n);\n\nwrapMethod(\n  \"_onkeyup\",\n  (base) =>\n    function (e) {\n      base.call(this, e);\n      this._setProperty(\"key_up\", true);\n      this._setProperty(\"key_held\", false);\n    }\n);\n\nwrapMethod(\n  \"_onkeydown\",\n  (base) =>\n    function (e) {\n      base.call(this, e);\n      this._setProperty(\"key_down\", true);\n    }\n);\n\nwrapMethod(\n  \"_ontouchbase\",\n  (base) =>\n    function (e) {\n      base.call(this, e);\n      this._setProperty(\"touch_started\", true);\n    }\n);\n\nwrapMethod(\n  \"_ontouchmove\",\n  (base) =>\n    function (e) {\n      base.call(this, e);\n      this._setProperty(\"touch_moved\", true);\n    }\n);\n\nwrapMethod(\n  \"_ontouchend\",\n  (base) =>\n    function (e) {\n      base.call(this, e);\n      this._setProperty(\"touch_ended\", true);\n    }\n);\n\np5.prototype.registerMethod(\"pre\", function () {\n  this._setProperty(\n    \"mouse_up\",\n    this.mouseIsPressed == false && this.mouse_held == true\n  );\n  this._setProperty(\"mouse_held\", this.mouseIsPressed);\n  this._setProperty(\"key_held\", this.key_down);\n});\n\np5.prototype.registerMethod(\"post\", function () {\n  this._setProperty(\"device_moved\", false);\n  this._setProperty(\"mouse_down\", false);\n  this._setProperty(\"mouse_dragging\", false);\n  this._setProperty(\"mouse_double_clicked\", false);\n  this._setProperty(\"_mouseWheel\", false);\n  this._setProperty(\"key_up\", false);\n  this._setProperty(\"key_down\", false);\n  this._setProperty(\"touch_started\", false);\n  this._setProperty(\"touch_moved\", false);\n  this._setProperty(\"touch_ended\", false);\n});\n\n//  Create properties with default value\np5.prototype._moveThreshold = 0.5;\np5.prototype._shakeThreshold = 30;\n\ndefineProperties({\n  //  TODO - test on mobile device\n  device_acceleration: {\n    get: function () {\n      return this.createVector(\n        this.accelerationX,\n        this.accelerationY,\n        this.accelerationZ\n      );\n    },\n  },\n  //  TODO - test on mobile device\n  device_prev_acceleration: {\n    get: function () {\n      return this.createVector(\n        this.pAccelerationX,\n        this.pAccelerationY,\n        this.pAccelerationZ\n      );\n    },\n  },\n  //  TODO - test on mobile device\n  device_rotation: {\n    get: function () {\n      return this.createVector(this.rotationX, this.rotationY, this.rotationZ);\n    },\n  },\n  //  TODO - test on mobile device\n  device_prev_rotation: {\n    get: function () {\n      return this.createVector(\n        this.pRotationX,\n        this.pRotationY,\n        this.pRotationZ\n      );\n    },\n  },\n  //  TODO - test on mobile device\n  device_turned: {\n    get: function () {\n      if (\n        this.rotationX === null &&\n        this.rotationY === null &&\n        this.rotationZ === null\n      )\n        return false;\n      return (\n        this.rotationX !== this.pRotationX ||\n        this.rotationY !== this.pRotationY ||\n        this.rotationZ !== this.pRotationZ\n      );\n    },\n  },\n  first_frame: {\n    get: function () {\n      return this.frameCount === 1;\n    },\n  },\n  key_code: {\n    get: function () {\n      return this.keyCode;\n    },\n  },\n  mouse_button: {\n    get: function () {\n      return this.mouseButton;\n    },\n  },\n  mouse_pos: {\n    get: function () {\n      return this.createVector(this.mouseX, this.mouseY);\n    },\n  },\n  mouse_pos_x: {\n    get: function () {\n      return this.mouseX;\n    },\n  },\n  mouse_pos_y: {\n    get: function () {\n      return this.mouseY;\n    },\n  },\n  mouse_prev_pos: {\n    get: function () {\n      return this.createVector(this.pmouseX, this.pmouseY);\n    },\n  },\n  mouse_prev_pos_x: {\n    get: function () {\n      return this.pmouseX;\n    },\n  },\n  mouse_prev_pos_y: {\n    get: function () {\n      return this.pmouseY;\n    },\n  },\n  mouse_trans_pos: {\n    get: function () {\n      return this.transform_point(this.mouse_pos_x, this.mouse_pos_y);\n    },\n  },\n  mouse_trans_pos_x: {\n    get: function () {\n      return this.mouse_trans_pos.x;\n    },\n  },\n  mouse_trans_pos_y: {\n    get: function () {\n      return this.mouse_trans_pos.y;\n    },\n  },\n  mouse_wheel: {\n    get: function () {\n      return this._mouseWheel;\n    },\n  },\n  mouse_window_pos: {\n    get: function () {\n      return this.createVector(this.winMouseX, this.winMouseY);\n    },\n  },\n  mouse_window_pos_x: {\n    get: function () {\n      return this.winMouseX;\n    },\n  },\n  mouse_window_pos_y: {\n    get: function () {\n      return this.winMouseY;\n    },\n  },\n  mouse_prev_window_pos: {\n    get: function () {\n      return this.createVector(this.pwinMouseX, this.pwinMouseY);\n    },\n  },\n  mouse_window_prev_pos_x: {\n    get: function () {\n      return this.pwinMouseX;\n    },\n  },\n  mouse_window_prev_pos_y: {\n    get: function () {\n      return this.pwinMouseY;\n    },\n  },\n  move_threshold: {\n    get: function () {\n      return this._moveThreshold;\n    },\n    set: function (val) {\n      this.setMoveThreshold(val);\n    },\n  },\n  moved: {\n    get: function () {\n      return this.createVector(this.movedX, this.movedY);\n    },\n  },\n  moved_x: {\n    get: function () {\n      return this.movedX;\n    },\n  },\n  moved_y: {\n    get: function () {\n      return this.movedY;\n    },\n  },\n  pointer_lock_request: {\n    get: function () {\n      return document.pointerLockElement === this._curElement.elt;\n    },\n    set: function (val) {\n      if (val) this.requestPointerLock();\n      else this.exitPointerLock();\n    },\n  },\n  shake_threshold: {\n    get: function () {\n      return this._shakeThreshold;\n    },\n    set: function (val) {\n      this.setShakeThreshold(val);\n    },\n  },\n});\n","import { defineRendererGetterSetters } from \"../utils/p5Modifiers\";\nimport { RenderedElement } from \"../core\";\nimport { addWidthHeight, addXY } from \"../properties/shape_props\";\n\n/**\n * Draw an image to the canvas.\n *\n * This element can be used with different numbers of attributes. The\n * simplest use requires only three attributes: img, x, and y—where (x, y) is\n * the position of the image. Two more attributes can optionally be added to\n * specify the width and height of the image.\n *\n * This element can also be used with eight Number attributes. To\n * differentiate between all these attributes, p5.js uses the language of\n * \"destination rectangle\" (which corresponds to \"dx\", \"dy\", etc.) and \"source\n * image\" (which corresponds to \"sx\", \"sy\", etc.) below. Specifying the\n * \"source image\" dimensions can be useful when you want to display a\n * subsection of the source image instead of the whole thing.\n *\n * This element can also be used to draw images without distorting the original aspect ratio,\n * by adding 9th attribute, fit, which can either be COVER or CONTAIN.\n * CONTAIN, as the name suggests, contains the whole image within the specified destination box\n * without distorting the image ratio.\n * COVER covers the entire destination box.\n *\n *\n *\n * @element image\n * @attribute  {p5.Image|p5.Element|p5.Texture} img    the image to display\n * @attribute  {p5.Image|p5.Element|p5.Texture} img\n * @attribute  {Number}   dx     the x-coordinate of the destination\n *                           rectangle in which to draw the source image\n * @attribute  {Number}   dy     the y-coordinate of the destination\n *                           rectangle in which to draw the source image\n * @attribute  {Number}   dWidth  the width of the destination rectangle\n * @attribute  {Number}   dHeight the height of the destination rectangle\n * @attribute  {Number}   sx     the x-coordinate of the subsection of the source\n * image to draw into the destination rectangle\n * @attribute  {Number}   sy     the y-coordinate of the subsection of the source\n * image to draw into the destination rectangle\n * @attribute {Number}    [sWidth] the width of the subsection of the\n *                           source image to draw into the destination\n *                           rectangle\n * @attribute {Number}    [sHeight] the height of the subsection of the\n *                            source image to draw into the destination rectangle\n * @attribute {Constant} [fit] either CONTAIN or COVER\n * @attribute {Constant} [xAlign] either LEFT, RIGHT or CENTER default is CENTER\n * @attribute {Constant} [yAlign] either TOP, BOTTOM or CENTER default is CENTER\n */\nclass Image extends addXY(addWidthHeight(RenderedElement)) {\n  static overloads = [\n    \"img, x, y, [width], [height]\",\n    \"img, dx, dy, dWidth, dHeight, sx, sy, [sWidth], [sHeight]\",\n  ];\n  /**\n   * Sets the fill value for displaying images. Images can be tinted to\n   * specified colors or made transparent by including an alpha value.\n   *\n   * To apply transparency to an image without affecting its color, use\n   * white as the tint color and specify an alpha value. For instance,\n   * tint(255, 128) will make an image 50% transparent (assuming the default\n   * alpha range of 0-255, which can be changed with color_mode.\n   *\n   * The value for the gray parameter must be less than or equal to the current\n   * maximum value as specified by color_mode. The default maximum value is\n   * 255.\n   *\n   * @type {p5.Color}\n   */\n  get tint() {\n    return this.pInst.color(this.pInst._renderer._tint);\n  }\n  set tint(val) {\n    if (val === this.pInst.NONE) this.pInst.noTint();\n    else this.pInst.tint(...arguments);\n  }\n}\ncustomElements.define(\"p-image\", Image);\n\ndefineRendererGetterSetters(\"imageMode\");\n","import { defineProperties, defineSnakeAlias } from \"../utils/p5Modifiers\";\n\ndefineSnakeAlias(\"createWriter\");\n\ndefineProperties({\n  http_post: {\n    set: function () {\n      this.httpPost(...arguments);\n    },\n  },\n  http_do: {\n    set: function () {\n      this.httpDo(...arguments);\n    },\n  },\n  save_file: {\n    set: function () {\n      this.save(...arguments);\n    },\n  },\n  save_json_file: {\n    set: function () {\n      this.saveJSON(...arguments);\n    },\n  },\n  save_strings_file: {\n    set: function () {\n      this.saveStrings(...arguments);\n    },\n  },\n  save_table_file: {\n    set: function () {\n      this.saveTable(...arguments);\n    },\n  },\n});\n","import {\n  defineRendererGetterSetters,\n  defineSnakeAlias,\n} from \"../utils/p5Modifiers\";\nimport { RenderedElement } from \"../core\";\nimport { addFillStroke } from \"../properties/color_props\";\n\ndefineRendererGetterSetters(\n  \"textAlign\",\n  \"textLeading\",\n  \"textSize\",\n  \"textStyle\",\n  \"textWrap\",\n  \"textFont\"\n);\n\ndefineSnakeAlias(\"textAscent\", \"textDescent\");\n\nclass Text extends addFillStroke(RenderedElement) {\n  static overloads = [\"content, x, y, [x2], [y2]\"];\n}\ncustomElements.define(\"p-text\", Text);\n","import { RenderedElement } from \"../core\";\r\nimport {\r\n  addXYZ,\r\n  addWidthHeight,\r\n  addXY,\r\n  addCurveTightness,\r\n  addXYZ1,\r\n  addXYZ2,\r\n  addXYZ3,\r\n  addXYZ4,\r\n} from \"../properties/shape_props\";\r\nimport { addFillStroke, addStroke } from \"../properties/color_props\";\r\nimport { add3DProps } from \"../properties/3d_props\";\r\nimport {\r\n  addArcProps,\r\n  addDiameter,\r\n  addShapeElementProps,\r\n} from \"./2d_shape_elements\";\r\nimport { addBezierMethods, addCurveMethods } from \"../methods/shape_methods\";\r\nimport { add3DTransformProps } from \"../properties/transform_props\";\r\n\r\nclass WebGLGeometry extends addFillStroke(\r\n  add3DTransformProps(add3DProps(RenderedElement))\r\n) {}\r\n\r\nclass Normal extends addXYZ(RenderedElement) {\r\n  static overloads = [\"vector\", \"x, y, z\"];\r\n}\r\ncustomElements.define(\"p-normal\", Normal);\r\n\r\nclass Plane extends addWidthHeight(WebGLGeometry) {\r\n  static overloads = \"[width], [height], [detail_x], [detail_y]\";\r\n}\r\ncustomElements.define(\"p-plane\", Plane);\r\n\r\nclass Box extends addWidthHeight(WebGLGeometry) {\r\n  static overloads = [\"[width], [height], [depth], [detail_x], [detail_y]\"];\r\n}\r\ncustomElements.define(\"p-box\", Box);\r\n\r\nclass Sphere extends WebGLGeometry {\r\n  static overloads = [\"[radius], [detail_x], [detail_y]\"];\r\n}\r\ncustomElements.define(\"p-sphere\", Sphere);\r\n\r\nclass Cylinder extends WebGLGeometry {\r\n  static overloads = [\r\n    \"[radius], [height], [detail_x], [detail_y], [bottomCap], [topCap]\",\r\n  ];\r\n}\r\ncustomElements.define(\"p-cylinder\", Cylinder);\r\n\r\nclass Cone extends WebGLGeometry {\r\n  static overloads = [\"[radius], [height], [detail_x], [detail_y], [cap]\"];\r\n}\r\ncustomElements.define(\"p-cone\", Cone);\r\n\r\nclass Ellipsoid extends WebGLGeometry {\r\n  static overloads = [\r\n    \"[radius_x], [radius_y], [radius_z], [detail_x], [detail_y]\",\r\n  ];\r\n}\r\ncustomElements.define(\"p-ellipsoid\", Ellipsoid);\r\n\r\nclass Torus extends WebGLGeometry {\r\n  static overloads = [\"[radius], [tubeRadius], [detailX], [detailY]\"];\r\n}\r\ncustomElements.define(\"p-torus\", Torus);\r\n\r\n//  TODO - test when preload implemented\r\nclass LoadModel extends RenderedElement {\r\n  static overloads = [\r\n    \"path, normalize, [successCallback], [failureCallback], [fileType]\",\r\n    \"path, [successCallback], [failureCallback], [fileType]\",\r\n  ];\r\n}\r\ncustomElements.define(\"p-load-model\", LoadModel);\r\n\r\nclass Model extends WebGLGeometry {\r\n  static overloads = [\"model\"];\r\n}\r\ncustomElements.define(\"p-model\", Model);\r\n\r\nconst remove3DFromRenderFunctionName = (baseClass) =>\r\n  class extends baseClass {\r\n    constructor() {\r\n      super();\r\n      this.renderFunctionName = this.renderFunctionName.slice(0, -2);\r\n    }\r\n  };\r\n\r\nconst addDetail = (baseClass) =>\r\n  class extends baseClass {\r\n    #detail = 25;\r\n    /**\r\n     * specifies the number of vertices that makes up the perimeter of the shape.\r\n     * Default value is 25. Won't draw a stroke for a detail of more than 50.\r\n     * @type {Integer}\r\n     */\r\n    get detail() {\r\n      return this.#detail;\r\n    }\r\n    set detail(val) {\r\n      this.#detail = val;\r\n    }\r\n  };\r\nconst addDetailXY = (baseClass) =>\r\n  class extends baseClass {\r\n    #detail_x = 2;\r\n    #detail_y = 2;\r\n    /**\r\n     * number of segments in the x-direction\r\n     * @type {Integer}\r\n     */\r\n    get detail_x() {\r\n      return this.#detail_x;\r\n    }\r\n    set detail_x(val) {\r\n      this.#detail_x = val;\r\n    }\r\n    /**\r\n     * number of segments in the y-direction\r\n     * @type {Integer}\r\n     */\r\n    get detail_y() {\r\n      return this.#detail_y;\r\n    }\r\n    set detail_y(val) {\r\n      this.#detail_y = val;\r\n    }\r\n  };\r\n/**\r\n * Draws an arc onto a ```<canvas-3d>```.\r\n * The origin may be changed with the ellipse_mode property.\r\n *\r\n * The arc is always drawn clockwise from wherever start falls to wherever\r\n * stop falls on the ellipse. Adding or subtracting TWO_PI to either angle\r\n * does not change where they fall. If both start and stop fall at the same\r\n * place, a full ellipse will be drawn. Be aware that the y-axis increases in\r\n * the downward direction, therefore angles are measured clockwise from the\r\n * positive x-direction (\"3 o'clock\").\r\n * @element arc-3d\r\n */\r\nclass Arc3D extends remove3DFromRenderFunctionName(\r\n  addXY(addArcProps(addDetail(add3DProps(RenderedElement))))\r\n) {\r\n  static overloads = [\r\n    \"x, y, width, height, start_angle, stop_angle, [mode], [detail]\",\r\n  ];\r\n}\r\ncustomElements.define(\"p-arc-3d\", Arc3D);\r\n\r\nclass Base2DTo3D extends add3DTransformProps(add3DProps(RenderedElement)) {}\r\n/**\r\n * Draws an ellipse (oval) onto a ```<canvas-3d>```. If no height is specified, the\r\n * value of width is used for both the width and height. If a\r\n * negative height or width is specified, the absolute value is taken.\r\n *\r\n * An ellipse with equal width and height is a circle. The origin may be\r\n * changed with the ellipseMode() function.\r\n * @element ellipse-3d\r\n */\r\nclass Ellipse3D extends remove3DFromRenderFunctionName(\r\n  addXY(addWidthHeight(addFillStroke(Base2DTo3D)))\r\n) {\r\n  static overloads = [\"x, y, width, [height], [detail]\"];\r\n}\r\ncustomElements.define(\"p-ellipse-3d\", Ellipse3D);\r\n\r\n/**\r\n * Draws a circle onto a ```<canvas-3d>```. A circle is a simple closed shape. It is the\r\n * set of all points in a plane that are at a given distance from a given\r\n * point, the center.\r\n * @element circle\r\n */\r\nclass Circle3D extends remove3DFromRenderFunctionName(\r\n  addXY(addDiameter(addFillStroke(Base2DTo3D)))\r\n) {\r\n  static overloads = [\"x, y, diameter\"];\r\n}\r\ncustomElements.define(\"p-circle-3d\", Circle3D);\r\n\r\n/**\r\n * Draws a line (a direct path between two points) onto a ```<canvas-3d>```. Its width\r\n * can be modified by using the stroke_weight property. A line cannot be\r\n * filled, therefore the fill_color property will not affect the color of a\r\n * line. So to color a line, use the stroke property.\r\n * @element line-3d\r\n */\r\nclass Line3D extends remove3DFromRenderFunctionName(\r\n  addXYZ1(addXYZ2(addStroke(Base2DTo3D)))\r\n) {\r\n  static overloads = [\"x1, y1, z1, x2, y2, z2\"];\r\n}\r\ncustomElements.define(\"p-line-3d\", Line3D);\r\n\r\n/**\r\n * Draws a point, a coordinate in space at the dimension of one pixel onto a ```<canvas-3d>```.\r\n * The color of the point is changed with the stroke property. The size of\r\n * the point can be changed with the stroke_weight property.\r\n * @element point\r\n */\r\nclass Point3D extends remove3DFromRenderFunctionName(\r\n  addXYZ(addStroke(Base2DTo3D))\r\n) {\r\n  static overloads = [\"x, y, z\"];\r\n}\r\ncustomElements.define(\"p-point-3d\", Point3D);\r\n\r\n/**\r\n * Draws a quad onto a ```<canvas-3d>```. A quad is a quadrilateral, a four-sided\r\n * polygon. It is similar to a rectangle, but the angles between its edges\r\n * are not constrained to ninety degrees. The x1 and y1 properties set the\r\n * first vertex and the subsequent pairs should proceed clockwise or\r\n * counter-clockwise around the defined shape.\r\n * @element quad\r\n */\r\nclass Quad3D extends remove3DFromRenderFunctionName(\r\n  addXYZ1(addXYZ2(addXYZ3(addXYZ4(addDetailXY(addFillStroke(Base2DTo3D))))))\r\n) {\r\n  static overloads = [\r\n    \"x1, y1, z1, x2, y2, z2, x3, y3, z3, x4, y4, z4, [detail_x], [detail_y]\",\r\n  ];\r\n}\r\ncustomElements.define(\"p-quad-3d\", Quad3D);\r\n/**\r\n * Draws a rectangle onto a ```<canvas-3d>```. A rectangle is a four-sided closed shape\r\n * with every angle at ninety degrees. By default, the x and y properties\r\n * set the location of the upper-left corner, w sets the width, and h sets\r\n * the height. The way these properties are interpreted may be changed with\r\n * the rect_mode property.\r\n * @element rect\r\n */\r\nclass Rect3D extends remove3DFromRenderFunctionName(\r\n  addXY(addWidthHeight(addFillStroke(Base2DTo3D)))\r\n) {\r\n  static overloads = [\r\n    \"x, y, width, [height], [top_left_radius], [top_right_radius], [bottom_right_radius], [bottom_left_radius]\",\r\n  ];\r\n}\r\ncustomElements.define(\"p-rect-3d\", Rect3D);\r\n\r\n/**\r\n * Draws a triangle onto a ```<canvas-3d>```. A triangle is a plane created by connecting\r\n * three points. x1 and y1 specify the first point, x2 and y2 specify the\r\n * second point, and x3 and y3 specify the\r\n * third point.\r\n * @element triangle\r\n */\r\nclass Triangle3D extends remove3DFromRenderFunctionName(\r\n  addXYZ1(addXYZ2(addXYZ3(addFillStroke(Base2DTo3D))))\r\n) {\r\n  static overloads = [\"x1, y1, z1, x2, y2, z2, x3, y3, z3\"];\r\n}\r\ncustomElements.define(\"p-triangle-3d\", Triangle3D);\r\n\r\n/**\r\n * Draws a cubic Bezier curve onto a ```<canvas-3d>```. These curves are defined by a\r\n * series of anchor and control points. x1 and y1 specify\r\n * the first anchor point and x4 and y4 specify the other\r\n * anchor point, which become the first and last points on the curve. (x2, y2)\r\n * and (x3, y3) specify the two control points which define the shape\r\n * of the curve. Approximately speaking, control points \"pull\" the curve\r\n * towards them.\r\n *\r\n * Bezier curves were developed by French automotive engineer Pierre Bezier,\r\n * and are commonly used in computer graphics to define gently sloping curves.\r\n * @element bezier-3d\r\n */\r\nclass Bezier3D extends remove3DFromRenderFunctionName(\r\n  addXYZ1(\r\n    addXYZ2(\r\n      addXYZ3(\r\n        addXYZ4(addFillStroke(add3DProps(addBezierMethods(RenderedElement))))\r\n      )\r\n    )\r\n  )\r\n) {\r\n  static overloads = [\"x1, y1, z1, x2, y2, z2, x3, y3, z3, x4, y4, z4\"];\r\n}\r\ncustomElements.define(\"p-bezier-3d\", Bezier3D);\r\n\r\n/**\r\n * Draws a curved line onto a ```<canvas-3d>``` between two points,\r\n * given as (x2, y2) and (x3, y3).\r\n * (x1, y1) is a control point, as\r\n * if the curve came from this point even though it's not drawn. (x4, y4) similarly describes\r\n * the other control point.\r\n *\r\n * Longer curves can be created by putting a series of ```<curve-3d>``` elements\r\n * together or using ```<curve-vertex>```. The curve_tightness property provides control\r\n * for the visual quality of the curve.\r\n * The ```<curve>``` element is an implementation of Catmull-Rom splines.\r\n * @element curve\r\n */\r\nclass Curve3D extends remove3DFromRenderFunctionName(\r\n  addXYZ1(\r\n    addXYZ2(\r\n      addXYZ3(\r\n        addXYZ4(\r\n          addCurveTightness(\r\n            addFillStroke(add3DProps(addCurveMethods(RenderedElement)))\r\n          )\r\n        )\r\n      )\r\n    )\r\n  )\r\n) {\r\n  static overloads = [\"x1, y1, z1, x2, y2, z2, x3, y3, z3, x4, y4, z4\"];\r\n}\r\ncustomElements.define(\"p-curve-3d\", Curve3D);\r\n/**\r\n * Use the ```<contour-3d>``` element to create negative shapes\r\n * within a ```<shape-3d>``` element such as the center of the letter 'O'.\r\n * The vertices of the ```<contour-3d>``` are defined by its\r\n * ```<vertex-3d>``` and ```<curve-vertex-3d>``` children.\r\n * The vertices that define a negative shape must \"wind\" in the opposite direction\r\n * from the exterior shape. First draw vertices for the exterior clockwise order, then for internal shapes, draw vertices\r\n * shape in counter-clockwise.\r\n *\r\n * This element must be a child of a ```<shape-3d>```.\r\n * @element contour\r\n */\r\nclass Contour3D extends remove3DFromRenderFunctionName(\r\n  addFillStroke(add3DProps(RenderedElement))\r\n) {\r\n  renderFunctionName = \"beginContour\";\r\n  endRender() {\r\n    this.pInst.endContour();\r\n  }\r\n}\r\ncustomElements.define(\"p-contour-3d\", Contour3D);\r\n/**\r\n * Using the ```<shape-3d>``` element allow creating more\r\n * complex forms on a ```<canvas-3d>```.\r\n * The vertices of the shape are defined by its ```<vertex-3d>```,\r\n * ```<curve-vertex-3d>```, and/or ```<quadratic-vertex-3d>``` children.\r\n * The value of the kind property tells it which\r\n * types of shapes to create from the provided vertices. With no mode\r\n * specified, the shape can be any irregular polygon.\r\n *\r\n *\r\n * Transformations such as translate, angle, and scale do not work on children on ```<shape-3d>```.\r\n * It is also not possible to use other shapes, such as\r\n * ```<ellipse-3d>``` or ```<rect-3d>``` as children of ```<shape-3d>```.\r\n * @element shape-3d\r\n */\r\nclass Shape3D extends addShapeElementProps(addFillStroke(Base2DTo3D)) {}\r\ncustomElements.define(\"p-shape-3d\", Shape3D);\r\n\r\nconst addUV = (baseClass) =>\r\n  class extends baseClass {\r\n    #u;\r\n    #v;\r\n    /**\r\n     * the vertex's texture u-coordinate\r\n     * @type {number}\r\n     */\r\n    get u() {\r\n      return this.#u;\r\n    }\r\n    set u(val) {\r\n      this.#u = val;\r\n    }\r\n    /**\r\n     * the vertex's texture v-coordinate\r\n     * @type {number}\r\n     */\r\n    get v() {\r\n      return this.#v;\r\n    }\r\n    set v(val) {\r\n      this.#v = val;\r\n    }\r\n  };\r\n/**\r\n * All shapes are constructed by connecting a series of vertices. ```<vertex-3d>```\r\n * is used to specify the vertex coordinates for shapes on a ```<canvas-3d>```.\r\n * It is used exclusively as a child of the ```<shape-3d>``` element.\r\n * @element vertex\r\n */\r\nclass Vertex3D extends addXYZ(addUV(RenderedElement)) {\r\n  static overloads = [\"x, y, z, [u], [v]\"];\r\n}\r\ncustomElements.define(\"p-vertex-3d\", Vertex3D);\r\n/**\r\n * Specifies vertex coordinates for quadratic Bezier curves on a ```<canvas-3d>```.\r\n * Each ```<quadratic-vertex-3d>```\r\n * defines the position of one control points and one\r\n * anchor point of a Bezier curve, adding a new segment to a line or shape.\r\n * The first ```<quadratic-vertex-3d>``` child of a ```<shape>``` element\r\n * must have a ```<vertex-3d>``` sibling above it to set the first anchor point.\r\n *\r\n * This element must be a child of a ```<shape-3d>``` element\r\n * and only when there is no MODE or POINTS property specified on the\r\n *  ```<shape-3d>```.\r\n */\r\n\r\nclass QuadraticVertex3D extends addXYZ3(RenderedElement) {\r\n  static overloads = [\"cx, cy, cz, x3, y3, z3\"];\r\n}\r\ncustomElements.define(\"p-quadratic-vertex-3d\", QuadraticVertex3D);\r\n\r\n/**\r\n * Specifies vertex coordinates for curves. This function may only\r\n * be used as a child of the ```<shape-3d>``` element and only when there\r\n * is no MODE property specified on the ```<shape-3d>``.\r\n *\r\n * The first and last points in a series of ```<curve-vertex-3d>``` lines\r\n * will be used to\r\n * guide the beginning and end of the curve. A minimum of four\r\n * points is required to draw a tiny curve between the second and\r\n * third points. Adding a fifth point with ```<curve-vertex>``` will draw\r\n * the curve between the second, third, and fourth points. The\r\n * ```<curve-vertex>``` element is an implementation of Catmull-Rom\r\n * splines.\r\n */\r\nclass CurveVertex3D extends remove3DFromRenderFunctionName(\r\n  addXYZ(addCurveTightness(addFillStroke(add3DProps(RenderedElement))))\r\n) {\r\n  static overloads = [\"x, y, z\"];\r\n}\r\ncustomElements.define(\"p-curve-vertex-3d\", CurveVertex3D);\r\n","import { RenderedElement } from \"../core\";\r\nimport { addFillStroke } from \"../properties/color_props\";\r\n\r\np5.prototype.DEFAULT = \"default\";\r\np5.prototype.AMBIENT = \"ambient\";\r\np5.prototype.SPECULAR = \"specular\";\r\np5.prototype.EMISSIVE = \"emissive\";\r\n\r\nexport const add3DProps = (baseClass) =>\r\n  class extends baseClass {\r\n    #ambient_material;\r\n    #emissive_material;\r\n    #shininess;\r\n    #specular_material;\r\n    #no_lights;\r\n    /**\r\n     * Sets the ambient color of the material.\r\n     *\r\n     * The ambient_material color is the color the object will reflect\r\n     * under **any** lighting.\r\n     *\r\n     * Consider an ambient_material with the color yellow (255, 255, 0).\r\n     * If the light emits the color white (255, 255, 255), then the object\r\n     * will appear yellow as it will reflect the red and green components\r\n     * of the light. If the light emits the color red (255, 0, 0), then\r\n     * the object will appear red as it will reflect the red component\r\n     * of the light. If the light emits the color blue (0, 0, 255),\r\n     * then the object will appear black, as there is no component of\r\n     * the light that it can reflect.\r\n     * @type {p5.Color}\r\n     */\r\n    get ambient_material() {\r\n      return this.#ambient_material;\r\n    }\r\n    set ambient_material(val) {\r\n      if (Array.isArray(val)) this.pInst.ambientMaterial(...val);\r\n      else this.pInst.ambientMaterial(val);\r\n      this.#ambient_material = this.pInst.color(val);\r\n    }\r\n    /**\r\n     * Sets the emissive color of the material.\r\n     *\r\n     * An emissive material will display the emissive color at\r\n     * full strength regardless of lighting. This can give the\r\n     * appearance that the object is glowing.\r\n     *\r\n     * Note, \"emissive\" is a misnomer in the sense that the material\r\n     * does not actually emit light that will affect surrounding objects.\r\n     *\r\n     * @type {p5.Color}\r\n     */\r\n    get emissive_material() {\r\n      return this.#emissive_material;\r\n    }\r\n    set emissive_material(val) {\r\n      if (Array.isArray(val)) this.pInst.emissiveMaterial(...val);\r\n      else this.pInst.emissiveMaterial(val);\r\n      this.#ambient_material = this.pInst.color(val);\r\n    }\r\n    /**\r\n     * Sets the current material as a normal material.\r\n     *\r\n     * A normal material is not affected by light. It is often used as\r\n     * a placeholder material when debugging.\r\n     *\r\n     * Surfaces facing the X-axis become red, those facing the Y-axis\r\n     * become green, and those facing the Z-axis become blue.\r\n     *\r\n     * @type {boolean}\r\n     */\r\n    get normal_material() {\r\n      return this.pInst._renderer.useNormalMaterial;\r\n    }\r\n    set normal_material(val) {\r\n      if (val) this.pInst.normalMaterial();\r\n    }\r\n    /**\r\n     * Sets the <a href=\"#/p5.Shader\">p5.Shader</a> object to\r\n     * be used to render subsequent shapes.\r\n     *\r\n     * Custom shaders can be created using the\r\n     * create_shader() method and\r\n     * ```<shader>``` element.\r\n     *\r\n     * Set shader=\"DEFAULT\" to restore the default shaders.\r\n     *\r\n     * Note, shaders can only be used in WEBGL mode.\r\n     * @type {p5.Shader}\r\n     */\r\n    get shader() {\r\n      return [\r\n        this.pInst._renderer.userStrokeShader,\r\n        this.pInst._renderer.userFillShader,\r\n      ];\r\n    }\r\n    set shader(val) {\r\n      const { pInst } = this;\r\n      if (val === pInst.DEFAULT) pInst.resetShader();\r\n      else pInst.shader(val);\r\n    }\r\n    /**\r\n     * Sets the amount of gloss (\"shininess\") of a\r\n     * specular_material.\r\n     *\r\n     * The default and minimum value is 1.\r\n     * @type {number}\r\n     * */\r\n    get shininess() {\r\n      return this.#shininess;\r\n    }\r\n    set shininess(val) {\r\n      this.pInst.shininess(val);\r\n      this.#shininess = val;\r\n    }\r\n    /**\r\n     * Sets the specular color of the material.\r\n     *\r\n     * A specular material is reflective (shiny). The shininess can be\r\n     * controlled by the shininess property.\r\n     *\r\n     * Like ambient_material,\r\n     * the specular_material color is the color the object will reflect\r\n     * under ```<ambient-light>```.\r\n     * However unlike ambient_material, for all other types of lights\r\n     * ```<directional-light>```,\r\n     * ```<point-light>```,\r\n     * ```spot-light>```,\r\n     * a specular material will reflect the **color of the light source**.\r\n     * This is what gives it its \"shiny\" appearance.\r\n     *\r\n     * @type {p5.Color}\r\n     */\r\n    get specular_material() {\r\n      return this.#specular_material;\r\n    }\r\n    set specular_material(val) {\r\n      if (Array.isArray(val)) this.pInst.specularMaterial(...val);\r\n      else this.pInst.specularMaterial(val);\r\n      this.#specular_material = this.pInst.color(val);\r\n    }\r\n    /**\r\n     * Sets the texture that will be used to render subsequent shapes.\r\n     *\r\n     * A texture is like a \"skin\" that wraps around a 3D geometry. Currently\r\n     * supported textures are images, video, and offscreen renders.\r\n     *\r\n     * To texture a geometry created by a ```<shape>``` element,\r\n     * you will need to specify uv coordinates in ```<vertex>``` element.\r\n     *\r\n     * Note, texture can only be used in WEBGL mode.\r\n     *\r\n     * @type {p5.Image|p5.MediaElement|p5.Graphics|p5.Texture}\r\n     */\r\n    get texture() {\r\n      return this.pInst._renderer._tex;\r\n    }\r\n    set texture(val) {\r\n      this.pInst.texture(val);\r\n    }\r\n    /**\r\n     * Sets the coordinate space for texture mapping. The default mode is IMAGE\r\n     * which refers to the actual coordinates of the image.\r\n     * NORMAL refers to a normalized space of values ranging from 0 to 1.\r\n     *\r\n     * With IMAGE, if an image is 100×200 pixels, mapping the image onto the\r\n     * entire\r\n     * size of a quad would require the points (0,0) (100, 0) (100,200) (0,200).\r\n     * The same mapping in NORMAL is (0,0) (1,0) (1,1) (0,1).\r\n     *\r\n     * @type {IMAGE|NORMAL}\r\n     */\r\n    get texture_mode() {\r\n      return this.pInst._renderer.textureMode;\r\n    }\r\n    set texture_mode(val) {\r\n      this.pInst.textureMode(val);\r\n    }\r\n    /**\r\n     * Sets the global texture wrapping mode. This controls how textures behave\r\n     * when their uv's go outside of the 0 to 1 range. There are three options:\r\n     * CLAMP, REPEAT, and MIRROR.\r\n     *\r\n     * CLAMP causes the pixels at the edge of the texture to extend to the bounds.\r\n     * REPEAT causes the texture to tile repeatedly until reaching the bounds.\r\n     * MIRROR works similarly to REPEAT but it flips the texture with every new tile.\r\n     *\r\n     * REPEAT & MIRROR are only available if the texture\r\n     * is a power of two size (128, 256, 512, 1024, etc.).\r\n     *\r\n     * This method will affect all textures in your sketch until another element\r\n     * sets texture_mode.\r\n     *\r\n     * If only one value is provided, it will be applied to both the\r\n     * horizontal and vertical axes.\r\n     * @type {[CLAMP|REPEAT|MIRROR, CLAMP|REPEAT|MIRROR]}\r\n     */\r\n    get texture_wrap() {\r\n      return [\r\n        this.pInst._renderer.textureWrapX,\r\n        this.pInst._renderer.textureWrapY,\r\n      ];\r\n    }\r\n    set texture_wrap(val) {\r\n      if (Array.isArray(val)) this.pInst.textureWrap(...val);\r\n      else this.pInst.textureWrap(val);\r\n    }\r\n    /**\r\n     * Removes all lights present in a sketch.\r\n     *\r\n     * All subsequent geometry is rendered without lighting (until a new\r\n     * light is created with a lighting element (\r\n     * ```<lights>```,\r\n     * ```<ambient-light>```,\r\n     * ```<directional-light>```,\r\n     * ```<point-light>```,\r\n     * ```<spot-light>```).\r\n     * @type {boolean}\r\n     */\r\n    get no_lights() {\r\n      return this.#no_lights;\r\n    }\r\n    set no_lights(val) {\r\n      this.#no_lights = val;\r\n      if (val == true) this.pInst.noLights();\r\n    }\r\n  };\r\n\r\nexport class WebGLLight extends RenderedElement {\r\n  draw(inherited) {\r\n    //  Set no_lights to false so that children won't delete this light\r\n    super.draw({ ...inherited, ...{ no_lights: false } });\r\n  }\r\n}\r\n\r\nexport const addSpecularColor = (baseClass) =>\r\n  class extends baseClass {\r\n    #specular_color;\r\n    /**\r\n     * Sets the color of the specular highlight of a non-ambient light\r\n     * (i.e. all lights except ```<ambient-light>```).\r\n     *\r\n     * specular_color affects only the lights which are created by\r\n     * this element or its children\r\n     *\r\n     * This property is used in combination with\r\n     * <a href=\"#/p5/specularMaterial\">specularMaterial()</a>.\r\n     * If a geometry does not use specular_material, this property\r\n     * will have no effect.\r\n     *\r\n     * The default color is white (255, 255, 255), which is used if\r\n     * specular_color is not explicitly set.\r\n     *\r\n     * Note: specular_color is equivalent to the Processing function\r\n     * <a href=\"https://processing.org/reference/lightSpecular_.\r\n     * html\">lightSpecular</a>.\r\n     *\r\n     * @type {p5.Color}\r\n     */\r\n    get specular_color() {\r\n      return this.#specular_color;\r\n    }\r\n    set specular_color(val) {\r\n      const { pInst } = this;\r\n      const c = Array.isArray(val) ? pInst.color(...val) : pInst.color(val);\r\n      pInst.specularColor(c);\r\n      this.#specular_color = c;\r\n    }\r\n  };\r\n\r\nexport const addLightFalloff = (baseClass) =>\r\n  class extends baseClass {\r\n    #light_falloff;\r\n    /**\r\n     * Sets the falloff rate for ```<point-light>```\r\n     * and ```<spot-light>```.\r\n     *\r\n     * light_falloff affects only this element and its children.\r\n     *\r\n     * The values are `constant`, `linear`, an `quadratic` and are used to calculate falloff as follows:\r\n     *\r\n     * d = distance from light position to vertex position\r\n     *\r\n     * falloff = 1 / (CONSTANT + d \\* LINEAR + (d \\* d) \\* QUADRATIC)\r\n     * @type {[number, number, number]}\r\n     */\r\n    get light_falloff() {\r\n      return this.#light_falloff;\r\n    }\r\n    set light_falloff([constant, linear, quadratic]) {\r\n      const { pInst } = this;\r\n      pInst.lightFalloff(constant, linear, quadratic);\r\n      this.#light_falloff = [\r\n        pInst._renderer.constantAttenuation,\r\n        pInst._renderer.linearAttenuation,\r\n        pInst._renderer.quadraticAttenuation,\r\n      ];\r\n    }\r\n  };\r\n\r\nexport const addRectMode = (baseClass) =>\r\n  class extends baseClass {\r\n    #rect_mode;\r\n    /**\r\n     * Modifies the location from which rectangles are drawn by changing the way\r\n     * in which x and y coordinates are interpreted.\r\n     *\r\n     * The default mode is CORNER, which interprets the x and y as the\r\n     * upper-left corner of the shape.\r\n     *\r\n     * rect_mode=\"CORNERS\" interprets x and y as the location of\r\n     * one of the corners, and width and height as the location of\r\n     * the diagonally opposite corner. Note, the rectangle is drawn between the\r\n     * coordinates, so it is not necessary that the first corner be the upper left\r\n     * corner.\r\n     *\r\n     * rect_mode=\"CENTER\" interprets x and y as the shape's center\r\n     * point.\r\n     *\r\n     * rect_mode=\"RADIUS\" also uses x and y as the shape's\r\n     * center\r\n     * point, but uses width and height to specify half of the shape's\r\n     * width and height respectively.\r\n     *\r\n     * The value to this property must be written in ALL CAPS because they are\r\n     * predefined as constants in ALL CAPS.\r\n     *\r\n     * @type {CORNER|CORNERS|CENTER|RADIUS}\r\n     */\r\n    get rect_mode() {\r\n      return this.#rect_mode;\r\n    }\r\n    set rect_mode(mode) {\r\n      this.pInst.rectMode(mode);\r\n      this.#rect_mode = this.pInst._renderer._rectMode;\r\n    }\r\n  };\r\n\r\nexport const add3DShapeStyling = (baseClass) =>\r\n  class extends baseClass {\r\n    #smooth = false;\r\n    /**\r\n     * smooth=\"true\" draws all geometry with smooth (anti-aliased) edges. smooth=\"true\" will also\r\n     * improve image quality of resized images. On a 3D canvas, smooth is false\r\n     * by default, so it is necessary to set smooth=\"true\" if you would like\r\n     * smooth (antialiased) edges on your geometry.\r\n     * @type {boolean}\r\n     */\r\n    get smooth() {\r\n      return this.#smooth;\r\n    }\r\n    set smooth(val) {\r\n      if (typeof val !== \"boolean\")\r\n        return console.error(\r\n          `${this.tagName}'s smooth property is being set to ${val}, but it may only be set to true or false.`\r\n        );\r\n      if (val) this.pInst.smooth();\r\n      else this.pInst.noSmooth();\r\n      this.#smooth = val;\r\n    }\r\n  };\r\n","import {\r\n  WebGLLight,\r\n  addLightFalloff,\r\n  addSpecularColor,\r\n} from \"../properties/3d_props\";\r\n\r\n/**\r\n * Creates an ambient light with the given color.\r\n *\r\n * Ambient light does not come from a specific direction.\r\n * Objects are evenly lit from all sides. Ambient lights are\r\n * almost always used in combination with other types of lights.\r\n * @element ambient-light\r\n * @attribute {Number}   v1     red or hue value relative to the current color\r\n *                                range\r\n * @attribute {Number}   v2     green or saturation value relative to the\r\n *                                current color range\r\n * @attribute {Number}   v3     blue or brightness value relative to the current\r\n *                                color range\r\n * @attribute {Number}   alpha  alpha value relative to current color range\r\n *                                (default is 0-255)\r\n * @attribute {Number}   gray   number specifying value between\r\n *                                white and black\r\n * @attribute {String}   value  a color string\r\n * @attribute {Number[]} values an array containing the red,green,blue &\r\n *                                 and alpha components of the color\r\n * @attribute {p5.Color} color  color as a <a\r\n *                                 href=\"https://p5js.org/reference/#/p5.Color\"\r\n *                                 target=\"_blank\">p5.Color</a>\r\n */\r\nclass AmbientLight extends WebGLLight {\r\n  static overloads = [\r\n    \"v1, v2, v3, [alpha]\",\r\n    \"gray, [alpha]\",\r\n    \"value\",\r\n    \"values\",\r\n    \"color\",\r\n  ];\r\n}\r\ncustomElements.define(\"p-ambient-light\", AmbientLight);\r\n\r\n/**\r\n * Creates a directional light with the given color and direction.\r\n *\r\n * Directional light comes from one direction.\r\n * The direction is specified as numbers inclusively between -1 and 1.\r\n * For example, setting the direction as (0, -1, 0) will cause the\r\n * geometry to be lit from below (since the light will be facing\r\n * directly upwards). Similarly, setting the direction as (1, 0, 0)\r\n * will cause the geometry to be lit from the left (since the light\r\n * will be facing directly rightwards).\r\n *\r\n * Directional lights do not have a specific point of origin, and\r\n * therefore cannot be positioned closer or farther away from a geometry.\r\n *\r\n * A maximum of **5** directional lights can be active at once.\r\n * @element    directional-light\r\n * @attribute  {Number}   v1     red or hue value relative to the current color\r\n *                                range\r\n * @attribute  {Number}   v2     green or saturation value relative to the\r\n *                                current color range\r\n * @attribute  {Number}   v3     blue or brightness value relative to the\r\n *                                current color range\r\n * @attribute  {Number}   x      x component of direction (inclusive range of\r\n *                                -1 to 1)\r\n * @attribute  {Number}   y      y component of direction (inclusive range of\r\n *                                -1 to 1)\r\n * @attribute  {Number}   z      z component of direction (inclusive range of\r\n *                                -1 to 1)\r\n * @attribute  {p5.Vector} direction  direction of light as a <a\r\n *                             href=\"https://p5js.org/reference/#/p5.Vector\"\r\n *                             >p5.Vector</a>\r\n * @attribute {p5.Color} color  color as a <a\r\n *                                 href=\"https://p5js.org/reference/#/p5.Color\"\r\n *                                 target=\"_blank\">p5.Color</a>\r\n */\r\nclass DirectionalLight extends addSpecularColor(WebGLLight) {\r\n  static overloads = [\r\n    \"v1, v2, v3, x, y, z\",\r\n    \"v1, v2, v3, direction\",\r\n    \"color, x, y, z\",\r\n    \"color, direction\",\r\n  ];\r\n}\r\ncustomElements.define(\"p-directional-light\", DirectionalLight);\r\n\r\n/**\r\n * Creates a point light with the given color and position.\r\n *\r\n * A point light emits light from a single point in all directions.\r\n * Because the light is emitted from a specific point (position),\r\n * it has a different effect when it is positioned farther vs. nearer\r\n * an object.\r\n *\r\n * A maximum of **5** point lights can be active at once.\r\n *\r\n * @attribute  {Number}   v1   red or hue value relative to the current color\r\n *                                range\r\n * @attribute  {Number}   v2   green or saturation value relative to the\r\n *                                current color range\r\n * @attribute  {Number}   v3   blue or brightness value relative to the\r\n *                                current color range\r\n * @attribute  {Number}    x   x component of position\r\n * @attribute  {Number}    y   y component of position\r\n * @attribute  {Number}    z   z component of position\r\n * @attribute  {p5.Vector}  position position of light as a <a\r\n *                            href=\"https://p5js.org/reference/#/p5.Vector\"\r\n *                            >p5.Vector</a>\r\n * @attribute  {p5.Color|Number[]|String} color  color as a <a\r\n *                href=\"https://p5js.org/reference/#/p5.Color\">p5.Color</a>,\r\n *                as an array, or as a CSS string\r\n */\r\nclass PointLight extends addLightFalloff(addSpecularColor(WebGLLight)) {\r\n  static overloads = [\r\n    \"v1, v2, v3, x, y, z\",\r\n    \"v1, v2, v3, position\",\r\n    \"color, x, y, z\",\r\n    \"color, position\",\r\n  ];\r\n}\r\ncustomElements.define(\"p-point-light\", PointLight);\r\n\r\n/**\r\n * Places an ambient and directional light in the scene.\r\n * The lights are set to <ambient-light v1=\"128\" v2=\"128\" v3=\"128\"> and\r\n * <directional-light v1=\"128\" v2=\"128\" v3'=\"128\" x=\"0\" y=\"0\" z=\"-1\">.\r\n * @element lights\r\n */\r\nclass Lights extends addSpecularColor(WebGLLight) {\r\n  static overloads = [\"\"];\r\n}\r\ncustomElements.define(\"p-lights\", Lights);\r\n\r\n/**\r\n * Creates a spot light with the given color, position,\r\n * light direction, angle, and concentration.\r\n *\r\n * Like a ```<point-light>```, a ```<spot-light>```\r\n * emits light from a specific point (position). It has a different effect\r\n * when it is positioned farther vs. nearer an object.\r\n *\r\n * However, unlike a ```<point-light>```, the light is emitted in **one\r\n * direction**\r\n * along a conical shape. The shape of the cone can be controlled using\r\n * the `angle` and `concentration` parameters.\r\n *\r\n * The `angle` parameter is used to\r\n * determine the radius of the cone. And the `concentration`\r\n * parameter is used to focus the light towards the center of\r\n * the cone. Both parameters are optional, however if you want\r\n * to specify `concentration`, you must also specify `angle`.\r\n * The minimum concentration value is 1.\r\n *\r\n * A maximum of **5** spot lights can be active at once.\r\n *\r\n * @element spot-light\r\n * @attribute  {Number}    v1             red or hue value relative to the\r\n *                                            current color range\r\n * @attribute  {Number}    v2             green or saturation value relative\r\n *                                            to the current color range\r\n * @attribute  {Number}    v3             blue or brightness value relative\r\n *                                            to the current color range\r\n * @attribute  {Number}    x              x component of position\r\n * @attribute  {Number}    y              y component of position\r\n * @attribute  {Number}    z              z component of position\r\n * @attribute  {Number}    rx             x component of light direction\r\n *                                            (inclusive range of -1 to 1)\r\n * @attribute  {Number}    ry             y component of light direction\r\n *                                            (inclusive range of -1 to 1)\r\n * @attribute  {Number}    rz             z component of light direction\r\n *                                            (inclusive range of -1 to 1)\r\n * @attribute  {Number}    angle          angle of cone. Defaults to PI/3\r\n * @attribute  {Number}    concentration  concentration of cone. Defaults to\r\n *                                            100\r\n */\r\nclass SpotLight extends addLightFalloff(addSpecularColor(WebGLLight)) {\r\n  static overloads = [\r\n    \"v1, v2, v3, x, y, z, rx, ry, rz, [angle], [concentration]\",\r\n    \"color, position, direction, [angle], [concentration]\",\r\n    \"v1, v2, v3, position, direction, [angle], [concentration]\",\r\n    \"color, x, y, z, direction, [angle], [concentration]\",\r\n    \"color, position, rx, ry, rz, [angle], [concentration]\",\r\n    \"v1, v2, v3, x, y, z, direction, [angle], [concentration]\",\r\n    \"v1, v2, v3, position, rx, ry, rz, [angle], [concentration]\",\r\n    \"color, x, y, z, rx, ry, rz, [angle], [concentration]\",\r\n  ];\r\n}\r\ncustomElements.define(\"p-spot-light\", SpotLight);\r\n"],"names":[],"version":3,"file":"p5.marker.js.map","sourceRoot":"../"}