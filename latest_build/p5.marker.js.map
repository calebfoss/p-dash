{"mappings":"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","sources":["src/index.js","src/core.js","src/utils/caseConvert.js","src/utils/attrParse.js","src/utils/p5Modifiers.js","src/methods/3d_methods.js","src/properties/canvas_props.js","src/methods/canvas_methods.js","src/properties/color_props.js","src/methods/color_methods.js","src/properties/environment_props.js","src/elements/canvas_elements.js","src/modules/collide.js","src/elements/2d_shape_elements.js","src/properties/shape_props.js","src/modules/environment.js","src/elements/color_elements.js","src/elements/beyond_canvas_elements.js","src/modules/shape.js","src/modules/structure.js","src/modules/dom.js","src/modules/data.js","src/modules/math.js","src/modules/rendering.js","src/modules/transform.js","src/modules/events.js","src/modules/image.js","src/modules/io.js","src/modules/typography.js","src/elements/3d_shape_elements.js","src/properties/3d_props.js","src/elements/3d_light_elements.js"],"sourcesContent":["\"use strict\";\nimport \"./core\";\nimport \"./elements/canvas_elements\";\nimport \"./modules/collide\";\nimport \"./elements/2d_shape_elements\";\nimport \"./modules/environment\";\nimport \"./elements/color_elements\";\nimport \"./elements/beyond_canvas_elements\";\nimport \"./modules/shape\";\nimport \"./modules/structure\";\nimport \"./modules/dom\";\nimport \"./modules/data\";\nimport \"./modules/math\";\nimport \"./modules/rendering\";\nimport \"./modules/transform\";\nimport \"./modules/events\";\nimport \"./modules/image\";\nimport \"./modules/io\";\nimport \"./modules/typography\";\nimport \"./elements/3d_shape_elements\";\nimport \"./elements/3d_light_elements\";\n\nconst customElementsDefined = new Event(\"customElementsDefined\");\ndispatchEvent(customElementsDefined);\n","import { pascalToKebab, kebabToCamel } from \"./utils/caseConvert\";\nimport { AttrParseUtil } from \"./utils/attrParse\";\nimport { wrapMethod, defineProperties } from \"./utils/p5Modifiers\";\nimport { addWebGLMethods } from \"./methods/3d_methods\";\nimport { addCanvasProperties } from \"./properties/canvas_props\";\nimport { addCanvasMethods } from \"./methods/canvas_methods\";\nimport { addColorConstants } from \"./properties/color_props\";\nimport { addColorMethods } from \"./methods/color_methods\";\nimport { addEnvironmentProps } from \"./properties/environment_props\";\n\nwrapMethod(\n  \"_createFriendlyGlobalFunctionBinder\",\n  (base) =>\n    function (options = {}) {\n      return (prop, value) => {\n        const descriptor = Object.getOwnPropertyDescriptor(p5.prototype, prop);\n        const globalObject = options.globalObject || window;\n        if (typeof descriptor === \"undefined\" || descriptor.writable)\n          return base.call(this, options)(prop, value);\n        return Object.defineProperty(globalObject, prop, descriptor);\n      };\n    }\n);\n\np5.prototype.WHILE = \"while\";\np5.prototype.UNTIL = \"until\";\n\np5.prototype.assignCanvas = function (c, r) {\n  this.noCanvas();\n  const mainDiv = document.querySelector(\"main\");\n  let index = 0;\n  if (typeof c.id === \"undefined\") {\n    while (document.querySelector(`p5MarkerCanvas${index}`)) index++;\n  }\n  c.id = `p5MarkerCanvas${index}`;\n  if (mainDiv.children.length === 0) mainDiv.remove();\n  if (r === this.WEBGL) {\n    this._setProperty(\"_renderer\", new p5.RendererGL(c, this, true));\n  } else {\n    //P2D mode\n    this._setProperty(\"_renderer\", new p5.Renderer2D(c, this, true));\n  }\n  this._renderer._applyDefaults();\n  this._setProperty(\"_elements\", [this._renderer]);\n};\n\np5.prototype.assets = {};\n\np5.prototype.loadAssets = async function () {\n  const assetElements = Array.from(document.querySelectorAll(\"p-asset\"));\n  const pInst = this;\n  const promises = assetElements.map((el) => el.load(pInst));\n  const results = await Promise.all(promises);\n  results.forEach(\n    (result, i) => (this.assets[assetElements[i].getAttribute(\"name\")] = result)\n  );\n  this._decrementPreload();\n};\np5.prototype.registerPreloadMethod(\"loadAssets\", p5.prototype);\np5.prototype._debug_attributes = true;\np5.prototype.create_canvas_element = function (elementName) {\n  const createdElement = document.createElement(elementName);\n  this.canvas.appendChild(createdElement);\n  createdElement.setup(this, this.canvas);\n  return createdElement;\n};\ndefineProperties({\n  object_assign: {\n    set: function ([target, ...sources]) {\n      Object.assign(target, ...sources);\n    },\n  },\n  debug_attributes: {\n    get: function () {\n      return this._debug_attributes;\n    },\n    set: function (val) {\n      const valType = typeof val;\n      if (typeof val === \"boolean\") this._debug_attributes = val;\n      else\n        console.error(\n          `debug_attributes was set to a value of type ${valType} but may only be set to a boolean true/false value.`\n        );\n    },\n  },\n});\n\nconst attributePriorities = [\n  \"debug_attributes\",\n  \"anchor\",\n  \"angle\",\n  \"scale_factor\",\n  \"shear\",\n  \"_default\",\n  \"repeat\",\n  \"change\",\n];\nexport const addP5PropsAndMethods = (baseClass) =>\n  class P5Extension extends addEnvironmentProps(\n    addColorMethods(addColorConstants(addWebGLMethods(baseClass)))\n  ) {\n    /**\n     * This element's parent canvas.\n     * @private\n     */\n    #canvas;\n    #frame_created;\n    /**\n     * @private\n     */\n    #pInst;\n    /**\n     * @private\n     */\n    #proxy = new Proxy(this, {\n      get(target, prop) {\n        if (prop in target) return target[prop];\n        return target.#state[prop];\n      },\n      has(target, prop) {\n        if (prop in target) return true;\n        return prop in target.#state;\n      },\n      set(target, prop, val) {\n        target.set(prop, val);\n      },\n    });\n    /**\n     * @private\n     */\n    #state = {};\n\n    /**\n     * @private\n     */\n    #updateFunctions = new Map();\n\n    constructor() {\n      super();\n    }\n    /**\n     * Proxy for the sibling element above this element with access to its\n     * properties, methods, and attributes.\n     * @type {proxy}\n     */\n    get above_sibling() {\n      return this.previousElementSibling.this_element;\n    }\n    /**\n     * True if siblings directly above this element with an \"on\" attribute have\n     * \"on\" set to false. This can be used to switch between elements based on\n     * conditions, similar to if/else.\n     * @type {boolean}\n     */\n    get above_siblings_off() {\n      if (this === this.parentElement.firstElementChild) return true;\n      const { above_sibling } = this;\n      if (above_sibling.on) return false;\n      return above_sibling.above_siblings_off;\n    }\n    /**\n     * @method applyChange\n     * @private\n     */\n    #applyChange() {\n      const change = (this.#state.change = this.#updateAttribute(\n        this.#state,\n        \"change\",\n        this\n      ));\n      let changed = false;\n      const assignProp = (obj, prop) => {\n        if (prop in obj) {\n          const changeVal = change[prop];\n          changed ||= obj[prop] !== changeVal;\n          obj[prop] = changeVal;\n          if (this.pInst.debug_attributes) this.setAttribute(prop, changeVal);\n          return true;\n        }\n        return false;\n      };\n      for (const prop in change) {\n        assignProp(this, prop) ||\n          assignProp(this.#state, prop) ||\n          assignProp(this.pInst, prop) ||\n          console.error(\n            `${this.constructor.elementName}'s change attribute has a prop called ${prop} that is unknown`\n          );\n\n        this.#state[prop] = change[prop];\n      }\n      return changed;\n    }\n    /**\n     * Checks if the provided attribute name belongs to a parent element. If\n     * the attribute refers to an object property, this will check for an\n     * attribute with a name that matches the object.\n     * @param {string} attributeName - name of the attribute to check\n     * @returns {boolean} true\n     */\n    attributeInherited(attributeName) {\n      const [obj, ...props] = attributeName.split(\".\");\n      if (props.length) return this.attributeInherited(obj);\n      if (this.parentElement.hasAttribute(attributeName)) return true;\n      if (this.parentElement.attributeInherited)\n        return this.parentElement.attributeInherited(attributeName);\n      return false;\n    }\n    /**\n     * Blends the pixels in the display window according to the defined mode.\n     * There is a choice of the following modes to blend the source pixels (A)\n     * with the ones of pixels already in the display window (B):\n     * <ul>\n     * <li><code>BLEND</code> - linear interpolation of colours: C =\n     * A*factor + B. <b>This is the default blending mode.</b></li>\n     * <li><code>ADD</code> - sum of A and B</li>\n     * <li><code>DARKEST</code> - only the darkest colour succeeds: C =\n     * min(A*factor, B).</li>\n     * <li><code>LIGHTEST</code> - only the lightest colour succeeds: C =\n     * max(A*factor, B).</li>\n     * <li><code>DIFFERENCE</code> - subtract colors from underlying image.\n     * <em>(2D)</em></li>\n     * <li><code>EXCLUSION</code> - similar to <code>DIFFERENCE</code>, but less\n     * extreme.</li>\n     * <li><code>MULTIPLY</code> - multiply the colors, result will always be\n     * darker.</li>\n     * <li><code>SCREEN</code> - opposite multiply, uses inverse values of the\n     * colors.</li>\n     * <li><code>REPLACE</code> - the pixels entirely replace the others and\n     * don't utilize alpha (transparency) values.</li>\n     * <li><code>REMOVE</code> - removes pixels from B with the alpha strength of A.</li>\n     * <li><code>OVERLAY</code> - mix of <code>MULTIPLY</code> and <code>SCREEN\n     * </code>. Multiplies dark values, and screens light values. <em>(2D)</em></li>\n     * <li><code>HARD_LIGHT</code> - <code>SCREEN</code> when greater than 50%\n     * gray, <code>MULTIPLY</code> when lower. <em>(2D)</em></li>\n     * <li><code>SOFT_LIGHT</code> - mix of <code>DARKEST</code> and\n     * <code>LIGHTEST</code>. Works like <code>OVERLAY</code>, but not as harsh. <em>(2D)</em>\n     * </li>\n     * <li><code>DODGE</code> - lightens light tones and increases contrast,\n     * ignores darks. <em>(2D)</em></li>\n     * <li><code>BURN</code> - darker areas are applied, increasing contrast,\n     * ignores lights. <em>(2D)</em></li>\n     * <li><code>SUBTRACT</code> - remainder of A and B <em>(3D)</em></li>\n     * </ul>\n     *\n     * <em>(2D)</em> indicates that this blend mode <b>only</b> works in the 2D renderer.<br>\n     * <em>(3D)</em> indicates that this blend mode <b>only</b> works in the WEBGL renderer.\n     * @type {BLEND|DARKEST|LIGHTEST|DIFFERENCE|MULTIPLY|EXCLUSION|SCREEN|\n     * REPLACE|OVERLAY|HARD_LIGHT|SOFT_LIGHT|DODGE|BURN|ADD|REMOVE|SUBTRACT}\n     */\n    get blend_mode() {\n      if (this.pInst._renderer.isP3D) return this.curBlendMode;\n      return this.pInst.drawingContext.globalCompositeOperation;\n    }\n    set blend_mode(val) {\n      this.pInst.blendMode(val);\n    }\n\n    /**\n     * @private\n     */\n    #callAttributeUpdater(inherited, attrName, thisArg) {\n      if (this.#updateFunctions.has(attrName)) {\n        const evalFn = this.#updateFunctions.get(attrName);\n        return evalFn.call(thisArg, this.pInst, inherited);\n      }\n      if (attrName in inherited) return inherited[attrName];\n      if (attrName in this.pInst) return this.pInst[attrName];\n      return;\n    }\n    /**\n     * The parent canvas for this element\n     * @type {HTMLCanvasElement}\n     */\n    get canvas() {\n      return this.#canvas.this_element;\n    }\n    /**\n     * Checks if this element is colliding with the provided other element.\n     * @method colliding_with\n     * @param {P5Element} el - other element to check\n     * @returns {boolean} true if elements are colliding\n     */\n    colliding_with(el) {\n      return this.pInst.collide_elements(this, el);\n    }\n    /**\n     * color_mode changes the way p5.js interprets\n     * color data. By default, fill,\n     * <a href=\"https://p5js.org/reference/#/p5/color\">color()</a> are defined\n     * by values between 0 and 255 using the RGB color model. This is equivalent\n     * to setting color_mode=\"RGB, 255\".\n     * Setting color_mode=\"HSB\" lets you use the HSB system instead. By default,\n     * this is color_mode=\"HSB, 360, 100, 100, 1\". You can also use HSL.\n     *\n     * Note: existing color objects remember the mode that they were created in,\n     * so you can change modes as you like without affecting their appearance.\n     *\n     * @type {RGB|HSB|HSL}\n     */\n    get color_mode() {\n      return this.pInst._colorMode;\n    }\n    set color_mode(val) {\n      this.pInst.colorMode(val);\n    }\n    /**\n     * @private\n     */\n    get #comments() {\n      return this.#html\n        .split(/(?:\\r\\n|\\r|\\n)/)\n        .map((line) => line.match(/.{1,80}/g))\n        .flat()\n        .map((line) => \"//\\t\" + line);\n    }\n    set console_log(val) {\n      console.log(...arguments);\n    }\n    /**\n     * Updates the element's attribute values, renders it to the canvas, and\n     * calls the draw method on its children.\n     * @method draw\n     * @param {object} inherited - object containing attribute values passed\n     * down from parent element\n     */\n    draw(inherited) {\n      if (this.hasAttribute(\"on\")) {\n        this.#state.on = this.#updateAttribute(\n          inherited,\n          \"on\",\n          this.this_element\n        );\n        if (!this.#state.on) return;\n      }\n      this.pInst.push();\n      this.updateState(inherited);\n      const { WHILE } = p5.prototype;\n      let repeat = true;\n      while (repeat) {\n        this.render?.();\n        for (const child of this.children) {\n          child.draw(this.#state);\n        }\n        repeat = this.hasAttribute(\"repeat\") && this.#state.repeat;\n        const { change } = this.#state;\n        if (Array.isArray(repeat)) {\n          const [key, ...conditions] = this.#updateAttribute(\n            this.#state,\n            \"repeat\"\n          );\n          repeat = (key === WHILE) === conditions.every((c) => c);\n        }\n        if (repeat) {\n          this.pInst.pop();\n          this.pInst.push();\n          const changed = this.#applyChange();\n          const updaters = this.#updateFunctions.entries();\n          for (const [attrName, updater] of updaters) {\n            if (attrName in change === false)\n              this.#state[attrName] = this.#updateAttribute(\n                inherited,\n                attrName,\n                this\n              );\n          }\n          if (!changed) repeat = false;\n        }\n        this.endRender?.(this.#state);\n      }\n      this.pInst.pop();\n    }\n    /**\n     * The p5.js API provides a lot of functionality for creating graphics, but\n     * there is some native HTML5 Canvas functionality that is not exposed by\n     * p5.\n     *\n     * You can still assign to\n     * it directly using the property `drawing_context`. This is\n     * the equivalent of calling `canvas.getContext('2d');` or\n     * `canvas.getContext('webgl');` and then calling Object.assign on the\n     * result.\n     * See this\n     * <a href=\"https://developer.mozilla.org/en-US/docs/Web/API/CanvasRenderingContext2D\">\n     * reference for the native canvas API</a> for possible drawing functions\n     * you can call.\n     *\n     * ```xml\n     * <_ drawing_context=\"shadowOffsetX: 5, shadowOffsetY: -5, shadowBlur: 10,\n     * shadowColor: 'black'\" />\n     * ```\n     * @type {Object}\n     */\n    get drawing_context() {\n      return this.pInst.drawingContext;\n    }\n    set drawing_context(obj) {\n      Object.assign(this.pInst.drawingContext, obj);\n    }\n    /**\n     * Name of the HTML element generated from this class.\n     * @type {string}\n     */\n    static get elementName() {\n      return `p-${pascalToKebab(this.name)}`;\n    }\n    /**\n     * With erase=\"true\", this element and all elements rendered after it will\n     * subtract from the canvas. Erased areas will reveal the web page\n     * underneath the canvas. This may be canceled with erase=\"false\"\n     *\n     * Arguments for the optional parameters to\n     * <a href=\"https://p5js.org/reference/#/p5/erase\">erase()</a>\n     * may also be provided as a comma separated list.\n     *\n     * ```<p-image>``` elements will not erase the canvas but works as usual.\n     * @type {boolean}\n     */\n    get erase() {\n      return this.pInst._renderer._isErasing;\n    }\n    set erase(val) {\n      if (val === true) this.pInst.erase();\n      else if (val === false) this.pInst.noErase();\n      else if (Array.isArray(val)) this.pInst.erase(...val);\n      else\n        console.error(\n          `${\n            this.tagName\n          }'s erase property was set using type ${typeof val}, but erase may only be set to a boolean or array.`\n        );\n    }\n    /**\n     * first_frame is true if the element was just created.\n     * This can be used for setup. For example,\n     * ```xml\n     * <_ rand_ball=\"this_element\">\n     *  <_ on=\"first_frame\"\n     *     rand_ball.x=\"random(canvas.width)\"\n     *     rand_ball.y=\"random(canvas.height)\"></_>\n     *   <circle></circle>\n     * </_>\n     * ```\n     * Sets the ```<_>```'s x-coordinate to a random position along the\n     * canvas when it is first created. The value then stays the same.\n     * As a result, the circle is played at that random position.\n     * (read-only)\n     * @type {boolean}\n     */\n    get first_frame() {\n      return this.frame_count === 1;\n    }\n    /**\n     * frame_count counts the number of frames this element has been\n     * rendered. The first time this element is rendered, frame_count\n     * with be 1. (read-only)\n     * @type {number}\n     */\n    get frame_count() {\n      return this.pInst.frameCount - this.#frame_created;\n    }\n    /**\n     * @private\n     */\n    get #html() {\n      return this.outerHTML.replace(this.innerHTML, \"\");\n    }\n    /**\n     * List of attribute names in the order in which they will be evaluated.\n     * Element attributes are not guaranteed to be in the order in which they\n     * are written. Transformation attributes are prioritized before others\n     * and use this order: anchor, angle, scale_factor, shear.\n     * @type {Array}\n     */\n    get orderedAttributeNames() {\n      const ordered = Array.from(this.attributes)\n        .sort(\n          ({ name: a }, { name: b }) =>\n            (attributePriorities.indexOf(a) + 1 ||\n              attributePriorities.indexOf(\"_default\")) -\n            (attributePriorities.indexOf(b) + 1 ||\n              attributePriorities.indexOf(\"_default\"))\n        )\n        .map(({ name }) => name);\n      this.transformDoneIndex =\n        ordered.findLastIndex((attrName) =>\n          attributePriorities.includes(attrName)\n        ) + 1;\n      return ordered;\n    }\n    /**\n     * Proxy for this element's parent element with access to its properties,\n     * methods, and attributes.\n     * @type {proxy}\n     */\n    get parent_element() {\n      return this.parentElement.this_element;\n    }\n    /**\n     * This element's p5 instance.\n     * @type {object}\n     */\n    get pInst() {\n      return this.#pInst;\n    }\n    /**\n     * Sets an attribute's value on this element.\n     * @param {string} attributeName\n     * @param {*} value\n     */\n    set(attributeName, value) {\n      if (attributeName in this) {\n        this.#updateFunctions.set(\n          attributeName,\n          () => (this[attributeName] = value)\n        );\n        this[attributeName] = value;\n      } else {\n        this.#updateFunctions.set(attributeName, () => value);\n      }\n      this.#state[attributeName] = value;\n    }\n    /**\n     * Sets this element up with a p5 instance and sets up its children.\n     * @param {p5} pInst\n     */\n    setup(pInst, canvas) {\n      this.#pInst = pInst;\n      this.#frame_created = pInst.frameCount;\n      this.#canvas = canvas;\n      this.setDefaults?.();\n      this.#setupEvalFns?.();\n      this.setupRenderFunction?.();\n      for (const child of this.children) {\n        child.setup(pInst, canvas);\n      }\n    }\n    /**\n     * @private\n     */\n    #setupEvalFn(attr) {\n      //  The attribute's value will be modified, then run as JS\n      const attrJsStr = attr.value;\n      //  TODO - catch improperly ordered quote marks: \"foo'var\"'\n      if (AttrParseUtil.allQuotesMatched(attrJsStr) === false)\n        console.error(\n          `It looks like a ${this.constructor.elementName}'s ${attr.name} ` +\n            `attribute has an open string. Check that each string has a beginning and end character.`\n        );\n      const getOwnerName = (prop) => {\n        if (prop in this) return \"this\";\n        //  TODO - remove condition when p5 props have been moved to elments\n        if (\n          prop in this.pInst &&\n          typeof this.pInst[prop] !== \"function\" &&\n          prop !== \"width\" &&\n          prop !== \"height\"\n        )\n          return \"this.pInst\";\n        if (this.attributeInherited(prop)) return \"inherited\";\n      };\n      const owner = getOwnerName(attr.name);\n      //  This is plural because there may be a prop name within\n      //  Ex:  myArray[i]\n      const varName = AttrParseUtil.replacePropNames(this, attr.name);\n      const attrValueVarsReplaced = AttrParseUtil.replacePropNames(\n        this,\n        attrJsStr\n      );\n      const varValue = AttrParseUtil.enclose(attrValueVarsReplaced);\n      const evalFnName = `${this.constructor.name}_${attr.name.replace(\n        /[^a-z0-9]/g,\n        \"_\"\n      )}`;\n      const fnHeader = `return function ${evalFnName}(_pInst, _inherited) {`;\n      //  TODO Fix this mess\n      const fnBody =\n        owner === \"inherited\" && !attr.name.includes(\".\")\n          ? `return ${varValue};\\n}`\n          : `return ${varName} = ${varValue};\\n};`;\n      const fnStr = [fnHeader, ...this.#comments, fnBody].join(\"\\n\");\n      const evalFn = new Function(fnStr)();\n      this.#updateFunctions.set(attr.name, evalFn);\n    }\n    /**\n     * @private\n     */\n    #setupEvalFns() {\n      if (this.hasAttribute(\"repeat\") && !this.hasAttribute(\"change\")) {\n        console.error(\n          `It looks like a ${this.constructor.elementName} has a repeat attribute ` +\n            \"but does not have a change attribute. The change attribute is required to \" +\n            \"prevent infinite loops.\"\n        );\n        this.removeAttribute(\"repeat\");\n      }\n      const { orderedAttributeNames, transformDoneIndex } = this;\n      for (let i = 0; i < orderedAttributeNames.length; i++) {\n        if (i === transformDoneIndex)\n          this.#updateFunctions.set(\"transform_matrix\", function () {\n            this.transform_matrix = this.pInst.transform_matrix;\n          });\n        this.#setupEvalFn(this.attributes[orderedAttributeNames[i]]);\n      }\n    }\n    /**\n     * This element's proxy with access to properties, methods, and attributes.\n     */\n    get this_element() {\n      return this.#proxy;\n    }\n    /**\n     * @private\n     * @param {*} inherited\n     * @param {*} attrName\n     * @param {*} thisArg\n     * @returns\n     */\n    #updateAttribute(inherited, attrName, thisArg) {\n      if (attrName === \"repeat\" || attrName === \"change\")\n        inherited = this.#state;\n      const val = this.#callAttributeUpdater(inherited, attrName, thisArg);\n      //  Setting canvas width or height resets the drawing context\n      //  Only set the attribute if it's not one of those\n      if (this.pInst.debug_attributes === false) return val;\n      if (\n        this instanceof HTMLCanvasElement &&\n        (attrName === \"width\" || attrName === \"height\")\n      )\n        return val;\n\n      //  Brackets will throw a 'not a valid attribute name' error\n      if (attrName.match(/[\\[\\]]/)) return val;\n\n      const valToString = (v) => {\n        if (v instanceof p5.Color) return v.toString(this.pInst.color_mode);\n        if (typeof v?.toString === \"undefined\") return v;\n        return v.toString();\n      };\n      this.setAttribute(attrName, valToString(val));\n      return val;\n    }\n    /**\n     * Updates the values of all attributes using the provided expressions.\n     * @param {Object} inherited - object\n     * @returns\n     */\n    updateState(inherited) {\n      for (const prop in inherited) {\n        if (prop in this) this[prop] = inherited[prop];\n        this.#state[prop] = inherited[prop];\n      }\n      const updaters = this.#updateFunctions.entries();\n      for (const [attrName, updateFunction] of updaters) {\n        this.#state[attrName] = this.#updateAttribute(\n          inherited,\n          attrName,\n          this\n        );\n      }\n      return this.#state;\n    }\n    /**\n     * Set attributes for the WebGL Drawing context.\n     * This is a way of adjusting how the WebGL\n     * renderer works to fine-tune the display and performance.\n     *\n     * Note that this will reinitialize the drawing context\n     * if set after the WebGL canvas is made.\n     *\n     * If webgl_attributes is set to an object, all attributes\n     * not declared in the object will be set to defaults.\n     *\n     * The available attributes are:\n     * <br>\n     * alpha - indicates if the canvas contains an alpha buffer\n     * default is false\n     *\n     * depth - indicates whether the drawing buffer has a depth buffer\n     * of at least 16 bits - default is true\n     *\n     * stencil - indicates whether the drawing buffer has a stencil buffer\n     * of at least 8 bits\n     *\n     * antialias - indicates whether or not to perform anti-aliasing\n     * default is false (true in Safari)\n     *\n     * premultipliedAlpha - indicates that the page compositor will assume\n     * the drawing buffer contains colors with pre-multiplied alpha\n     * default is false\n     *\n     * preserveDrawingBuffer - if true the buffers will not be cleared and\n     * and will preserve their values until cleared or overwritten by author\n     * (note that p5 clears automatically on draw loop)\n     * default is true\n     *\n     * perPixelLighting - if true, per-pixel lighting will be used in the\n     * lighting shader otherwise per-vertex lighting is used.\n     * default is true.\n     *\n     * @type {Object}\n     */\n    get webgl_attributes() {\n      return this.pInst._glAttributes;\n    }\n    set webgl_attributes(val) {\n      this.pInst.setAttributes(...arguments);\n    }\n  };\nexport class P5Element extends addP5PropsAndMethods(HTMLElement) {}\n\nexport class RenderedElement extends P5Element {\n  constructor(overloads, renderFunctionName) {\n    super();\n    /**\n     * @private\n     */\n    this.overloads = overloads;\n    /**\n     * @private\n     */\n    this.renderFunctionName =\n      renderFunctionName || kebabToCamel(this.tagName.toLowerCase().slice(2));\n  }\n  /**\n   * Sets the parameters used to call this element's render function based\n   * on the overloads for that function and this element's attributes.\n   * @private\n   */\n  #getArgumentsFromOverloads() {\n    const { overloads } = this;\n    //  Check every required parameter has an attribute\n    const isOptional = (param) => param.match(/^\\[.*\\]$/);\n    let overloadMatch = false;\n    //  Split the parameters and start with overloads with most parameters\n    const overloadsSplitSorted = overloads\n      .map((o) => o.split(\",\").map((p) => p.trim()))\n      .sort((a, b) => a.length - b.length);\n    //  If there aren't any overloads, return an empty array\n    if (overloadsSplitSorted.length === 0) return [];\n    for (let i = 0; i < overloadsSplitSorted.length; i++) {\n      const overloadParams = overloadsSplitSorted[i];\n      overloadMatch = overloadParams.every(\n        (p) =>\n          this.hasAttribute(p) ||\n          this.attributeInherited(p) ||\n          isOptional(p) ||\n          p === \"\" ||\n          (i === overloadsSplitSorted.length - 1 && this.attributeInherited(p))\n      );\n\n      //  If matched overload found\n      if (overloadMatch) {\n        //  Filter params recursively\n        const filterParams = (overloadParams, filteredParams = [], i = 0) => {\n          //  If there are no more overload params, return filtered params\n          if (i === overloadParams.length) return filteredParams;\n          const optional = isOptional(overloadParams[i]);\n          const p = overloadParams[i].replaceAll(/\\[|\\]/g, \"\");\n          //  If param defined on this element, add it to filtered params\n          if (this.hasAttribute(p))\n            return filterParams(\n              overloadParams,\n              filteredParams.concat({ owner: this.this_element, param: p }),\n              ++i\n            );\n          //  If not defined on this element and optional, return filtered params\n          if (optional) return filteredParams;\n          //  If required and already initialized, add it to filtered params\n          if (this.attributeInherited(p))\n            return filterParams(\n              overloadParams,\n              filteredParams.concat({ owner: this.this_element, param: p }),\n              ++i\n            );\n          return filteredParams;\n        };\n        return filterParams(overloadParams);\n      }\n    }\n    console.error(\n      `Element ${this.tagName} does not have the required attributes to render and will be removed from the sketch`\n    );\n    this.remove();\n  }\n  /**\n   * @private\n   */\n  setupRenderFunction() {\n    const args = this.#getArgumentsFromOverloads();\n    this.render = function () {\n      this.pInst[this.renderFunctionName](\n        ...args.map(({ param, owner }) => owner[param])\n      );\n    };\n  }\n}\n/**\n * The blank `<_>` element renders nothing to the canvas. This is useful\n * for adjusting attributes for child elements.\n * @element _\n */\nclass _ extends P5Element {\n  constructor() {\n    super();\n  }\n}\ncustomElements.define(\"p-_\", _);\n","//  regex\nconst upperCaseChar = /([A-Z])/g;\nconst upperCaseCharAfterFirst = /(?<!^)[A-Z]/g;\n\n//  js string replace 2nd param\nconst prependMatch = (char) => char + \"$&\";\n\n//  casing converters\nexport const camelToKebab = (camelStr) =>\n  camelStr.replace(upperCaseCharAfterFirst, prependMatch(\"-\")).toLowerCase();\n\nexport const camelToSnake = (camelStr) =>\n  camelStr.replace(upperCaseCharAfterFirst, prependMatch(\"_\")).toLowerCase();\n\nexport const kebabToCamel = (kebabStr) =>\n  kebabStr.replace(/-./g, (s) => s[1].toUpperCase());\n\nexport const pascalToCamel = (pascalStr) =>\n  pascalStr.slice(0, 1).toLowerCase() + pascalStr.slice(1);\n\nexport const pascalToKebab = (pascalStr) =>\n  pascalToCamel(pascalStr).replaceAll(\n    upperCaseChar,\n    (c) => \"-\" + c.toLowerCase()\n  );\n\nexport const pascalToSnake = (pascalStr) =>\n  pascalToCamel(pascalStr).replaceAll(\n    upperCaseChar,\n    (c) => \"_\" + c.toLowerCase()\n  );\n\nexport const snakeToCamel = (snakeStr) =>\n  snakeStr\n    .split(\"_\")\n    .map((s, i) => (i > 0 ? s.slice(0, 1).toUpperCase() + s.slice(1) : s))\n    .join(\"\");\n","const notExistingObjProp = \"(?<![^\\\\.]\\\\.)\";\r\nconst legalVarName = \"\\\\b[a-z$_][a-z0-9$_]*\\\\b\";\r\nconst notNewObjProp = \"(?:(?!\\\\s*:)|(?<=\\\\?[^,]*))\";\r\nconst notBoolean = \"(?<!\\\\btrue\\\\b)(?<!\\\\bfalse\\\\b)\";\r\nconst notNewKeyword = \"(?<!\\\\bnew\\\\b)\";\r\nconst notProceededByOpenString = \"(?=(?:[^\\\"'`](?:([\\\"'`]).*\\\\1)*)*$)\";\r\nconst varName = new RegExp(\r\n  notExistingObjProp +\r\n    legalVarName +\r\n    notNewObjProp +\r\n    notBoolean +\r\n    notNewKeyword +\r\n    notProceededByOpenString,\r\n  \"gi\"\r\n);\r\n\r\nexport class AttrParseUtil {\r\n  static regex = {\r\n    legalVarName,\r\n    notExistingObjProp,\r\n    notNewObjProp,\r\n    notBoolean,\r\n    notNewKeyword,\r\n    notProceededByOpenString,\r\n    varName,\r\n  };\r\n  static allQuotesMatched(str) {\r\n    const quoteExps = [/\"/g, /'/g, /`/g];\r\n    for (const i in quoteExps) {\r\n      const matches = str.match(quoteExps[i]);\r\n      if (matches && matches.length % 2 !== 0) return false;\r\n    }\r\n    return true;\r\n  }\r\n  static enclose = (str) => {\r\n    const strMinusStrings = str.replace(/([\"'`]).*?\\1/gi, \"\");\r\n    const items = strMinusStrings.split(/(?<!{[^}]*),/gi);\r\n    const isObject = strMinusStrings.match(/^[^\\?\\{]*:/gi);\r\n    if (items.length === 1 && !isObject) return str;\r\n    const isUnenclosed = str.match(/(?<!\\([^\\)]*)(?<!{[^}]*)[,:]/gi) !== null;\r\n    if (!isUnenclosed) return str;\r\n    if (isObject) return `{${str}}`;\r\n    return `[${str}]`;\r\n  };\r\n  static escapes = {\r\n    LESS_THAN: \"<\",\r\n    GREATER_THAN: \">\",\r\n    AT_LEAST: \">=\",\r\n    NO_MORE_THAN: \"<=\",\r\n    AND: \"&&\",\r\n    OR: \"||\",\r\n    WHILE: \"\",\r\n  };\r\n  static isP5 = (name) => p5.prototype.hasOwnProperty(name);\r\n  static keywords = [\r\n    \"break\",\r\n    \"case\",\r\n    \"catch\",\r\n    \"class\",\r\n    \"const\",\r\n    \"continue\",\r\n    \"debugger\",\r\n    \"default\",\r\n    \"delete\",\r\n    \"do\",\r\n    \"else\",\r\n    \"export\",\r\n    \"extends\",\r\n    \"false\",\r\n    \"finally\",\r\n    \"for\",\r\n    \"function\",\r\n    \"if\",\r\n    \"import\",\r\n    \"in\",\r\n    \"instanceof\",\r\n    \"new\",\r\n    \"null\",\r\n    \"return\",\r\n    \"static\",\r\n    \"super\",\r\n    \"switch\",\r\n    \"this\",\r\n    \"throw\",\r\n    \"true\",\r\n    \"try\",\r\n    \"typeof\",\r\n    \"var\",\r\n    \"void\",\r\n    \"while\",\r\n    \"with\",\r\n    \"yield\",\r\n  ];\r\n  static getOwnerName(el, prop) {\r\n    if (\r\n      AttrParseUtil.keywords.includes(prop) ||\r\n      prop in AttrParseUtil.escapes ||\r\n      prop in globalThis\r\n    )\r\n      return \"none\";\r\n    if (prop in el) return \"this\";\r\n    //  TODO - remove this temporary check when no longer needed\r\n    if (prop in el.pInst && prop !== \"width\" && prop !== \"height\")\r\n      return \"pInst\";\r\n    return \"inherited\";\r\n  }\r\n  static getPrefix(el, prop) {\r\n    const ownerName = AttrParseUtil.getOwnerName(el, prop);\r\n    if (ownerName === \"none\") return \"\";\r\n    if (ownerName.slice(0, 4) === \"this\") return `${ownerName}.`;\r\n    else return `_${ownerName}.`;\r\n  }\r\n  static replacePropName(el, prop) {\r\n    if (prop in AttrParseUtil.escapes) return AttrParseUtil.escapes[prop];\r\n    return AttrParseUtil.getPrefix(el, prop) + prop;\r\n  }\r\n  static replacePropNames(el, str) {\r\n    return str\r\n      .replace(/UNTIL(.*)/, \"!($1)\")\r\n      .replace(AttrParseUtil.regex.varName, (prop) =>\r\n        AttrParseUtil.replacePropName(el, prop)\r\n      );\r\n  }\r\n}\r\n","import { camelToSnake } from \"./caseConvert\";\r\n\r\nexport function defineProperties(obj) {\r\n  for (const p in obj) {\r\n    p5.prototype[p] = {};\r\n  }\r\n  Object.defineProperties(p5.prototype, obj);\r\n}\r\n\r\nexport const wrapMethod = (methodName, wrapper) =>\r\n  (p5.prototype[methodName] = wrapper(p5.prototype[methodName]));\r\n\r\nexport const defineSnakeAlias = (...propNames) =>\r\n  propNames.forEach(\r\n    (propName) =>\r\n      (p5.prototype[camelToSnake(propName)] = p5.prototype[propName])\r\n  );\r\n\r\nexport const defineRendererGetterSetters = (...methodNames) =>\r\n  methodNames.forEach((methodName) =>\r\n    defineProperties({\r\n      [camelToSnake(methodName)]: {\r\n        get: function () {\r\n          return this._renderer?.[`_${methodName}`];\r\n        },\r\n        set: function (val) {\r\n          if (Array.isArray(val)) this[methodName](...val);\r\n          else this[methodName](val);\r\n        },\r\n      },\r\n    })\r\n  );\r\n","export const addWebGLMethods = (baseClass) =>\r\n  class extends baseClass {\r\n    /**\r\n     * Creates a new <a href=\"#/p5.Camera\">p5.Camera</a> object and sets it\r\n     * as the current (active) camera.\r\n     *\r\n     * The new camera is initialized with a default position\r\n     * (see camera property)\r\n     * and a default perspective projection\r\n     * (see <a href=\"#/p5.Camera/perspective\">perspective()</a>).\r\n     * Its properties can be controlled with the <a href=\"#/p5.Camera\">p5.Camera</a>\r\n     * methods.\r\n     *\r\n     * Note: Every 3D sketch starts with a default camera initialized.\r\n     * This camera can be controlled with the canvas properties\r\n     * camera,\r\n     * perspective, ortho,\r\n     * and frustum if it is the only camera\r\n     * in the scene.\r\n     * @method create_camera\r\n     * @return {p5.Camera} The newly created camera object.\r\n     */\r\n    create_camera() {\r\n      this.pInst.createCamera();\r\n    }\r\n    /**\r\n     * Creates a new <a href=\"#/p5.Shader\">p5.Shader</a> object\r\n     * from the provided vertex and fragment shader code.\r\n     *\r\n     * Note, shaders can only be used in WEBGL mode.\r\n     * @method create_shader\r\n     * @param {String} vertSrc source code for the vertex shader\r\n     * @param {String} fragSrc source code for the fragment shader\r\n     * @returns {p5.Shader} a shader object created from the provided\r\n     */\r\n    create_shader() {\r\n      this.pInst.createShader(...arguments);\r\n    }\r\n  };\r\n","export const addCanvasProperties = (baseClass) =>\r\n  class extends baseClass {\r\n    #background;\r\n    /**\r\n     * The background property sets the color or image used\r\n     * for the background of the p5.js canvas. The default background is transparent.\r\n     * A <a href=\"https://p5js.org/reference/#/p5.Color\">p5.Color</a> object can be provided to set the background color.\r\n     *\r\n     * A <a href=\"https://p5js.org/reference/#/p5.Image\">p5.Image</a> can also be provided to set the background image.\r\n     *\r\n     * The arguments to <a href=\"https://p5js.org/reference/#/p5/color\">color()</a> can also be provided,\r\n     * separated by commas.\r\n     * @type {p5.Color|p5.Image}\r\n     */\r\n    get background() {\r\n      return this.#background;\r\n    }\r\n    set background(c) {\r\n      if (c instanceof p5.Color || c instanceof p5.Image) this.#background = c;\r\n      this.#background = this.pInst.color(c);\r\n    }\r\n    /**\r\n     * Sets the cursor when hovering over the canvas.\r\n     *\r\n     * You can set cursor to any of the following constants:\r\n     * ARROW, CROSS, HAND, MOVE, TEXT and WAIT\r\n     *\r\n     * You may also set cursor to the URL of an image file. The recommended size\r\n     * is 16x16 or 32x32 pixels. (Allowed File extensions: .cur, .gif, .jpg, .jpeg, .png)\r\n     *\r\n     * For more information on Native CSS cursors and url visit:\r\n     * https://developer.mozilla.org/en-US/docs/Web/CSS/cursor\r\n     *\r\n     * You may also set cursor to \"type, x, y\", where type is one of the types above,\r\n     * x is the horizontal active spot of the cursor (must be less than 32)\r\n     * and\r\n     * y is the vertical active spot of the cursor (must be less than 32)\r\n     * @type {string}\r\n     */\r\n    get cursor() {\r\n      return this.style.cursor;\r\n    }\r\n    set cursor(val) {\r\n      const { pInst } = this;\r\n      if (val === this.NONE) pInst.noCursor();\r\n      else if (Array.isArray(val)) pInst.cursor(...val);\r\n      else pInst.cursor(val);\r\n    }\r\n    get description() {\r\n      const { pInst } = this;\r\n      const cnvId = this.id;\r\n      const descContainer = pInst.dummyDOM.querySelector(\r\n        `#${cnvId}_Description`\r\n      );\r\n      if (descContainer) return descContainer;\r\n      const labelContainer = pInst.dummyDOM.querySelector(`#${cnvId}_Label`);\r\n      return labelContainer;\r\n    }\r\n    set description(val) {\r\n      if (Array.isArray(val)) this.pInst.describe(...val);\r\n      else this.pInst.describe(val);\r\n    }\r\n    /**\r\n     * The height of the canvas in pixels.\r\n     * @type {number}\r\n     */\r\n    get height() {\r\n      return this.pInst.height;\r\n    }\r\n    set height(val) {\r\n      if (val === this.height || isNaN(val)) return;\r\n      this.#resize(this.width, val);\r\n    }\r\n    get orderedAttributeNames() {\r\n      //  Remove 'is' and 'style' from attrNames\r\n      return super.orderedAttributeNames.filter(\r\n        (v) => v !== \"is\" && v != \"style\"\r\n      );\r\n    }\r\n    set loop(val) {\r\n      if (val) this.pInst.loop();\r\n      else this.pInst.noLoop();\r\n    }\r\n    #resize(w, h) {\r\n      if (w === this.width && h === this.height) return;\r\n      const { pInst } = this;\r\n      const props = {};\r\n      for (const key in pInst.drawingContext) {\r\n        const val = pInst.drawingContext[key];\r\n        if (typeof val !== \"object\" && typeof val !== \"function\") {\r\n          props[key] = val;\r\n        }\r\n      }\r\n      pInst.width = pInst._renderer.width = w;\r\n      pInst.height = pInst._renderer.height = h;\r\n      this.setAttribute(\"width\", w * pInst._pixelDensity);\r\n      this.setAttribute(\"height\", h * pInst._pixelDensity);\r\n      this.style.width = `${w}px`;\r\n      this.style.height = `${h}px`;\r\n      pInst.drawingContext.scale(pInst._pixelDensity, pInst._pixelDensity);\r\n      for (const savedKey in props) {\r\n        try {\r\n          pInst.drawingContext[savedKey] = props[savedKey];\r\n        } catch (err) {}\r\n      }\r\n      pInst.drawingContext.scale(pInst._pixelDensity, pInst._pixelDensity);\r\n      pInst.redraw();\r\n    }\r\n    /**\r\n     * The width of the canvas in pixels.\r\n     * @type {number}\r\n     */\r\n    get width() {\r\n      return this.pInst.width;\r\n    }\r\n    set width(val) {\r\n      if (val === this.width || isNaN(val)) return;\r\n      this.#resize(val, this.height);\r\n    }\r\n  };\r\n","export const addCanvasMethods = (baseClass) =>\r\n  class extends baseClass {\r\n    attributeInherited(attributeName) {\r\n      if (this.hasAttribute(attributeName) || attributeName in this.defaults)\r\n        return true;\r\n      return super.attributeInherited(attributeName);\r\n    }\r\n    runCode() {\r\n      const canvas = this;\r\n      const sketch = (pInst) => {\r\n        canvas.defaults = {\r\n          x: 0,\r\n          x1: 0,\r\n          x2: 0,\r\n          x3: 100,\r\n          x4: 100,\r\n          cx: 0,\r\n          y: 0,\r\n          y1: 0,\r\n          y2: 100,\r\n          y3: 100,\r\n          y4: 0,\r\n          cy: 0,\r\n          z: 0,\r\n          w: 100,\r\n          h: 100,\r\n          d: 100,\r\n          size: 100,\r\n          start_angle: 0,\r\n          stop_angle: pInst.PI,\r\n          vector: pInst.createVector(),\r\n          v1: 255,\r\n          v2: 255,\r\n          v3: 255,\r\n          rx: 1,\r\n          ry: 1,\r\n          rz: -1,\r\n          img: pInst.createImage(100, 100),\r\n          content: \"\",\r\n          on: true,\r\n          repeat: false,\r\n          change: {},\r\n        };\r\n\r\n        pInst.preload = () => pInst.loadAssets();\r\n\r\n        pInst.setup = function () {\r\n          canvas.setup(pInst, canvas);\r\n          // Set default dimensions (100, 100)\r\n          canvas.width = 100;\r\n          canvas.height = 100;\r\n          //  Set default background to transparent\r\n          canvas.background = pInst.color(0, 0);\r\n          pInst.assignCanvas(canvas, canvas.constructor.renderer);\r\n        };\r\n        pInst.draw = function () {\r\n          const state = canvas.updateState(canvas.defaults);\r\n          pInst.background(canvas.background);\r\n          for (const child of canvas.children) {\r\n            child.draw?.(state);\r\n          }\r\n        };\r\n      };\r\n      new p5(sketch);\r\n    }\r\n  };\r\n","export const addColorConstants = (baseClass) =>\n  class extends baseClass {\n    get NONE() {\n      return \"#0000\";\n    }\n  };\n\nexport const addStroke = (baseClass) =>\n  class extends baseClass {\n    #stroke;\n    /**\n     * Sets the color used to draw lines and borders around shapes. This color\n     * is either a <a href=\"#/p5.Color\">p5.Color</a> object or a comma\n     * separated list of values to pass into\n     * <a href=\"https://p5js.org/reference/#/p5/color\">color()</a>.\n     * @type {p5.Color}\n     */\n    get stroke() {\n      return this.#stroke;\n    }\n    set stroke(val) {\n      const { pInst } = this;\n      if (val === this.NONE) pInst.noStroke();\n      else pInst.stroke(val);\n      this.#stroke = pInst.color(\n        pInst._renderer.isP3D\n          ? pInst._renderer.curStrokeColor\n          : pInst.drawingContext.strokeStyle\n      );\n    }\n  };\n\nexport const addFillStroke = (baseClass) =>\n  class extends addStroke(baseClass) {\n    #fill;\n    /**\n     * Sets the color used to fill shapes. This may be a\n     * <a href=\"https://p5js.org/reference/#/p5.Color\">p5.Color</a> object or\n     * a comma separated list of values to pass into\n     * <a href=\"https://p5js.org/reference/#/p5/color\">color()</a>.\n     * @type {p5.Color}\n     */\n    get fill() {\n      return this.#fill;\n    }\n    set fill(val) {\n      const { pInst } = this;\n      if (val === this.NONE) pInst.noFill();\n      else pInst.fill(val);\n      this.#fill = pInst.color(\n        pInst._renderer.isP3D\n          ? pInst._renderer.curFillColor\n          : pInst.drawingContext.fillStyle\n      );\n    }\n  };\n","export const addColorMethods = (baseClass) =>\n  class extends baseClass {\n    lerp_color() {\n      return this.pInst.lerpColor(...arguments);\n    }\n  };\n","export const addEnvironmentProps = (baseClass) =>\r\n  class extends baseClass {\r\n    /**\r\n     * The delta_time property contains the time\r\n     * difference between the beginning of the previous frame and the beginning\r\n     * of the current frame in milliseconds.\r\n     *\r\n     * This variable is useful for creating time sensitive animation or physics\r\n     * calculation that should stay constant regardless of frame rate.\r\n     * (read-only)\r\n     * @readonly\r\n     * @type {number}\r\n     */\r\n    get delta_time() {\r\n      return this.pInst.deltaTime;\r\n    }\r\n    /**\r\n     * screen stores information about the screen displaying the canvas.\r\n     * To get the dimensions of the screen, use:\r\n     * ```\r\n     * screen.width\r\n     * screen.height\r\n     * ```\r\n     * screen is available in any browser and is not specific to this\r\n     * library.\r\n     * The full documentation is here:\r\n     * https://developer.mozilla.org/en-US/docs/Web/API/Screen\r\n     * (read-only)\r\n     * @readonly\r\n     */\r\n    get screen() {\r\n      return screen;\r\n    }\r\n  };\r\n","import { addP5PropsAndMethods } from \"../core\";\r\nimport { addCanvasProperties } from \"../properties/canvas_props\";\r\nimport { addCanvasMethods } from \"../methods/canvas_methods\";\r\n\r\n/**\r\n * The `<canvas>` element is a rectangular area of the window for rendering\r\n * imagery. All child elements are rendered to the canvas.\r\n *\r\n * This canvas will render 2D elements only. For a 3D canvas, use\r\n * ```<canvas-3d>```.\r\n */\r\nclass Canvas extends addCanvasMethods(\r\n  addCanvasProperties(addP5PropsAndMethods(HTMLCanvasElement))\r\n) {\r\n  static renderer = \"p2d\";\r\n\r\n  constructor() {\r\n    super();\r\n    window.addEventListener(\"customElementsDefined\", this.runCode.bind(this));\r\n  }\r\n}\r\ncustomElements.define(\"p-canvas\", Canvas, { extends: \"canvas\" });\r\n\r\n/**\r\n * The ```<canvas-3d>``` element is a ```<canvas>``` element\r\n * for rendering 3D elements.\r\n */\r\nclass WebGLCanvas extends addCanvasMethods(\r\n  addCanvasProperties(addP5PropsAndMethods(HTMLCanvasElement))\r\n) {\r\n  #debug_mode;\r\n  #orbit_control;\r\n  static renderer = \"webgl\";\r\n  constructor() {\r\n    super();\r\n    window.addEventListener(\"customElementsDefined\", this.runCode.bind(this));\r\n  }\r\n  /**\r\n   * Sets the current (active) camera of a 3D sketch.\r\n   * Allows for switching between multiple cameras.\r\n   *\r\n   * Comma-separated arguments for\r\n   * <a href=\"https://p5js.org/reference/#/p5/camera\">camera()</a>\r\n   * may also be provided to adjust the current camera.\r\n   *\r\n   * @type {p5.Camera}\r\n   * */\r\n  get camera() {\r\n    return this.pInst._renderer._curCamera;\r\n  }\r\n  set camera(val) {\r\n    const { pInst } = this;\r\n    if (val instanceof p5.Camera) pInst.setCamera(val);\r\n    else if (Array.isArray(val)) pInst.camera(...val);\r\n    else pInst.camera(val);\r\n  }\r\n  /**\r\n   * debug_mode helps visualize 3D space by adding a grid to indicate where the\r\n   * ‘ground’ is in a sketch and an axes icon which indicates the +X, +Y, and +Z\r\n   * directions. This property can be set to \"true\" to create a\r\n   * default grid and axes icon, or it can be set to a comma-separated list\r\n   * of values to pass into\r\n   * <a href=\"https://p5js.org/reference/#/p5/debugMode\">debugMode()</a>.\r\n   *\r\n   * By default, the grid will run through the origin (0,0,0) of the sketch\r\n   * along the XZ plane\r\n   * and the axes icon will be offset from the origin.  Both the grid and axes\r\n   * icon will be sized according to the current canvas size.\r\n   * Note that because the\r\n   * grid runs parallel to the default camera view, it is often helpful to use\r\n   * debug_mode along with orbit_control to allow full view of the grid.\r\n   * @type {boolean}\r\n   */\r\n  get debug_mode() {\r\n    return this.#debug_mode;\r\n  }\r\n  set debug_mode(val) {\r\n    const { pInst } = this;\r\n    if (val === false) {\r\n      pInst.noDebugMode();\r\n      this.#debug_mode = false;\r\n      return;\r\n    } else if (val === true) pInst.debugMode();\r\n    else if (Array.isArray(val)) pInst.debugMode(...val);\r\n    else pInst.debugMode(val);\r\n    this.#debug_mode = true;\r\n  }\r\n  /**\r\n   * Allows movement around a 3D sketch using a mouse or trackpad.\r\n   * Left-clicking and dragging will rotate the camera position about the\r\n   * center of the sketch,\r\n   * right-clicking and dragging will pan the camera position without rotation,\r\n   * and using the mouse wheel (scrolling) will move the camera closer or\r\n   * further\r\n   * from the center of the sketch. This property can be set with parameters\r\n   * dictating sensitivity to mouse movement along the X, Y, and Z axes.\r\n   * Setting orbit_control=\"true\" is equivalent to setting\r\n   * orbit_control=\"1, 1\".\r\n   * To reverse direction of movement in either axis, enter a negative number\r\n   * for sensitivity.\r\n   * @type {boolean}\r\n   * */\r\n  get orbit_control() {\r\n    return this.#orbit_control;\r\n  }\r\n  set orbit_control(val) {\r\n    if (val === false) return (this.#orbit_control = false);\r\n    this.#orbit_control = true;\r\n    if (Array.isArray(val)) return this.pInst.orbitControl(...val);\r\n    this.pInst.orbitControl();\r\n  }\r\n  /**\r\n   * Sets an orthographic projection for the current camera in a 3D sketch\r\n   * and defines a box-shaped viewing frustum within which objects are seen.\r\n   * In this projection, all objects with the same dimension appear the same\r\n   * size, regardless of whether they are near or far from the camera.\r\n   *\r\n   * This may be set to a comma-separated list of arguments to\r\n   * <a href=\"https://p5js.org/reference/#/p5/ortho\">ortho()</a>\r\n   *\r\n   * If set to \"true\", the following default is used:\r\n   * ortho(-width/2, width/2, -height/2, height/2).\r\n   *\r\n   * @type {boolean}\r\n   */\r\n  set ortho(val) {\r\n    if (val === true) this.pInst.ortho();\r\n    else if (Array.isArray(val)) this.pInst.ortho(...val);\r\n    else if (val !== false) this.pInst.ortho(val);\r\n  }\r\n}\r\ncustomElements.define(\"p-canvas-3d\", WebGLCanvas, {\r\n  extends: \"canvas\",\r\n});\r\n","/*\nRepo: https://github.com/bmoren/p5.collide2D/\nCreated by http://benmoren.com\nSome functions and code modified version from http://www.jeffreythompson.org/collision-detection\nVersion v0.7.3 | June 22, 2020\nCC BY-NC-SA 4.0\n*/\n\np5.prototype._collide_debug = false;\n\np5.prototype.collide_debug = function (debugMode) {\n  _collideDebug = debugMode;\n};\n\np5.prototype.collider_type = {\n  point: \"point\",\n  circle: \"circle\",\n  ellipse: \"ellipse\",\n  rect: \"rect\",\n  line: \"line\",\n  arc: \"arc\",\n  triangle: \"triangle\",\n  poly: \"poly\",\n};\n\np5.prototype.collide_elements = function (elementA, elementB) {\n  const { collider: colliderA } = elementA;\n  const { collider: colliderB } = elementB;\n  const argsA = elementA.collision_args;\n  const argsB = elementB.collision_args;\n  const fnNameForward = `collide_${colliderA}_${colliderB}`;\n  if (fnNameForward in this) return this[fnNameForward](...argsA, ...argsB);\n  const fnNameBackward = `collide_${colliderB}_${colliderA}`;\n  if (fnNameBackward in this) return this[fnNameBackward](...argsB, ...argsA);\n  console.warn(\n    `Collision check between ${colliderA} and ${colliderB} has not been implemented`\n  );\n  return false;\n};\n\n/*~++~+~+~++~+~++~++~+~+~ 2D ~+~+~++~+~++~+~+~+~+~+~+~+~+~+~+*/\n\np5.prototype.collide_rect_rect = function (x, y, w, h, x2, y2, w2, h2) {\n  //2d\n  //add in a thing to detect rectMode CENTER\n  if (\n    x + w >= x2 && // r1 right edge past r2 left\n    x <= x2 + w2 && // r1 left edge past r2 right\n    y + h >= y2 && // r1 top edge past r2 bottom\n    y <= y2 + h2\n  ) {\n    // r1 bottom edge past r2 top\n    return true;\n  }\n  return false;\n};\n\n// p5.vector version of collideRectRect\np5.prototype.collide_rect_rect_vector = function (p1, sz, p2, sz2) {\n  return p5.prototype.collide_rect_rect(\n    p1.x,\n    p1.y,\n    sz.x,\n    sz.y,\n    p2.x,\n    p2.y,\n    sz2.x,\n    sz2.y\n  );\n};\n\np5.prototype.collide_rect_circle = function (rx, ry, rw, rh, cx, cy, diameter) {\n  //2d\n  // temporary variables to set edges for testing\n  var testX = cx;\n  var testY = cy;\n\n  // which edge is closest?\n  if (cx < rx) {\n    testX = rx; // left edge\n  } else if (cx > rx + rw) {\n    testX = rx + rw;\n  } // right edge\n\n  if (cy < ry) {\n    testY = ry; // top edge\n  } else if (cy > ry + rh) {\n    testY = ry + rh;\n  } // bottom edge\n\n  // // get distance from closest edges\n  var distance = this.dist(cx, cy, testX, testY);\n\n  // if the distance is less than the radius, collision!\n  if (distance <= diameter / 2) {\n    return true;\n  }\n  return false;\n};\n\n// p5.vector version of collideRectCircle\np5.prototype.collide_rect_circle_vector = function (r, sz, c, diameter) {\n  return p5.prototype.collide_rect_circle(\n    r.x,\n    r.y,\n    sz.x,\n    sz.y,\n    c.x,\n    c.y,\n    diameter\n  );\n};\n\np5.prototype.collide_circle_circle = function (x, y, d, x2, y2, d2) {\n  //2d\n  if (this.dist(x, y, x2, y2) <= d / 2 + d2 / 2) {\n    return true;\n  }\n  return false;\n};\n\n// p5.vector version of collideCircleCircle\np5.prototype.collide_circle_circle_vector = function (p1, d, p2, d2) {\n  return p5.prototype.collide_circle_circle(p1.x, p1.y, d, p2.x, p2.y, d2);\n};\n\np5.prototype.collide_point_circle = function (x, y, cx, cy, d) {\n  //2d\n  if (this.dist(x, y, cx, cy) <= d / 2) {\n    return true;\n  }\n  return false;\n};\n\n// p5.vector version of collidePointCircle\np5.prototype.collide_point_circle_vector = function (p, c, d) {\n  return p5.prototype.collide_point_circle(p.x, p.y, c.x, c.y, d);\n};\n\np5.prototype.collide_point_ellipse = function (x, y, cx, cy, dx, dy) {\n  //2d\n  var rx = dx / 2,\n    ry = dy / 2;\n  // Discarding the points outside the bounding box\n  if (x > cx + rx || x < cx - rx || y > cy + ry || y < cy - ry) {\n    return false;\n  }\n  // Compare the point to its equivalent on the ellipse\n  var xx = x - cx,\n    yy = y - cy;\n  var eyy = (ry * this.sqrt(this.abs(rx * rx - xx * xx))) / rx;\n  return yy <= eyy && yy >= -eyy;\n};\n\n// p5.vector version of collidePointEllipse\np5.prototype.collide_point_ellipse_vector = function (p, c, d) {\n  return p5.prototype.collide_point_ellipse(p.x, p.y, c.x, c.y, d.x, d.y);\n};\n\np5.prototype.collide_point_rect = function (pointX, pointY, x, y, xW, yW) {\n  //2d\n  if (\n    pointX >= x && // right of the left edge AND\n    pointX <= x + xW && // left of the right edge AND\n    pointY >= y && // below the top AND\n    pointY <= y + yW\n  ) {\n    // above the bottom\n    return true;\n  }\n  return false;\n};\n\n// p5.vector version of collidePointRect\np5.prototype.collide_point_rect_vector = function (point, p1, sz) {\n  return p5.prototype.collide_point_rect(\n    point.x,\n    point.y,\n    p1.x,\n    p1.y,\n    sz.x,\n    sz.y\n  );\n};\n//  TODO - Accommodate lines with higher stroke_weight\np5.prototype.collide_point_line = function (px, py, x1, y1, x2, y2, buffer) {\n  // get distance from the point to the two ends of the line\n  var d1 = this.dist(px, py, x1, y1);\n  var d2 = this.dist(px, py, x2, y2);\n\n  // get the length of the line\n  var lineLen = this.dist(x1, y1, x2, y2);\n\n  // since floats are so minutely accurate, add a little buffer zone that will give collision\n  if (buffer === undefined) {\n    buffer = 0.1;\n  } // higher # = less accurate\n\n  // if the two distances are equal to the line's length, the point is on the line!\n  // note we use the buffer here to give a range, rather than one #\n  if (d1 + d2 >= lineLen - buffer && d1 + d2 <= lineLen + buffer) {\n    return true;\n  }\n  return false;\n};\n\n// p5.vector version of collidePointLine\np5.prototype.collide_point_line_vector = function (point, p1, p2, buffer) {\n  return p5.prototype.collide_point_line(\n    point.x,\n    point.y,\n    p1.x,\n    p1.y,\n    p2.x,\n    p2.y,\n    buffer\n  );\n};\n\np5.prototype.collide_line_circle = function (x1, y1, x2, y2, cx, cy, diameter) {\n  // is either end INSIDE the circle?\n  // if so, return true immediately\n  var inside1 = this.collide_point_circle(x1, y1, cx, cy, diameter);\n  var inside2 = this.collide_point_circle(x2, y2, cx, cy, diameter);\n  if (inside1 || inside2) return true;\n\n  // get length of the line\n  var distX = x1 - x2;\n  var distY = y1 - y2;\n  var len = this.sqrt(distX * distX + distY * distY);\n\n  // get dot product of the line and circle\n  var dot = ((cx - x1) * (x2 - x1) + (cy - y1) * (y2 - y1)) / this.pow(len, 2);\n\n  // find the closest point on the line\n  var closestX = x1 + dot * (x2 - x1);\n  var closestY = y1 + dot * (y2 - y1);\n\n  // is this point actually on the line segment?\n  // if so keep going, but if not, return false\n  var onSegment = this.collide_point_line(closestX, closestY, x1, y1, x2, y2);\n  if (!onSegment) return false;\n\n  // draw a debug circle at the closest point on the line\n  if (this._collideDebug) {\n    this.ellipse(closestX, closestY, 10, 10);\n  }\n\n  // get distance to closest point\n  distX = closestX - cx;\n  distY = closestY - cy;\n  var distance = this.sqrt(distX * distX + distY * distY);\n\n  if (distance <= diameter / 2) {\n    return true;\n  }\n  return false;\n};\n\n// p5.vector version of collideLineCircle\np5.prototype.collide_line_circle_vector = function (p1, p2, c, diameter) {\n  return p5.prototype.collide_line_circle(\n    p1.x,\n    p1.y,\n    p2.x,\n    p2.y,\n    c.x,\n    c.y,\n    diameter\n  );\n};\np5.prototype.collide_line_line = function (\n  x1,\n  y1,\n  x2,\n  y2,\n  x3,\n  y3,\n  x4,\n  y4,\n  calcIntersection\n) {\n  var intersection;\n\n  // calculate the distance to intersection point\n  var uA =\n    ((x4 - x3) * (y1 - y3) - (y4 - y3) * (x1 - x3)) /\n    ((y4 - y3) * (x2 - x1) - (x4 - x3) * (y2 - y1));\n  var uB =\n    ((x2 - x1) * (y1 - y3) - (y2 - y1) * (x1 - x3)) /\n    ((y4 - y3) * (x2 - x1) - (x4 - x3) * (y2 - y1));\n\n  // if uA and uB are between 0-1, lines are colliding\n  if (uA >= 0 && uA <= 1 && uB >= 0 && uB <= 1) {\n    if (this._collideDebug || calcIntersection) {\n      // calc the point where the lines meet\n      var intersectionX = x1 + uA * (x2 - x1);\n      var intersectionY = y1 + uA * (y2 - y1);\n    }\n\n    if (this._collideDebug) {\n      this.ellipse(intersectionX, intersectionY, 10, 10);\n    }\n\n    if (calcIntersection) {\n      intersection = {\n        x: intersectionX,\n        y: intersectionY,\n      };\n      return intersection;\n    } else {\n      return true;\n    }\n  }\n  if (calcIntersection) {\n    intersection = {\n      x: false,\n      y: false,\n    };\n    return intersection;\n  }\n  return false;\n};\n\n// p5.vector version of collideLineLine\np5.prototype.collide_line_line_vector = function (\n  p1,\n  p2,\n  p3,\n  p4,\n  calcIntersection\n) {\n  return p5.prototype.collide_line_line(\n    p1.x,\n    p1.y,\n    p2.x,\n    p2.y,\n    p3.x,\n    p3.y,\n    p4.x,\n    p4.y,\n    calcIntersection\n  );\n};\n\np5.prototype.collide_line_rect = function (\n  x1,\n  y1,\n  x2,\n  y2,\n  rx,\n  ry,\n  rw,\n  rh,\n  calcIntersection\n) {\n  // check if the line has hit any of the rectangle's sides. uses the collideLineLine function above\n  var left, right, top, bottom, intersection;\n\n  if (calcIntersection) {\n    left = this.collide_line_line(x1, y1, x2, y2, rx, ry, rx, ry + rh, true);\n    right = this.collide_line_line(\n      x1,\n      y1,\n      x2,\n      y2,\n      rx + rw,\n      ry,\n      rx + rw,\n      ry + rh,\n      true\n    );\n    top = this.collide_line_line(x1, y1, x2, y2, rx, ry, rx + rw, ry, true);\n    bottom = this.collide_line_line(\n      x1,\n      y1,\n      x2,\n      y2,\n      rx,\n      ry + rh,\n      rx + rw,\n      ry + rh,\n      true\n    );\n    intersection = {\n      left: left,\n      right: right,\n      top: top,\n      bottom: bottom,\n    };\n  } else {\n    //return booleans\n    left = this.collide_line_line(x1, y1, x2, y2, rx, ry, rx, ry + rh);\n    right = this.collide_line_line(\n      x1,\n      y1,\n      x2,\n      y2,\n      rx + rw,\n      ry,\n      rx + rw,\n      ry + rh\n    );\n    top = this.collide_line_line(x1, y1, x2, y2, rx, ry, rx + rw, ry);\n    bottom = this.collide_line_line(\n      x1,\n      y1,\n      x2,\n      y2,\n      rx,\n      ry + rh,\n      rx + rw,\n      ry + rh\n    );\n  }\n\n  // if ANY of the above are true, the line has hit the rectangle\n  if (left || right || top || bottom) {\n    if (calcIntersection) {\n      return intersection;\n    }\n    return true;\n  }\n  return false;\n};\n\n// p5.vector version of collideLineRect\np5.prototype.collide_line_rect_vector = function (\n  p1,\n  p2,\n  r,\n  rsz,\n  calcIntersection\n) {\n  return p5.prototype.collide_line_rect(\n    p1.x,\n    p1.y,\n    p2.x,\n    p2.y,\n    r.x,\n    r.y,\n    rsz.x,\n    rsz.y,\n    calcIntersection\n  );\n};\n\np5.prototype.collide_point_poly = function (px, py, vertices) {\n  var collision = false;\n\n  // go through each of the vertices, plus the next vertex in the list\n  var next = 0;\n  for (var current = 0; current < vertices.length; current++) {\n    // get next vertex in list if we've hit the end, wrap around to 0\n    next = current + 1;\n    if (next === vertices.length) next = 0;\n\n    // get the PVectors at our current position this makes our if statement a little cleaner\n    var vc = vertices[current]; // c for \"current\"\n    var vn = vertices[next]; // n for \"next\"\n\n    // compare position, flip 'collision' variable back and forth\n    if (\n      ((vc.y >= py && vn.y < py) || (vc.y < py && vn.y >= py)) &&\n      px < ((vn.x - vc.x) * (py - vc.y)) / (vn.y - vc.y) + vc.x\n    ) {\n      collision = !collision;\n    }\n  }\n  return collision;\n};\n\n// p5.vector version of collidePointPoly\np5.prototype.collide_point_poly_vector = function (p1, vertices) {\n  return p5.prototype.collide_point_poly(p1.x, p1.y, vertices);\n};\n\n// POLYGON/CIRCLE\np5.prototype.collide_circle_poly = function (\n  cx,\n  cy,\n  diameter,\n  vertices,\n  interior\n) {\n  if (interior === undefined) {\n    interior = false;\n  }\n\n  // go through each of the vertices, plus the next vertex in the list\n  var next = 0;\n  for (var current = 0; current < vertices.length; current++) {\n    // get next vertex in list if we've hit the end, wrap around to 0\n    next = current + 1;\n    if (next === vertices.length) next = 0;\n\n    // get the PVectors at our current position this makes our if statement a little cleaner\n    var vc = vertices[current]; // c for \"current\"\n    var vn = vertices[next]; // n for \"next\"\n\n    // check for collision between the circle and a line formed between the two vertices\n    var collision = this.collide_line_circle(\n      vc.x,\n      vc.y,\n      vn.x,\n      vn.y,\n      cx,\n      cy,\n      diameter\n    );\n    if (collision) return true;\n  }\n\n  // test if the center of the circle is inside the polygon\n  if (interior === true) {\n    var centerInside = this.collide_point_poly(cx, cy, vertices);\n    if (centerInside) return true;\n  }\n\n  // otherwise, after all that, return false\n  return false;\n};\n\n// p5.vector version of collideCirclePoly\np5.prototype.collide_circle_poly_vector = function (\n  c,\n  diameter,\n  vertices,\n  interior\n) {\n  return p5.prototype.collide_circle_poly(\n    c.x,\n    c.y,\n    diameter,\n    vertices,\n    interior\n  );\n};\n\np5.prototype.collide_rect_poly = function (rx, ry, rw, rh, vertices, interior) {\n  if (interior == undefined) {\n    interior = false;\n  }\n\n  // go through each of the vertices, plus the next vertex in the list\n  var next = 0;\n  for (var current = 0; current < vertices.length; current++) {\n    // get next vertex in list if we've hit the end, wrap around to 0\n    next = current + 1;\n    if (next === vertices.length) next = 0;\n\n    // get the PVectors at our current position this makes our if statement a little cleaner\n    var vc = vertices[current]; // c for \"current\"\n    var vn = vertices[next]; // n for \"next\"\n\n    // check against all four sides of the rectangle\n    var collision = this.collide_line_rect(\n      vc.x,\n      vc.y,\n      vn.x,\n      vn.y,\n      rx,\n      ry,\n      rw,\n      rh\n    );\n    if (collision) return true;\n\n    // optional: test if the rectangle is INSIDE the polygon note that this iterates all sides of the polygon again, so only use this if you need to\n    if (interior === true) {\n      var inside = this.collide_point_poly(rx, ry, vertices);\n      if (inside) return true;\n    }\n  }\n\n  return false;\n};\n\n// p5.vector version of collideRectPoly\np5.prototype.collide_rect_poly_vector = function (r, rsz, vertices, interior) {\n  return p5.prototype.collide_rect_poly(\n    r.x,\n    r.y,\n    rsz.x,\n    rsz.y,\n    vertices,\n    interior\n  );\n};\n\np5.prototype.collide_line_poly = function (x1, y1, x2, y2, vertices) {\n  // go through each of the vertices, plus the next vertex in the list\n  var next = 0;\n  for (var current = 0; current < vertices.length; current++) {\n    // get next vertex in list if we've hit the end, wrap around to 0\n    next = current + 1;\n    if (next === vertices.length) next = 0;\n\n    // get the PVectors at our current position extract X/Y coordinates from each\n    var x3 = vertices[current].x;\n    var y3 = vertices[current].y;\n    var x4 = vertices[next].x;\n    var y4 = vertices[next].y;\n\n    // do a Line/Line comparison if true, return 'true' immediately and stop testing (faster)\n    var hit = this.collide_line_line(x1, y1, x2, y2, x3, y3, x4, y4);\n    if (hit) {\n      return true;\n    }\n  }\n  // never got a hit\n  return false;\n};\n\n// p5.vector version of collideLinePoly\np5.prototype.collide_line_poly_vector = function (p1, p2, vertice) {\n  return p5.prototype.collide_line_poly(p1.x, p1.y, p2.x, p2.y, vertice);\n};\n\np5.prototype.collide_poly_poly = function (p1, p2, interior) {\n  if (interior === undefined) {\n    interior = false;\n  }\n\n  // go through each of the vertices, plus the next vertex in the list\n  var next = 0;\n  for (var current = 0; current < p1.length; current++) {\n    // get next vertex in list, if we've hit the end, wrap around to 0\n    next = current + 1;\n    if (next === p1.length) next = 0;\n\n    // get the PVectors at our current position this makes our if statement a little cleaner\n    var vc = p1[current]; // c for \"current\"\n    var vn = p1[next]; // n for \"next\"\n\n    //use these two points (a line) to compare to the other polygon's vertices using polyLine()\n    var collision = this.collide_line_poly(vc.x, vc.y, vn.x, vn.y, p2);\n    if (collision) return true;\n\n    //check if the either polygon is INSIDE the other\n    if (interior === true) {\n      collision = this.collide_point_poly(p2[0].x, p2[0].y, p1);\n      if (collision) return true;\n      collision = this.collide_point_poly(p1[0].x, p1[0].y, p2);\n      if (collision) return true;\n    }\n  }\n\n  return false;\n};\n\np5.prototype.collide_poly_poly_vector = function (p1, p2, interior) {\n  return p5.prototype.collide_poly_poly(p1, p2, interior);\n};\n\np5.prototype.collide_point_triangle = function (\n  px,\n  py,\n  x1,\n  y1,\n  x2,\n  y2,\n  x3,\n  y3\n) {\n  // get the area of the triangle\n  var areaOrig = this.abs((x2 - x1) * (y3 - y1) - (x3 - x1) * (y2 - y1));\n\n  // get the area of 3 triangles made between the point and the corners of the triangle\n  var area1 = this.abs((x1 - px) * (y2 - py) - (x2 - px) * (y1 - py));\n  var area2 = this.abs((x2 - px) * (y3 - py) - (x3 - px) * (y2 - py));\n  var area3 = this.abs((x3 - px) * (y1 - py) - (x1 - px) * (y3 - py));\n\n  // if the sum of the three areas equals the original, we're inside the triangle!\n  if (area1 + area2 + area3 === areaOrig) {\n    return true;\n  }\n  return false;\n};\n\n// p5.vector version of collidePointTriangle\np5.prototype.collide_point_triangle_vector = function (p, p1, p2, p3) {\n  return p5.prototype.collide_point_triangle(\n    p.x,\n    p.y,\n    p1.x,\n    p1.y,\n    p2.x,\n    p2.y,\n    p3.x,\n    p3.y\n  );\n};\n\np5.prototype.collide_point_point = function (x, y, x2, y2, buffer) {\n  if (buffer === undefined) {\n    buffer = 0;\n  }\n\n  if (this.dist(x, y, x2, y2) <= buffer) {\n    return true;\n  }\n\n  return false;\n};\n\n// p5.vector version of collidePointPoint\np5.prototype.collide_point_point_vector = function (p1, p2, buffer) {\n  return p5.prototype.collide_point_point(p1.x, p1.y, p2.x, p2.y, buffer);\n};\n//  TODO - accommodate arcs with unequal width and height\np5.prototype.collide_point_arc = function (\n  px,\n  py,\n  ax,\n  ay,\n  arcRadius,\n  arcHeading,\n  arcAngle,\n  buffer\n) {\n  if (buffer === undefined) {\n    buffer = 0;\n  }\n  // point\n  var point = this.createVector(px, py);\n  // arc center point\n  var arcPos = this.createVector(ax, ay);\n  // arc radius vector\n  var radius = this.createVector(arcRadius, 0).rotate(arcHeading);\n\n  var pointToArc = point.copy().sub(arcPos);\n\n  if (point.dist(arcPos) <= arcRadius + buffer) {\n    var dot = radius.dot(pointToArc);\n    var angle = radius.angleBetween(pointToArc);\n    if (dot > 0 && angle <= arcAngle / 2 && angle >= -arcAngle / 2) {\n      return true;\n    }\n  }\n  return false;\n};\n\n// p5.vector version of collidePointArc\np5.prototype.collide_point_arc_vector = function (\n  p1,\n  a,\n  arcRadius,\n  arcHeading,\n  arcAngle,\n  buffer\n) {\n  return p5.prototype.collide_point_arc(\n    p1.x,\n    p1.y,\n    a.x,\n    a.y,\n    arcRadius,\n    arcHeading,\n    arcAngle,\n    buffer\n  );\n};\n","import { RenderedElement } from \"../core\";\r\nimport { addStroke, addFillStroke } from \"../properties/color_props\";\r\nimport {\r\n  addXY,\r\n  addXYZ,\r\n  addXYZ12,\r\n  addY3,\r\n  addXY123,\r\n  addWidthHeight,\r\n  addRectMode,\r\n} from \"../properties/shape_props\";\r\n\r\nconst transformVertexFn = (el) => (v) => {\r\n  const originalPoint = new DOMPoint(v.x, v.y);\r\n  const { x, y } = el.pInst._transform_point_matrix(\r\n    originalPoint,\r\n    el.transform_matrix\r\n  );\r\n  return el.pInst.createVector(x, y);\r\n};\r\n\r\nconst addXYZ1234 = (baseClass) =>\r\n  class extends addXYZ12(addY3(baseClass)) {\r\n    #z3;\r\n    #z4;\r\n    #y4;\r\n    /**\r\n     * The fourth y-coordinate of the element relative to the current anchor.\r\n     * @type {number}\r\n     */\r\n    get y4() {\r\n      return this.#y4;\r\n    }\r\n    set y4(val) {\r\n      if (!isNaN(val)) this.#y4 = val;\r\n      else\r\n        console.error(\r\n          `${this.tagName}'s y4 is being set to ${val}, but it may only be set to a number.`\r\n        );\r\n    }\r\n    /**\r\n     * The first x-coordinate of the element relative to the current anchor.\r\n     * @type {number}\r\n     */\r\n    get z3() {\r\n      return this.#z3;\r\n    }\r\n    set z3(val) {\r\n      if (!isNaN(val)) this.#z3 = val;\r\n      else\r\n        console.error(\r\n          `${this.tagName}'s z3 is being set to ${val}, but it may only be set to a number.`\r\n        );\r\n    }\r\n    /**\r\n     * The fourth z-coordinate of the element relative to the current anchor.\r\n     * @type {number}\r\n     */\r\n    get z4() {\r\n      return this.#z4;\r\n    }\r\n    set z4(val) {\r\n      if (!isNaN(val)) this.#z4 = val;\r\n      else\r\n        console.error(\r\n          `${this.tagName}'s z4 is being set to ${val}, but it may only be set to a number.`\r\n        );\r\n    }\r\n  };\r\n/**\r\n * Draws an arc to the screen. If called with only x, y, w, h, start and stop\r\n * the arc will be drawn and filled as an open pie segment. If a mode\r\n * parameter is provided, the arc will be filled like an open semi-circle\r\n * (OPEN), a closed semi-circle (CHORD), or as a closed pie segment (PIE).\r\n * The origin may be changed with the ellipseMode() function.\r\n *\r\n * The arc is always drawn clockwise from wherever start falls to wherever\r\n * stop falls on the ellipse. Adding or subtracting TWO_PI to either angle\r\n * does not change where they fall. If both start and stop fall at the same\r\n * place, a full ellipse will be drawn. Be aware that the y-axis increases in\r\n * the downward direction, therefore angles are measured clockwise from the\r\n * positive x-direction (\"3 o'clock\").\r\n * @element arc\r\n */\r\nclass Arc extends addXY(addWidthHeight(addFillStroke(RenderedElement))) {\r\n  constructor() {\r\n    super([\r\n      \"x, y, width, height, start_angle, stop_angle, [mode], [detail], [a]\",\r\n    ]);\r\n  }\r\n  get mouse_over() {\r\n    const { mouse_trans_pos_x, mouse_trans_pos_y } = this.pInst;\r\n    const { x, y, width, height, start_angle, stop_angle } = this;\r\n    console.assert(\r\n      width === height,\r\n      \"mouse_over currently only works for arc's with equal width and height.\"\r\n    );\r\n    const arcRadius = width / 2;\r\n    const arcAngle = stop_angle - start_angle;\r\n    const arcRotation = start_angle + arcAngle / 2;\r\n\r\n    return this.pInst.collide_point_arc(\r\n      mouse_trans_pos_x,\r\n      mouse_trans_pos_y,\r\n      x,\r\n      y,\r\n      arcRadius,\r\n      arcRotation,\r\n      arcAngle\r\n    );\r\n  }\r\n}\r\ncustomElements.define(\"p-arc\", Arc);\r\n/**\r\n * Draws an ellipse (oval) to the screen. If no height is specified, the\r\n * value of width is used for both the width and height. If a\r\n * negative height or width is specified, the absolute value is taken.\r\n *\r\n * An ellipse with equal width and height is a circle. The origin may be\r\n * changed with the ellipseMode() function.\r\n * @element ellipse\r\n */\r\nclass Ellipse extends addXY(addWidthHeight(addFillStroke(RenderedElement))) {\r\n  constructor() {\r\n    super([\"x, y, width, [height]\", \"x, y, width, height, [detail]\"]);\r\n  }\r\n  collider = p5.prototype.collider_type.ellipse;\r\n  get collision_args() {\r\n    const originalPoint = new DOMPoint(\r\n      this.this_element.x,\r\n      this.this_element.y\r\n    );\r\n    const { x, y } = this.pInst._transform_point_matrix(\r\n      originalPoint,\r\n      this.transform_matrix\r\n    );\r\n    const { pixel_density } = this.pInst;\r\n    const { w } = this.width * pixel_density;\r\n    const { h } = this.height * pixel_density || w;\r\n    return [x, y, w, h];\r\n  }\r\n  get mouse_over() {\r\n    const { mouse_trans_pos_x, mouse_trans_pos_y } = this.pInst;\r\n    const { x, y, width, height } = this.this_element;\r\n    return this.pInst.collide_point_ellipse(\r\n      mouse_trans_pos_x,\r\n      mouse_trans_pos_y,\r\n      x,\r\n      y,\r\n      width,\r\n      height\r\n    );\r\n  }\r\n}\r\ncustomElements.define(\"p-ellipse\", Ellipse);\r\n/**\r\n * Draws a circle to the screen. A circle is a simple closed shape. It is the\r\n * set of all points in a plane that are at a given distance from a given\r\n * point, the center.\r\n * @element circle\r\n */\r\nclass Circle extends addXY(addFillStroke(RenderedElement)) {\r\n  constructor() {\r\n    super([\"x, y, d\"]);\r\n  }\r\n  collider = p5.prototype.collider_type.circle;\r\n  get collision_args() {\r\n    const originalPoint = new DOMPoint(this.x, this.y);\r\n    const { x, y } = this.pInst._transform_point_matrix(\r\n      originalPoint,\r\n      this.transform_matrix\r\n    );\r\n    const d = this.this_element.d * this.pInst.pow(this.pInst.pixel_density, 2);\r\n    return [x, y, d];\r\n  }\r\n  get mouse_over() {\r\n    const { mouse_trans_pos_x, mouse_trans_pos_y } = this.pInst;\r\n    const { x, y, d } = this.this_element;\r\n    return this.pInst.collide_point_circle(\r\n      mouse_trans_pos_x,\r\n      mouse_trans_pos_y,\r\n      x,\r\n      y,\r\n      d\r\n    );\r\n  }\r\n}\r\ncustomElements.define(\"p-circle\", Circle);\r\n/**\r\n * Draws a line (a direct path between two points) to the screen. This width\r\n * can be modified by using the stroke_weight attribute. A line cannot be\r\n * filled, therefore the fill_color attribute will not affect the color of a\r\n * line. So to color a line, use the stroke attribute.\r\n * @element line\r\n */\r\nclass Line extends addXYZ12(addStroke(RenderedElement)) {\r\n  constructor() {\r\n    super([\"x1, y1, x2, y2\", \"x1, y1, z1, x2, y2, z2\"]);\r\n  }\r\n  collider = p5.prototype.collider_type.line;\r\n  get collision_args() {\r\n    const originalStart = new DOMPoint(\r\n      this.this_element.x1,\r\n      this.this_element.y1\r\n    );\r\n    const { x: x1, y: y1 } = this.pInst._transform_point_matrix(\r\n      originalStart,\r\n      this.transform_matrix\r\n    );\r\n    const originalEnd = new DOMPoint(\r\n      this.this_element.x2,\r\n      this.this_element.y2\r\n    );\r\n    const { x: x2, y: y2 } = this.pInst._transform_point_matrix(\r\n      originalEnd,\r\n      this.transform_matrix\r\n    );\r\n    return [x1, y1, x2, y2];\r\n  }\r\n  get mouse_over() {\r\n    const { mouse_trans_pos_x, mouse_trans_pos_y } = this.pInst;\r\n    const { x1, y1, x2, y2 } = this.this_element;\r\n    return this.pInst.collide_point_line(\r\n      mouse_trans_pos_x,\r\n      mouse_trans_pos_y,\r\n      x1,\r\n      y1,\r\n      x2,\r\n      y2\r\n    );\r\n  }\r\n}\r\ncustomElements.define(\"p-line\", Line);\r\n/**\r\n * Draws a point, a coordinate in space at the dimension of one pixel. The\r\n * color of the point is changed with the stroke attribute. The size of\r\n * the point can be changed with the stroke_weight attribute.\r\n * @element point\r\n */\r\nclass Point extends addXYZ(addStroke(RenderedElement)) {\r\n  constructor() {\r\n    super([\"x, y, [z]\"]);\r\n  }\r\n  collider = p5.prototype.collider_type.circle;\r\n  get collision_args() {\r\n    const originalPoint = new DOMPoint(this.x, this.y);\r\n    const { x, y } = this.pInst._transform_point_matrix(\r\n      originalPoint,\r\n      this.transform_matrix\r\n    );\r\n    const { stroke_weight, pixel_density } = this.pInst;\r\n    const d = stroke_weight * this.pInst.pow(pixel_density, 2);\r\n    return [x, y, d];\r\n  }\r\n  get mouse_over() {\r\n    const {\r\n      x,\r\n      y,\r\n      stroke_weight,\r\n      pixel_density,\r\n      mouse_trans_pos_x,\r\n      mouse_trans_pos_y,\r\n    } = this;\r\n    const d = stroke_weight * this.pInst.pow(pixel_density, 2);\r\n    return this.pInst.collide_point_circle(\r\n      mouse_trans_pos_x,\r\n      mouse_trans_pos_y,\r\n      x,\r\n      y,\r\n      d\r\n    );\r\n  }\r\n}\r\ncustomElements.define(\"p-point\", Point);\r\n/**\r\n * Draws a quad on the canvas. A quad is a quadrilateral, a four-sided\r\n * polygon. It is similar to a rectangle, but the angles between its edges\r\n * are not constrained to ninety degrees. The x1 and y1 attributes set the\r\n * first vertex and the subsequent pairs should proceed clockwise or\r\n * counter-clockwise around the defined shape. z attributes only work when\r\n * quad() is used in WEBGL mode.\r\n * @element quad\r\n */\r\nclass Quad extends addXYZ1234(addFillStroke(RenderedElement)) {\r\n  constructor() {\r\n    super([\r\n      \"x1, y1, x2, y2, x3, y3, x4, y4, [detail_x], [detail_y]\",\r\n      \"x1, y1, z1, x2, y2, z2, x3, y3, z3, x4, y4, z4, [detail_x], [detail_y]\",\r\n    ]);\r\n  }\r\n  collider = p5.prototype.collider_type.poly;\r\n  get collision_args() {\r\n    return [this.vertices.map(transformVertexFn(this))];\r\n  }\r\n  get mouse_over() {\r\n    const { mouse_trans_pos_x, mouse_trans_pos_y } = this.pInst;\r\n    return this.pInst.collide_point_poly(\r\n      mouse_trans_pos_x,\r\n      mouse_trans_pos_y,\r\n      this.vertices\r\n    );\r\n  }\r\n  get vertices() {\r\n    const { x1, y1, x2, y2, x3, y3, x4, y4 } = this;\r\n    return [\r\n      this.pInst.createVector(x1, y1),\r\n      this.pInst.createVector(x2, y2),\r\n      this.pInst.createVector(x3, y3),\r\n      this.pInst.createVector(x4, y4),\r\n    ];\r\n  }\r\n}\r\ncustomElements.define(\"p-quad\", Quad);\r\n/**\r\n * Draws a rectangle on the canvas. A rectangle is a four-sided closed shape\r\n * with every angle at ninety degrees. By default, the x and y attributes\r\n * set the location of the upper-left corner, w sets the width, and h sets\r\n * the height. The way these attributes are interpreted may be changed with\r\n * the rect_mode attribute.\r\n *\r\n * The tl, tr, br and bl attributes, if specified, determine\r\n * corner radius for the top-left, top-right, lower-right and lower-left\r\n * corners, respectively. An omitted corner radius parameter is set to the\r\n * value of the previously specified radius value in the attribute list.\r\n * @element rect\r\n */\r\nclass Rect extends addXY(\r\n  addWidthHeight(addRectMode(addFillStroke(RenderedElement)))\r\n) {\r\n  constructor() {\r\n    super([\r\n      \"x, y, width, [h], [tl], [tr], [br], [bl]\",\r\n      \"x, y, width, height, [detail_x], [detail_y]\",\r\n    ]);\r\n  }\r\n  collider = p5.prototype.collider_type.rect;\r\n  get collision_args() {\r\n    const originalPoint = new DOMPoint(this.x, this.y);\r\n    const { x, y } = this.pInst._transform_point_matrix(\r\n      originalPoint,\r\n      this.transform_matrix\r\n    );\r\n    const { pixel_density } = this.pInst;\r\n    const w = this.width * this.pInst.pow(pixel_density, 2);\r\n    const h = this.height * this.pInst.pow(pixel_density, 2);\r\n    return [x, y, w, h];\r\n  }\r\n  get mouse_over() {\r\n    const { mouse_trans_pos_x, mouse_trans_pos_y } = this.pInst;\r\n    const { x, y, width, height } = this;\r\n    return this.pInst.collide_point_rect(\r\n      mouse_trans_pos_x,\r\n      mouse_trans_pos_y,\r\n      x,\r\n      y,\r\n      width,\r\n      height\r\n    );\r\n  }\r\n}\r\ncustomElements.define(\"p-rect\", Rect);\r\n/**\r\n * Draws a square to the screen. A square is a four-sided shape with every\r\n * angle at ninety degrees, and equal side size. This element is a special\r\n * case of the rect element, where the width and height are the same, and the\r\n * attribute is called \"s\" for side size. By default, the x and y attributes\r\n * set the location of the upper-left corner, and s sets the side size of the\r\n * square. The way these attributes are interpreted, may be changed with the\r\n * rect_mode attribute.\r\n *\r\n * The tl, tr, br, and bl attributes, if specified, determine corner radius\r\n * for the top-left, top-right, lower-right and lower-left corners,\r\n * respectively. An omitted corner radius attribute is set to the value of\r\n * the previously specified radius value in the attribute list.\r\n *\r\n * @element square\r\n */\r\nclass Square extends addXY(addRectMode(addFillStroke(RenderedElement))) {\r\n  #size;\r\n  constructor() {\r\n    super([\"x, y, size, [tl], [tr], [br], [bl]\"]);\r\n  }\r\n  collider = p5.prototype.collider_type.rect;\r\n  get collision_args() {\r\n    const originalPoint = new DOMPoint(this.x, this.y);\r\n    const { x, y } = this.pInst._transform_point_matrix(\r\n      originalPoint,\r\n      this.transform_matrix\r\n    );\r\n    const { pixel_density } = this.pInst;\r\n    const { size } = this;\r\n    const w = size * this.pInst.pow(pixel_density, 2);\r\n    const h = w;\r\n    return [x, y, w, h];\r\n  }\r\n  get mouse_over() {\r\n    const { mouse_trans_pos_x, mouse_trans_pos_y } = this.pInst;\r\n    const { x, y, s } = this;\r\n    return this.pInst.collide_point_rect(\r\n      mouse_trans_pos_x,\r\n      mouse_trans_pos_y,\r\n      x,\r\n      y,\r\n      s,\r\n      s\r\n    );\r\n  }\r\n  /**\r\n   * The side size of the square\r\n   * @type {number}\r\n   */\r\n  get size() {\r\n    return this.#size;\r\n  }\r\n  set size(val) {\r\n    if (!isNaN(val)) this.#size = Number(val);\r\n    else\r\n      console.error(\r\n        `${this.tagName}'s size is being set to ${val}, but it may only be set to a number.`\r\n      );\r\n  }\r\n}\r\ncustomElements.define(\"p-square\", Square);\r\n/**\r\n * Draws a triangle to the canvas. A triangle is a plane created by connecting\r\n * three points. x1 and y1 specify the first point, x2 and y2 specify the\r\n * second point, and x3 and y3 specify the\r\n * third point.\r\n * @element triangle\r\n */\r\nclass Triangle extends addXY123(addFillStroke(RenderedElement)) {\r\n  constructor() {\r\n    const overloads = [\"x1, y1, x2, y2, x3, y3\"];\r\n    super(overloads);\r\n  }\r\n  collider = p5.prototype.collider_type.poly;\r\n  get collision_args() {\r\n    return [this.vertices.map(transformVertexFn(this))];\r\n  }\r\n  get mouse_over() {\r\n    const { mouse_trans_pos_x, mouse_trans_pos_y } = this.pInst;\r\n    const { x1, y1, x2, y2, x3, y3 } = this;\r\n    return this.pInst.collide_point_triangle(\r\n      mouse_trans_pos_x,\r\n      mouse_trans_pos_y,\r\n      x1,\r\n      y1,\r\n      x2,\r\n      y2,\r\n      x3,\r\n      y3\r\n    );\r\n  }\r\n  get vertices() {\r\n    const { x1, y1, x2, y2, x3, y3 } = this;\r\n    return [\r\n      this.pInst.createVector(x1, y1),\r\n      this.pInst.createVector(x2, y2),\r\n      this.pInst.createVector(x3, y3),\r\n    ];\r\n  }\r\n}\r\ncustomElements.define(\"p-triangle\", Triangle);\r\n\r\n/**\r\n * Draws a cubic Bezier curve on the screen. These curves are defined by a\r\n * series of anchor and control points. x1 and y1 specify\r\n * the first anchor point and x4 and y4 specify the other\r\n * anchor point, which become the first and last points on the curve. (x2, y2)\r\n * and (x3, y3) specify the two control points which define the shape\r\n * of the curve. Approximately speaking, control points \"pull\" the curve\r\n * towards them.\r\n *\r\n * Bezier curves were developed by French automotive engineer Pierre Bezier,\r\n * and are commonly used in computer graphics to define gently sloping curves.\r\n * ```<curve>``` element.\r\n * @element bezier\r\n */\r\nclass Bezier extends addXYZ1234(addFillStroke(RenderedElement)) {\r\n  constructor() {\r\n    super([\r\n      \"x1, y1, x2, y2, x3, y3, x4, y4\",\r\n      \"x1, y1, z1, x2, y2, z2, x3, y3, z3, x4, y4, z4\",\r\n    ]);\r\n  }\r\n}\r\ncustomElements.define(\"p-bezier\", Bezier);\r\nclass Curve extends addXYZ1234(addFillStroke(RenderedElement)) {\r\n  constructor() {\r\n    super([\r\n      \"x1, y1, x2, y2, x3, y3, x4, y4\",\r\n      \"x1, y1, z1, x2, y2, z2, x3, y3, z3, x4, y4, z4\",\r\n    ]);\r\n  }\r\n}\r\ncustomElements.define(\"p-curve\", Curve);\r\nclass Contour extends addFillStroke(RenderedElement) {\r\n  constructor() {\r\n    super([\"\"], \"beginContour\");\r\n  }\r\n  endRender() {\r\n    this.pInst.endContour();\r\n  }\r\n}\r\ncustomElements.define(\"p-contour\", Contour);\r\nclass Shape extends addFillStroke(RenderedElement) {\r\n  constructor() {\r\n    super([\"[kind]\"], \"beginShape\");\r\n  }\r\n  collider = p5.prototype.collider_type.poly;\r\n  get collision_args() {\r\n    return [this.vertices.map(transformVertexFn(this))];\r\n  }\r\n  endRender(assigned) {\r\n    if (assigned.hasOwnProperty(\"mode\")) this.pInst.endShape(assigned.mode);\r\n    else this.pInst.endShape();\r\n  }\r\n  get vertices() {\r\n    const arrayFromChildren = (el) => {\r\n      const ca = Array.from(el.children);\r\n      return ca.concat(ca.map(arrayFromChildren)).flat();\r\n    };\r\n    const childArray = arrayFromChildren(this);\r\n    const vertexChildren = childArray.filter(\r\n      (el) => el instanceof Vertex && el.this_element\r\n    );\r\n    const vertices = vertexChildren.map((el) => {\r\n      if (el instanceof QuadraticVertex) {\r\n        const { x3, y3 } = el;\r\n        return this.pInst.createVector(x3, y3);\r\n      }\r\n      const { x, y } = el;\r\n      return this.pInst.createVector(x, y);\r\n    });\r\n    return vertices.concat(vertices.slice(0));\r\n  }\r\n}\r\ncustomElements.define(\"p-shape\", Shape);\r\nclass Vertex extends addXYZ(RenderedElement) {\r\n  constructor() {\r\n    super([\"x, y, [z], [u], [v]\"]);\r\n  }\r\n}\r\ncustomElements.define(\"p-vertex\", Vertex);\r\n\r\nclass QuadraticVertex extends RenderedElement {\r\n  constructor() {\r\n    super([\"cx, cy, x3, y3\", \"cx, cy, cz, x3, y3, z3\"]);\r\n  }\r\n}\r\ncustomElements.define(\"p-quadratic-vertex\", QuadraticVertex);\r\nclass CurveVertex extends addXYZ(RenderedElement) {\r\n  constructor() {\r\n    super([\"x, y\", \"x, y, [z]\"]);\r\n  }\r\n}\r\ncustomElements.define(\"p-curve-vertex\", CurveVertex);\r\n","export const addXY = (baseClass) =>\r\n  class extends baseClass {\r\n    #x;\r\n    #y;\r\n    /**\r\n     * The x-coordinate of the element relative to the current anchor.\r\n     * @type {number}\r\n     */\r\n    get x() {\r\n      return this.#x;\r\n    }\r\n    set x(val) {\r\n      if (!isNaN(val)) this.#x = Number(val);\r\n      else\r\n        console.error(\r\n          `${this.tagName}'s x property is being set to ${val}, but it may only be set to a number`\r\n        );\r\n    }\r\n    /**\r\n     * The y-coordinate of the element relative to the current anchor.\r\n     * @type {number}\r\n     */\r\n    get y() {\r\n      return this.#y;\r\n    }\r\n    set y(val) {\r\n      if (!isNaN(val)) this.#y = Number(val);\r\n      else\r\n        console.error(\r\n          `${this.tagName}'s y property is being set to ${val}, but it may only be set to a number`\r\n        );\r\n    }\r\n  };\r\n\r\nexport const addXYZ = (baseClass) =>\r\n  class extends addXY(baseClass) {\r\n    #z;\r\n    /**\r\n     * The z-coordinate of the element relative to the current anchor.\r\n     * @type {number}\r\n     */\r\n    get z() {\r\n      return this.#z;\r\n    }\r\n    set z(val) {\r\n      if (!isNaN(val)) this.#z = Number(val);\r\n      else\r\n        console.error(\r\n          `${this.tagName}'s z property is being set to ${val}, but it may only be set to a number`\r\n        );\r\n    }\r\n  };\r\n\r\nexport const addWidthHeight = (baseClass) =>\r\n  class extends baseClass {\r\n    #height;\r\n    #width;\r\n    /**\r\n     * The height of the element in pixels.\r\n     * @type {number}\r\n     */\r\n    get height() {\r\n      return this.#height;\r\n    }\r\n    set height(val) {\r\n      if (!isNaN(val)) this.#height = Number(val);\r\n      else\r\n        console.error(\r\n          `${this.tagName}'s height is being set to ${val}, but it may only be set to a number.`\r\n        );\r\n    }\r\n    /**\r\n     * The width of the element in pixels.\r\n     * @type {number}\r\n     */\r\n    get width() {\r\n      return this.#width;\r\n    }\r\n    set width(val) {\r\n      if (!isNaN(val)) this.#width = Number(val);\r\n      else\r\n        console.error(\r\n          `${this.tagName}'s width is being set to ${val}, but it may only be set to a number.`\r\n        );\r\n    }\r\n  };\r\n\r\nexport const addXY12 = (baseClass) =>\r\n  class extends baseClass {\r\n    #x1;\r\n    #y1;\r\n    #x2;\r\n    #y2;\r\n    /**\r\n     * The first x-coordinate of the element relative to the current anchor.\r\n     * @type {number}\r\n     */\r\n    get x1() {\r\n      return this.#x1;\r\n    }\r\n    set x1(val) {\r\n      if (!isNaN(val)) this.#x1 = val;\r\n      else\r\n        console.error(\r\n          `${this.tagName}'s x1 is being set to ${val}, but it may only be set to a number.`\r\n        );\r\n    }\r\n    /**\r\n     * The first y-coordinate of the element relative to the current anchor.\r\n     * @type {number}\r\n     */\r\n    get y1() {\r\n      return this.#y1;\r\n    }\r\n    set y1(val) {\r\n      if (!isNaN(val)) this.#y1 = val;\r\n      else\r\n        console.error(\r\n          `${this.tagName}'s y1 is being set to ${val}, but it may only be set to a number.`\r\n        );\r\n    }\r\n    /**\r\n     * The second x-coordinate of the element relative to the current anchor.\r\n     * @type {number}\r\n     */\r\n    get x2() {\r\n      return this.#x2;\r\n    }\r\n    set x2(val) {\r\n      if (!isNaN(val)) this.#x2 = val;\r\n      else\r\n        console.error(\r\n          `${this.tagName}'s x2 is being set to ${val}, but it may only be set to a number.`\r\n        );\r\n    }\r\n    /**\r\n     * The second y-coordinate of the element relative to the current anchor.\r\n     * @type {number}\r\n     */\r\n    get y2() {\r\n      return this.#y2;\r\n    }\r\n    set y2(val) {\r\n      if (!isNaN(val)) this.#y2 = val;\r\n      else\r\n        console.error(\r\n          `${this.tagName}'s y2 is being set to ${val}, but it may only be set to a number.`\r\n        );\r\n    }\r\n  };\r\n\r\nexport const addY3 = (baseClass) =>\r\n  class extends baseClass {\r\n    #x3;\r\n    #y3;\r\n    /**\r\n     * The third x-coordinate of the element relative to the current anchor.\r\n     * @type {number}\r\n     */\r\n    get x3() {\r\n      return this.#x3;\r\n    }\r\n    set x3(val) {\r\n      if (!isNaN(val)) this.#x3 = val;\r\n      else\r\n        console.error(\r\n          `${this.tagName}'s x3 is being set to ${val}, but it may only be set to a number.`\r\n        );\r\n    }\r\n    /**\r\n     * The third y-coordinate of the element relative to the current anchor.\r\n     * @type {number}\r\n     */\r\n    get y3() {\r\n      return this.#y3;\r\n    }\r\n    set y3(val) {\r\n      if (!isNaN(val)) this.#y3 = val;\r\n      else\r\n        console.error(\r\n          `${this.tagName}'s y3 is being set to ${val}, but it may only be set to a number.`\r\n        );\r\n    }\r\n  };\r\n\r\nexport const addXY123 = (baseClass) =>\r\n  class extends addXY12(addY3(baseClass)) {};\r\n\r\nexport const addXYZ12 = (baseClass) =>\r\n  class extends addXY12(baseClass) {\r\n    #z1;\r\n    #z2;\r\n    /**\r\n     * The first x-coordinate of the element relative to the current anchor.\r\n     * @type {number}\r\n     */\r\n    get z1() {\r\n      return this.#z1;\r\n    }\r\n    set z1(val) {\r\n      if (!isNaN(val)) this.#z1 = val;\r\n      else\r\n        console.error(\r\n          `${this.tagName}'s z1 is being set to ${val}, but it may only be set to a number.`\r\n        );\r\n    }\r\n    /**\r\n     * The second x-coordinate of the element relative to the current anchor.\r\n     * @type {number}\r\n     */\r\n    get z2() {\r\n      return this.#z2;\r\n    }\r\n    set z2(val) {\r\n      if (!isNaN(val)) this.#z2 = val;\r\n      else\r\n        console.error(\r\n          `${this.tagName}'s z2 is being set to ${val}, but it may only be set to a number.`\r\n        );\r\n    }\r\n  };\r\n\r\nexport const addRectMode = (baseClass) =>\r\n  class extends baseClass {\r\n    #rect_mode;\r\n    /**\r\n     * Modifies the location from which rectangles are drawn by changing the way\r\n     * in which x and y coordinates are interpreted.\r\n     *\r\n     * The default mode is CORNER, which interprets the x and y as the\r\n     * upper-left corner of the shape.\r\n     *\r\n     * rect_mode=\"CORNERS\" interprets x and y as the location of\r\n     * one of the corners, and width and height as the location of\r\n     * the diagonally opposite corner. Note, the rectangle is drawn between the\r\n     * coordinates, so it is not necessary that the first corner be the upper left\r\n     * corner.\r\n     *\r\n     * rect_mode=\"CENTER\" interprets x and y as the shape's center\r\n     * point.\r\n     *\r\n     * rect_mode=\"RADIUS\" also uses x and y as the shape's\r\n     * center\r\n     * point, but uses width and height to specify half of the shape's\r\n     * width and height respectively.\r\n     *\r\n     * The value to this property must be written in ALL CAPS because they are\r\n     * predefined as constants in ALL CAPS.\r\n     *\r\n     * @type {CORNER|CORNERS|CENTER|RADIUS}\r\n     */\r\n    get rect_mode() {\r\n      return this.#rect_mode;\r\n    }\r\n    set rect_mode(mode) {\r\n      this.pInst.rectMode(mode);\r\n      this.#rect_mode = this.pInst._renderer._rectMode;\r\n    }\r\n  };\r\n","import { defineProperties, wrapMethod } from \"../utils/p5Modifiers\";\n\np5.prototype.window_resized = false;\nwrapMethod(\n  \"_onresize\",\n  (base) =>\n    function (e) {\n      base.call(this, e);\n      this._setProperty(\"window_resized\", true);\n    }\n);\n\np5.prototype.registerMethod(\"post\", function () {\n  this._setProperty(\"window_resized\", false);\n});\n\np5.prototype._fullscreen = p5.prototype.fullscreen;\np5.prototype._width = p5.prototype.width;\np5.prototype._height = p5.prototype.height;\n\np5.prototype._createDescriptionContainer = function () {\n  const cnvId = this.canvas.id;\n  const descriptionContainer = document.createElement(\"div\");\n  descriptionContainer.setAttribute(\"id\", `${cnvId}_Description`);\n  descriptionContainer.setAttribute(\"role\", \"region\");\n  descriptionContainer.setAttribute(\"aria-label\", \"Canvas Description\");\n  const p = document.createElement(\"p\");\n  p.setAttribute(\"id\", `${cnvId}_fallbackDesc`);\n  descriptionContainer.append(p);\n  this.canvas.append(descriptionContainer);\n  return descriptionContainer;\n};\nconst fallbackDescId = \"_fallbackDesc\";\nwrapMethod(\n  \"_describeHTML\",\n  (base) =>\n    function (type, text) {\n      const cnvId = this.canvas.id;\n      const describeId = `#${cnvId}_Description`;\n      if (type === \"fallback\") {\n        if (!this.dummyDOM.querySelector(describeId)) {\n          const fallback = this._createDescriptionContainer().querySelector(\n            `#${cnvId}_fallbackDesc`\n          );\n          fallback.innerHTML = text;\n        } else {\n          base.call(this, type, text);\n        }\n        //if the container for the description exists\n        this.descriptions.fallback = this.dummyDOM.querySelector(\n          `#${cnvId}${fallbackDescId}`\n        );\n        this.descriptions.fallback.innerHTML = text;\n      }\n    }\n);\n\nwrapMethod(\n  \"_describeElementHTML\",\n  (base) =>\n    function (type, name, text) {\n      const cnvId = this.canvas.id;\n      if (\n        type === \"fallback\" &&\n        !this.dummyDOM.querySelector(`#${cnvId}_Description`)\n      ) {\n        this._createDescriptionContainer();\n      }\n      base.call(this, type, name, text);\n    }\n);\n\nwrapMethod(\n  \"_createOutput\",\n  (base) =>\n    function (type, display) {\n      const cnvId = this.canvas.id;\n      if (!this.dummyDOM) {\n        this.dummyDOM = document.getElementById(cnvId).parentNode;\n      }\n      if (\n        (type === \"textOutput\" || type === \"gridOutput\") &&\n        !this.dummyDOM.querySelector(`#${cnvId}accessibleOutput${display}`)\n      )\n        this._createDescriptionContainer();\n      base.call(this, type, display);\n    }\n);\n\np5.prototype.registerMethod(\"post\", function () {\n  if (this.text_output || this.grid_output) this._updateAccsOutput();\n});\n\ndefineProperties({\n  frame_rate: {\n    get: function () {\n      return this._frameRate;\n    },\n    set: function (val) {\n      this.frameRate(val);\n    },\n  },\n  fullscreen: {\n    get: function () {\n      return this._fullscreen();\n    },\n    set: function (val) {\n      this._fullscreen(val);\n    },\n  },\n  window_width: {\n    get: function () {\n      return this.windowWidth;\n    },\n  },\n  window_height: {\n    get: function () {\n      return this.windowHeight;\n    },\n  },\n  grid_output: {\n    get: function () {\n      return this._accessibleOutputs.grid;\n    },\n    set: function (val) {\n      if (val === true) this.gridOutput();\n      else this.gridOutput(val);\n    },\n  },\n  pixel_density: {\n    get: function () {\n      return this.pixelDensity();\n    },\n    set: function (val) {\n      this.pixelDensity(val);\n    },\n  },\n  description: {\n    set: function (val) {\n      this.describeElement(...val);\n    },\n  },\n  display_density: {\n    get: function () {\n      return this.displayDensity();\n    },\n  },\n  url: {\n    get: function () {\n      return this.getURL();\n    },\n  },\n  url_path: {\n    get: function () {\n      return this.getURLPath();\n    },\n  },\n  url_params: {\n    get: function () {\n      return this.getURLParams();\n    },\n  },\n  log: {\n    set: function (val) {\n      this.print(val);\n    },\n  },\n  text_output: {\n    get: function () {\n      return this._accessibleOutputs.text;\n    },\n    set: function (val) {\n      if (val === true) this.textOutput();\n      else this.textOutput(val);\n    },\n  },\n});\n","import { RenderedElement } from \"../core\";\nimport { addStroke } from \"../properties/color_props\";\n\n/**\n * Clears the pixels within a buffer. This element only clears the canvas.\n * It will not clear objects created by create_x() functions such as\n * create_video() or create_div().\n * Unlike the main graphics context, pixels in additional graphics areas created\n * with create_graphics() can be entirely\n * or partially transparent. This element clears everything to make all of\n * the pixels 100% transparent.\n *\n * Note: In WebGL mode, this element can have attributes set to normalized RGBA\n * color values in order to clear the screen to a specific color.\n * In addition to color, it will also clear the depth buffer.\n * If you are not using the webGL renderer these color values will have no\n * effect.\n *\n * @element clear\n * @attribute {Number} r normalized red val.\n * @attribute {Number} g normalized green val.\n * @attribute {Number} b normalized blue val.\n * @attribute {Number} a normalized alpha val.\n */\nclass Clear extends RenderedElement {\n  constructor() {\n    super([\"\", \"r, g, b, a\"]);\n  }\n}\ncustomElements.define(\"p-clear\", Clear);\n\n/**\n * The ```<paint-bucket>``` element fills the canvas with a particular color or\n * image.\n *\n * @element paint-bucket\n * @attribute {p5.Color} color  any value created by the <a href=\"#/p5/color\">color\n * @attribute {String} colorstring color string, possible formats include: integer\n *                         rgb() or rgba(), percentage rgb() or rgba(),\n *                         3-digit hex, 6-digit hex\n * @attribute {Number} [a]         opacity of the background relative to current\n *                             color range (default is 0-255)\n * @attribute {Number} gray   specifies a value between white and black\n * @attribute {Number} v1     red or hue value (depending on the current color\n *                        mode)\n * @attribute {Number} v2     green or saturation value (depending on the current\n *                        color mode)\n * @attribute {Number} v3     blue or brightness value (depending on the current\n *                        color mode)\n * @attribute  {Number[]}      values  an array containing the red, green, blue\n *                                 and alpha components of the color\n * @attribute {p5.Image} image    image loaded via an ```<asset>``` (must be\n *                                  same size as the sketch window)\n */\nclass PaintBucket extends RenderedElement {\n  constructor() {\n    super(\n      [\"c\", \"colorstring, [a]\", \"gray, [a]\", \"v1, v2, v3, [a]\"],\n      \"background\"\n    );\n  }\n}\ncustomElements.define(\"p-paint-bucket\", PaintBucket);\n","import { P5Element } from \"../core\";\r\n/**\r\n * This HTML element loads an XML sketch file. This should be added to the\r\n * index.html file as a `<link>` element with the attributes is=\"p-sketch\" and\r\n * href=\"[PATH TO XML FILE]\".\r\n * @element p-sketch\r\n * @example Add a sketch to html\r\n * ```html\r\n * <!DOCTYPE html>\r\n * <html lang=\"en\">\r\n * <head>\r\n *   <script src=\"p5.js\"></script>\r\n *   <script src=\"p5.marker.js\" defer></script>\r\n *   <link rel=\"stylesheet\" type=\"text/css\" href=\"style.css\" />\r\n *   <link href=\"sketch.xml\" is=\"p-sketch\" />\r\n *   <meta charset=\"utf-8\" />\r\n * </head>\r\n * <body></body>\r\n * </html>\r\n * ```\r\n */\r\nclass Sketch extends HTMLLinkElement {\r\n  static elementName = \"p-sketch\";\r\n  constructor() {\r\n    super();\r\n    this.#loadXML(this.href);\r\n  }\r\n  #convertElement(xmlEl) {\r\n    const xmlTag = xmlEl.tagName;\r\n    const createElementArguments = this.#xmlTagToCreateElementArguments(xmlTag);\r\n    const pEl = document.createElement(...createElementArguments);\r\n    this.#copyAttributes(xmlEl, pEl);\r\n    if (xmlTag === \"custom\") pEl.define();\r\n    return pEl;\r\n  }\r\n  #convertAllElements(xmlEl, parent = document.body) {\r\n    const pEl = this.#convertElement(xmlEl);\r\n    parent.appendChild(pEl);\r\n    for (let i = 0; i < xmlEl.children.length; i++) {\r\n      this.#convertAllElements(xmlEl.children[i], pEl);\r\n    }\r\n  }\r\n  #convertXML(e) {\r\n    const xml = e.target.response.documentElement;\r\n    this.#convertAllElements(xml);\r\n    document.querySelectorAll(\"canvas\").forEach((canvas) => canvas.runCode());\r\n  }\r\n  #copyAttributes(orig, copy) {\r\n    const attrs = orig.attributes;\r\n    for (let i = 0; i < attrs.length; i++) {\r\n      const attr = attrs[i];\r\n      copy.setAttribute(attr.name, attr.value);\r\n    }\r\n  }\r\n  #loadXML(path) {\r\n    if (!path)\r\n      return console.error(\r\n        \"p-sketch element is missing required path attribute\"\r\n      );\r\n    const request = new XMLHttpRequest();\r\n    request.open(\"GET\", path);\r\n    request.responseType = \"document\";\r\n    request.overrideMimeType(\"text/xml\");\r\n    request.addEventListener(\"load\", this.#convertXML.bind(this));\r\n    request.send();\r\n  }\r\n  #xmlTagToCreateElementArguments(xmlTag) {\r\n    if (xmlTag.slice(0, 2) === \"p-\") return [xmlTag];\r\n    if (xmlTag === \"canvas\") return [xmlTag, { is: \"p-canvas\" }];\r\n    if (xmlTag === \"canvas-3d\") return [\"canvas\", { is: \"p-canvas-3d\" }];\r\n    return [\"p-\" + xmlTag];\r\n  }\r\n}\r\ncustomElements.define(\"p-sketch\", Sketch, { extends: \"link\" });\r\n/**\r\n * The `<custom>` element generates a new element from a combination of existing\r\n * elements. This element should be placed outside the <canvas> element. The name attribute defines the name of the new element. For\r\n * example, if name is set to \"my-element,\" <my-element>\r\n * @element custom\r\n * @example Clouds\r\n * ```html\r\n * <_>\r\n *  <custom name=\"cloud\" attributes=\"center_x, center_y\" stroke=\"NONE\">\r\n *      <_ anchor=\"center_x, center_y\" d=\"40\">\r\n *          <circle x=\"-20\" y=\"-10\" fill_color=\"220\"></circle>\r\n *          <circle x=\"20\" y=\"-10\" fill_color=\"210\"></circle>\r\n *          <circle x=\"-10\" y=\"-20\" fill_color=\"250\"></circle>\r\n *          <circle x=\"10\" y=\"-20\" fill_color=\"210\"></circle>\r\n *          <circle x=\"0\" y=\"0\" fill_color=\"180\"></circle>\r\n *          <circle x=\"20\" y=\"0\" fill_color=\"200\"></circle>\r\n *          <circle x=\"-20\" y=\"0\" fill_color=\"240\"></circle>\r\n *          <circle x=\"0\" y=\"-5\" fill_color=\"235\"></circle>\r\n *      </_>\r\n *  </custom>\r\n *  <canvas\r\n *      width=\"400\"\r\n *      height=\"400\"\r\n *      is=\"canvas\"\r\n *      canvas_background=\"100, 140, 200\"\r\n *      cloud_x=\"0\"\r\n *  >\r\n *      <cloud\r\n *          center_y=\"75\"\r\n *          center_x=\"cloud_x - 40 - width * 0.25\"\r\n *          change=\"center_x: center_x + width * 0.25\"\r\n *          repeat=\"WHILE center_x LESS_THAN width * 1.25\"\r\n *      ></cloud>\r\n *      <_ cloud_x=\"cloud_x + 0.25\">\r\n *          <_ on=\"cloud_x GREATER_THAN width * 0.25\" cloud_x=\"0\"></_>\r\n *      </_>\r\n *  </canvas>\r\n * </_>\r\n * ```\r\n */\r\nclass Custom extends P5Element {\r\n  constructor() {\r\n    super();\r\n    if (this.attributes.length) this.define(this);\r\n  }\r\n  /**\r\n   * Defines the custom element created by this element.\r\n   */\r\n  define() {\r\n    const pCustomEl = this;\r\n    const name = pCustomEl.getAttribute(\"name\");\r\n    //  Trick custom-elements-manifest into ignoring this\r\n    customElements[\"define\"](\r\n      `p-${name}`,\r\n      class extends P5Element {\r\n        constructor() {\r\n          super();\r\n        }\r\n        /**\r\n         * Sets the default values for this element's attributes.\r\n         */\r\n        setDefaults() {\r\n          Array.from(pCustomEl.attributes).forEach(\r\n            (a) =>\r\n              this.hasAttribute(a.name) === false &&\r\n              this.setAttribute(a.name, a.value)\r\n          );\r\n          const childClones = Array.from(pCustomEl.children).map((child) =>\r\n            child.cloneNode(true)\r\n          );\r\n          this.prepend(...childClones);\r\n        }\r\n        renderToCanvas = null;\r\n      }\r\n    );\r\n  }\r\n}\r\ncustomElements.define(\"p-custom\", Custom);\r\n\r\nclass Asset extends HTMLElement {\r\n  static elementName = \"p-asset\";\r\n  constructor() {\r\n    super();\r\n  }\r\n  static loadFns = {\r\n    image: \"loadImage\",\r\n    font: \"loadFont\",\r\n    json: \"loadJSON\",\r\n    strings: \"loadStrings\",\r\n    table: \"loadTable\",\r\n    xml: \"loadXML\",\r\n    bytes: \"loadBytes\",\r\n    get: \"httpGet\",\r\n    shader: \"loadShader\",\r\n  };\r\n\r\n  async load(pInst) {\r\n    if (this.data) return this.data;\r\n    const loadFn = Asset.loadFns[this.getAttribute(\"type\").toLowerCase()];\r\n    const path = this.getAttribute(\"path\");\r\n    this.data = await pInst[loadFn](path);\r\n    return this.data;\r\n  }\r\n}\r\ncustomElements.define(\"p-asset\", Asset);\r\n","import {\n  defineProperties,\n  defineRendererGetterSetters,\n} from \"../utils/p5Modifiers\";\n\nconst pointTangentOverload = (fn) =>\n  function () {\n    const args = arguments;\n    if (args.length !== 9) return fn(...args);\n    return this.createVector(\n      fn(args[0], args[2], args[4], args[6], args[8]),\n      fn(args[1], args[3], args[5], args[7], args[8])\n    );\n  };\np5.prototype.bezierPoint = pointTangentOverload(p5.prototype.bezierPoint);\np5.prototype.bezierTangent = pointTangentOverload(p5.prototype.bezierTangent);\np5.prototype.curvePoint = pointTangentOverload(p5.prototype.curvePoint);\np5.prototype.curveTangent = pointTangentOverload(p5.prototype.curveTangent);\np5.prototype.yesSmooth = p5.prototype.smooth;\n\ndefineRendererGetterSetters(\"ellipseMode\", \"rectMode\", \"curveTightness\");\n\ndefineProperties({\n  smooth: {\n    get: function () {\n      if (this._renderer?.isP3D)\n        return this._renderer._pInst._glAttributes?.antialias;\n      return this.drawingContext?.imageSmoothingEnabled;\n    },\n    set: function (val) {\n      if (val) this.yesSmooth();\n      else this.noSmooth();\n    },\n  },\n  stroke_cap: {\n    get: function () {\n      if (this._renderer?.isP3D) return this._renderer.strokeCap();\n      return this.drawingContext?.lineCap;\n    },\n    set: function (val) {\n      this.strokeCap(val);\n    },\n  },\n  stroke_join: {\n    get: function () {\n      if (this._renderer?.isP3D) return this._renderer.strokeJoin();\n      return this.drawingContext?.lineJoin;\n    },\n    set: function (val) {\n      this.strokeJoin(val);\n    },\n  },\n  stroke_weight: {\n    get: function () {\n      if (this._renderer?.isP3D) return this._renderer.curStrokeWeight;\n      return this.drawingContext?.lineWidth;\n    },\n    set: function (val) {\n      this.strokeWeight(val);\n    },\n  },\n  bezier_detail: {\n    get: function () {\n      return this._renderer?._pInst._bezierDetail;\n    },\n    set: function (val) {\n      this.bezierDetail(val);\n    },\n  },\n  curve_detail: {\n    get: function () {\n      return this._renderer?._pInst._curveDetail;\n    },\n    set: function (val) {\n      this.curveDetail(val);\n    },\n  },\n});\n","import { defineProperties } from \"../utils/p5Modifiers\";\n\ndefineProperties({\n  animate: {\n    get: function () {\n      return this.isLooping();\n    },\n    set: function (val) {\n      if (val) this.loop();\n      else this.noLoop();\n    },\n  },\n  remove_canvas: {\n    get: function () {\n      return false;\n    },\n    set: function () {\n      this.remove();\n    },\n  },\n});\n","import { defineSnakeAlias } from \"../utils/p5Modifiers\";\n\ndefineSnakeAlias(\n  \"selectAll\",\n  \"removeElements\",\n  \"createDiv\",\n  \"createP\",\n  \"createSpan\",\n  \"createImg\",\n  \"createA\",\n  \"createSlider\",\n  \"createButton\",\n  \"createCheckbox\",\n  \"createSelect\",\n  \"createRadio\",\n  \"createColorPicker\",\n  \"createInput\",\n  \"createFileInput\",\n  \"createVideo\",\n  \"createAudio\",\n  \"createCapture\",\n  \"createElement\"\n);\n","import { defineSnakeAlias } from \"../utils/p5Modifiers\";\n\ndefineSnakeAlias(\n  \"createStringDict\",\n  \"createNumberDict\",\n  \"matchAll\",\n  \"splitTokens\"\n);\np5.prototype.storage = {};\np5.prototype.registerMethod(\"init\", function () {\n  this._setProperty(\n    \"storage\",\n    new Proxy(this, {\n      get(target, prop) {\n        if (prop === \"clear\") return target.clearStorage;\n        if (prop === \"remove\") return target.removeItem;\n        return target.getItem(prop);\n      },\n      set(target, prop, val) {\n        target.storeItem(prop, val);\n        return true;\n      },\n    })\n  );\n});\n","import { defineProperties, defineSnakeAlias } from \"../utils/p5Modifiers\";\n\ndefineSnakeAlias(\"createVector\");\n\ndefineProperties({\n  angle_mode: {\n    get: function () {\n      return this._angleMode;\n    },\n    set: function (mode) {\n      this._setProperty(\"_angleMode\", mode);\n    },\n  },\n  noise_detail: {\n    set: function () {\n      this.noiseDetail(...arguments);\n    },\n  },\n  noise_seed: {\n    set: function () {\n      this.noiseSeed(...arguments);\n    },\n  },\n  random_seed: {\n    get: function () {\n      return this._lcg_random_state;\n    },\n    set: function () {\n      this.randomSeed(...arguments);\n    },\n  },\n});\n","import { defineSnakeAlias } from \"../utils/p5Modifiers\";\n\ndefineSnakeAlias(\"createCanvas\", \"createGraphics\");\n","import { defineProperties, wrapMethod } from \"../utils/p5Modifiers\";\n\nconst defaultAnchor = p5.prototype.createVector();\nconst defaultAngle = p5.prototype.createVector();\nconst defaultShear = p5.prototype.createVector();\nconst defaultScale = p5.prototype.createVector(1, 1, 1);\nconst wrap = function (renderer) {\n  function wrappedRenderer() {\n    renderer.apply(this, arguments);\n    this._anchorStack = [defaultAnchor.copy()];\n    this._angleStack = [defaultAngle.copy()];\n    this._scaleStack = [defaultScale.copy()];\n    this._shearStack = [defaultShear.copy()];\n  }\n  wrappedRenderer.prototype = Object.create(renderer.prototype);\n  return wrappedRenderer;\n};\np5.Renderer = wrap(p5.Renderer);\n\nwrapMethod(\n  \"push\",\n  (base) =>\n    function () {\n      this._renderer._anchorStack.push(defaultAnchor.copy());\n      this._renderer._angleStack.push(defaultAngle.copy());\n      this._renderer._scaleStack.push(defaultScale.copy());\n      this._renderer._shearStack.push(defaultShear.copy());\n      base.call(this);\n    }\n);\n\nwrapMethod(\n  \"pop\",\n  (base) =>\n    function () {\n      this._renderer._anchorStack.pop();\n      this._renderer._angleStack.pop();\n      this._renderer._scaleStack.pop();\n      this._renderer._shearStack.pop();\n      base.call(this);\n    }\n);\n\np5.prototype.RESET = \"reset\";\n\ndefineProperties({\n  anchor: {\n    get: function () {\n      return this._renderer?._anchorStack[\n        this._renderer._anchorStack.length - 1\n      ];\n    },\n    set: function (val) {\n      if (Array.isArray(val))\n        this._renderer._anchorStack[this._renderer._anchorStack.length - 1].set(\n          ...val\n        );\n      else\n        this._renderer._anchorStack[this._renderer._anchorStack.length - 1].set(\n          val\n        );\n      this.translate(this.anchor);\n    },\n  },\n  angle: {\n    get: function () {\n      return this._renderer?._angleStack.slice(-1)[0].z;\n    },\n    set: function (val) {\n      this._renderer._angleStack[this._renderer._anchorStack.length - 1].z =\n        val;\n      this.rotate(this.angle);\n    },\n  },\n  angle_x: {\n    get: function () {\n      return this._renderer?._angleStack.slice(-1)[0].x;\n    },\n    set: function (val) {\n      this._renderer._angleStack[this._renderer._angleStack.length - 1].x = val;\n      this.rotateX(this.angle_x);\n    },\n  },\n  angle_y: {\n    get: function () {\n      return this._renderer?._angleStack.slice(-1)[0].y;\n    },\n    set: function (val) {\n      this._renderer._angleStack[this._renderer._angleStack.length - 1].y = val;\n      this.rotateY(this.angle_y);\n    },\n  },\n  angle_z: {\n    get: function () {\n      return this._renderer?._angleStack.slice(-1)[0].z;\n    },\n    set: function (val) {\n      this._renderer._angleStack[this._renderer._angleStack.length - 1].z = val;\n      this.rotateZ(this.angle_z);\n    },\n  },\n  angle_vector: {\n    get: function () {\n      return this._renderer?._angleStack.slice(-1)[0];\n    },\n    set: function (val) {\n      this._renderer._angleStack[this._renderer._angleStack.length - 1] = val;\n      if (this._renderer.isP3D) {\n        this.rotateX(this.angle_x);\n        this.rotateY(this.angle_y);\n        this.rotateZ(this.angle_z);\n      } else this.rotate(this.angle);\n    },\n  },\n  scale_factor: {\n    get: function () {\n      return this._renderer?._scaleStack.slice(-1)[0];\n    },\n    set: function (val) {\n      if (Array.isArray(val))\n        this._renderer._scaleStack[this._renderer._scaleStack.length - 1].set(\n          ...val\n        );\n      else\n        this._renderer._scaleStack[this._renderer._scaleStack.length - 1].set(\n          val,\n          val,\n          val\n        );\n      this.scale(this.scale_factor);\n    },\n  },\n  shear: {\n    get: function () {\n      return this._renderer?._shearStack.slice(-1)[0];\n    },\n    set: function (val) {\n      if (Array.isArray(val))\n        this._renderer._shearStack[this._renderer._shearStack.length - 1].set(\n          ...val\n        );\n      else\n        this._renderer._shearStack[this._renderer._shearStack.length - 1].set(\n          val\n        );\n      this.shearX(this.shear.x);\n      this.shearY(this.shear.y);\n    },\n  },\n  transform_matrix: {\n    get: function () {\n      if (this._renderer.isP3D) return this._renderer.uMVMatrix;\n      return this.drawingContext?.getTransform();\n    },\n    set: function (val) {\n      if (val === this.RESET) this.resetMatrix();\n      else this.applyMatrix(val);\n    },\n  },\n});\n\nconst identityMatrix = new DOMMatrix([\n  1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1,\n]);\n\np5.prototype._transform_point_matrix = function (originalPoint, transMatrix) {\n  const pixelDensityMatrix = new DOMMatrix(identityMatrix).scale(\n    this.pixel_density\n  );\n  const scaledMatrix = transMatrix.multiply(pixelDensityMatrix);\n  const transformedPoint = scaledMatrix.transformPoint(originalPoint);\n  return transformedPoint;\n};\n\np5.prototype.untransform_point = function (x, y, z) {\n  const originalPoint = new DOMPoint(x, y, z);\n  return this._transform_point_matrix(originalPoint, this.transform_matrix);\n};\n\np5.prototype.transform_point = function (x, y, z) {\n  const originalPoint = new DOMPoint(x, y, z);\n  return this._transform_point_matrix(\n    originalPoint,\n    this.transform_matrix.inverse()\n  );\n};\n","import {\n  defineProperties,\n  defineSnakeAlias,\n  wrapMethod,\n} from \"../utils/p5Modifiers\";\n\ndefineSnakeAlias(\"deviceOrientation\", \"turnAxis\", \"keyIsDown\");\n\n//  TODO - test on mobile device\np5.prototype.device_moved = false;\n\n//  TODO - test on mobile device\np5.prototype.device_turned = false;\n\np5.prototype.mouse_down = false;\n\np5.prototype.mouse_up = false;\n\np5.prototype.mouse_dragging = false;\n\np5.prototype.mouse_double_clicked = false;\n\np5.prototype._mouseWheel = 0;\n\np5.prototype.key_down = false;\n\np5.prototype.key_up = false;\n\n//  TODO - test on mobile device\np5.prototype.touch_started = false;\np5.prototype.touch_moved = false;\np5.prototype.touch_ended = false;\n\np5.prototype._startAngleZ;\nwrapMethod(\n  \"_handleMotion\",\n  (base) =>\n    function () {\n      base.call(this);\n      this._setProperty(\"deviced_moved\", true);\n    }\n);\n\nwrapMethod(\n  \"_onmousedown\",\n  (base) =>\n    function (e) {\n      base.call(this, e);\n      this._setProperty(\"mouse_down\", true);\n    }\n);\n\nwrapMethod(\n  \"_ondbclick\",\n  (base) =>\n    function (e) {\n      base.call(this, e);\n      this._setProperty(\"mouse_double_clicked\", true);\n    }\n);\n\nwrapMethod(\n  \"_onmousemove\",\n  (base) =>\n    function (e) {\n      base.call(this, e);\n      this._setProperty(\"mouse_dragging\", this.mouseIsPressed);\n      this._setProperty(\"touch_moved\", this.mouseIsPressed);\n    }\n);\n\nwrapMethod(\n  \"_onwheel\",\n  (base) =>\n    function (e) {\n      base.call(this, e);\n      this._setProperty(\"_mouseWheel\", this._mouseWheelDeltaY);\n    }\n);\n\nwrapMethod(\n  \"_onkeyup\",\n  (base) =>\n    function (e) {\n      base.call(this, e);\n      this._setProperty(\"key_up\", true);\n      this._setProperty(\"key_held\", false);\n    }\n);\n\nwrapMethod(\n  \"_onkeydown\",\n  (base) =>\n    function (e) {\n      base.call(this, e);\n      this._setProperty(\"key_down\", true);\n    }\n);\n\nwrapMethod(\n  \"_ontouchbase\",\n  (base) =>\n    function (e) {\n      base.call(this, e);\n      this._setProperty(\"touch_started\", true);\n    }\n);\n\nwrapMethod(\n  \"_ontouchmove\",\n  (base) =>\n    function (e) {\n      base.call(this, e);\n      this._setProperty(\"touch_moved\", true);\n    }\n);\n\nwrapMethod(\n  \"_ontouchend\",\n  (base) =>\n    function (e) {\n      base.call(this, e);\n      this._setProperty(\"touch_ended\", true);\n    }\n);\n\np5.prototype.registerMethod(\"pre\", function () {\n  this._setProperty(\n    \"mouse_up\",\n    this.mouseIsPressed == false && this.mouse_held == true\n  );\n  this._setProperty(\"mouse_held\", this.mouseIsPressed);\n  this._setProperty(\"key_held\", this.key_down);\n});\n\np5.prototype.registerMethod(\"post\", function () {\n  this._setProperty(\"device_moved\", false);\n  this._setProperty(\"mouse_down\", false);\n  this._setProperty(\"mouse_dragging\", false);\n  this._setProperty(\"mouse_double_clicked\", false);\n  this._setProperty(\"_mouseWheel\", false);\n  this._setProperty(\"key_up\", false);\n  this._setProperty(\"key_down\", false);\n  this._setProperty(\"touch_started\", false);\n  this._setProperty(\"touch_moved\", false);\n  this._setProperty(\"touch_ended\", false);\n});\n\n//  Create properties with default value\np5.prototype._moveThreshold = 0.5;\np5.prototype._shakeThreshold = 30;\n\ndefineProperties({\n  //  TODO - test on mobile device\n  device_acceleration: {\n    get: function () {\n      return this.createVector(\n        this.accelerationX,\n        this.accelerationY,\n        this.accelerationZ\n      );\n    },\n  },\n  //  TODO - test on mobile device\n  device_prev_acceleration: {\n    get: function () {\n      return this.createVector(\n        this.pAccelerationX,\n        this.pAccelerationY,\n        this.pAccelerationZ\n      );\n    },\n  },\n  //  TODO - test on mobile device\n  device_rotation: {\n    get: function () {\n      return this.createVector(this.rotationX, this.rotationY, this.rotationZ);\n    },\n  },\n  //  TODO - test on mobile device\n  device_prev_rotation: {\n    get: function () {\n      return this.createVector(\n        this.pRotationX,\n        this.pRotationY,\n        this.pRotationZ\n      );\n    },\n  },\n  //  TODO - test on mobile device\n  device_turned: {\n    get: function () {\n      if (\n        this.rotationX === null &&\n        this.rotationY === null &&\n        this.rotationZ === null\n      )\n        return false;\n      return (\n        this.rotationX !== this.pRotationX ||\n        this.rotationY !== this.pRotationY ||\n        this.rotationZ !== this.pRotationZ\n      );\n    },\n  },\n  first_frame: {\n    get: function () {\n      return this.frameCount === 1;\n    },\n  },\n  key_code: {\n    get: function () {\n      return this.keyCode;\n    },\n  },\n  mouse_button: {\n    get: function () {\n      return this.mouseButton;\n    },\n  },\n  mouse_pos: {\n    get: function () {\n      return this.createVector(this.mouseX, this.mouseY);\n    },\n  },\n  mouse_pos_x: {\n    get: function () {\n      return this.mouseX;\n    },\n  },\n  mouse_pos_y: {\n    get: function () {\n      return this.mouseY;\n    },\n  },\n  mouse_prev_pos: {\n    get: function () {\n      return this.createVector(this.pmouseX, this.pmouseY);\n    },\n  },\n  mouse_prev_pos_x: {\n    get: function () {\n      return this.pmouseX;\n    },\n  },\n  mouse_prev_pos_y: {\n    get: function () {\n      return this.pmouseY;\n    },\n  },\n  mouse_trans_pos: {\n    get: function () {\n      return this.transform_point(this.mouse_pos_x, this.mouse_pos_y);\n    },\n  },\n  mouse_trans_pos_x: {\n    get: function () {\n      return this.mouse_trans_pos.x;\n    },\n  },\n  mouse_trans_pos_y: {\n    get: function () {\n      return this.mouse_trans_pos.y;\n    },\n  },\n  mouse_wheel: {\n    get: function () {\n      return this._mouseWheel;\n    },\n  },\n  mouse_window_pos: {\n    get: function () {\n      return this.createVector(this.winMouseX, this.winMouseY);\n    },\n  },\n  mouse_window_pos_x: {\n    get: function () {\n      return this.winMouseX;\n    },\n  },\n  mouse_window_pos_y: {\n    get: function () {\n      return this.winMouseY;\n    },\n  },\n  mouse_prev_window_pos: {\n    get: function () {\n      return this.createVector(this.pwinMouseX, this.pwinMouseY);\n    },\n  },\n  mouse_window_prev_pos_x: {\n    get: function () {\n      return this.pwinMouseX;\n    },\n  },\n  mouse_window_prev_pos_y: {\n    get: function () {\n      return this.pwinMouseY;\n    },\n  },\n  move_threshold: {\n    get: function () {\n      return this._moveThreshold;\n    },\n    set: function (val) {\n      this.setMoveThreshold(val);\n    },\n  },\n  moved: {\n    get: function () {\n      return this.createVector(this.movedX, this.movedY);\n    },\n  },\n  moved_x: {\n    get: function () {\n      return this.movedX;\n    },\n  },\n  moved_y: {\n    get: function () {\n      return this.movedY;\n    },\n  },\n  pointer_lock_request: {\n    get: function () {\n      return document.pointerLockElement === this._curElement.elt;\n    },\n    set: function (val) {\n      if (val) this.requestPointerLock();\n      else this.exitPointerLock();\n    },\n  },\n  shake_threshold: {\n    get: function () {\n      return this._shakeThreshold;\n    },\n    set: function (val) {\n      this.setShakeThreshold(val);\n    },\n  },\n});\n","import {\n  defineProperties,\n  defineRendererGetterSetters,\n} from \"../utils/p5Modifiers\";\nimport { RenderedElement } from \"../core\";\nimport { addWidthHeight, addXY } from \"../properties/shape_props\";\n\n/**\n * Draw an image to the canvas.\n *\n * This element can be used with different numbers of attributes. The\n * simplest use requires only three attributes: img, x, and y—where (x, y) is\n * the position of the image. Two more attributes can optionally be added to\n * specify the width and height of the image.\n *\n * This element can also be used with eight Number attributes. To\n * differentiate between all these attributes, p5.js uses the language of\n * \"destination rectangle\" (which corresponds to \"dx\", \"dy\", etc.) and \"source\n * image\" (which corresponds to \"sx\", \"sy\", etc.) below. Specifying the\n * \"source image\" dimensions can be useful when you want to display a\n * subsection of the source image instead of the whole thing.\n *\n * This element can also be used to draw images without distorting the original aspect ratio,\n * by adding 9th attribute, fit, which can either be COVER or CONTAIN.\n * CONTAIN, as the name suggests, contains the whole image within the specified destination box\n * without distorting the image ratio.\n * COVER covers the entire destination box.\n *\n *\n *\n * @element image\n * @attribute  {p5.Image|p5.Element|p5.Texture} img    the image to display\n * @attribute  {p5.Image|p5.Element|p5.Texture} img\n * @attribute  {Number}   dx     the x-coordinate of the destination\n *                           rectangle in which to draw the source image\n * @attribute  {Number}   dy     the y-coordinate of the destination\n *                           rectangle in which to draw the source image\n * @attribute  {Number}   dWidth  the width of the destination rectangle\n * @attribute  {Number}   dHeight the height of the destination rectangle\n * @attribute  {Number}   sx     the x-coordinate of the subsection of the source\n * image to draw into the destination rectangle\n * @attribute  {Number}   sy     the y-coordinate of the subsection of the source\n * image to draw into the destination rectangle\n * @attribute {Number}    [sWidth] the width of the subsection of the\n *                           source image to draw into the destination\n *                           rectangle\n * @attribute {Number}    [sHeight] the height of the subsection of the\n *                            source image to draw into the destination rectangle\n * @attribute {Constant} [fit] either CONTAIN or COVER\n * @attribute {Constant} [xAlign] either LEFT, RIGHT or CENTER default is CENTER\n * @attribute {Constant} [yAlign] either TOP, BOTTOM or CENTER default is CENTER\n */\nclass Image extends addXY(addWidthHeight(RenderedElement)) {\n  constructor() {\n    super([\n      \"img, x, y, [width], [height]\",\n      \"img, dx, dy, dWidth, dHeight, sx, sy, [sWidth], [sHeight]\",\n    ]);\n  }\n  /**\n   * Sets the fill value for displaying images. Images can be tinted to\n   * specified colors or made transparent by including an alpha value.\n   *\n   * To apply transparency to an image without affecting its color, use\n   * white as the tint color and specify an alpha value. For instance,\n   * tint(255, 128) will make an image 50% transparent (assuming the default\n   * alpha range of 0-255, which can be changed with color_mode.\n   *\n   * The value for the gray parameter must be less than or equal to the current\n   * maximum value as specified by color_mode. The default maximum value is\n   * 255.\n   *\n   * @type {p5.Color}\n   */\n  get tint() {\n    return this.pInst.color(this.pInst._renderer._tint);\n  }\n  set tint(val) {\n    if (val === this.pInst.NONE) this.pInst.noTint();\n    else this.pInst.tint(...arguments);\n  }\n}\ncustomElements.define(\"p-image\", Image);\n\ndefineRendererGetterSetters(\"imageMode\");\n\ndefineProperties({\n  canvas_pixels: {\n    get: function () {\n      this.loadPixels();\n      return this.pixels;\n    },\n    set: function (px) {\n      this.pixels = px;\n      this.updatePixels();\n    },\n  },\n});\n","import { defineProperties, defineSnakeAlias } from \"../utils/p5Modifiers\";\n\ndefineSnakeAlias(\"createWriter\");\n\ndefineProperties({\n  http_post: {\n    set: function () {\n      this.httpPost(...arguments);\n    },\n  },\n  http_do: {\n    set: function () {\n      this.httpDo(...arguments);\n    },\n  },\n  save_file: {\n    set: function () {\n      this.save(...arguments);\n    },\n  },\n  save_json_file: {\n    set: function () {\n      this.saveJSON(...arguments);\n    },\n  },\n  save_strings_file: {\n    set: function () {\n      this.saveStrings(...arguments);\n    },\n  },\n  save_table_file: {\n    set: function () {\n      this.saveTable(...arguments);\n    },\n  },\n});\n","import {\n  defineRendererGetterSetters,\n  defineSnakeAlias,\n} from \"../utils/p5Modifiers\";\nimport { RenderedElement } from \"../core\";\nimport { addFillStroke } from \"../properties/color_props\";\n\ndefineRendererGetterSetters(\n  \"textAlign\",\n  \"textLeading\",\n  \"textSize\",\n  \"textStyle\",\n  \"textWrap\",\n  \"textFont\"\n);\n\ndefineSnakeAlias(\"textAscent\", \"textDescent\");\n\nclass Text extends addFillStroke(RenderedElement) {\n  constructor() {\n    super([\"content, x, y, [x2], [y2]\"]);\n  }\n}\ncustomElements.define(\"p-text\", Text);\n","import { RenderedElement } from \"../core\";\r\nimport { addXYZ, addWidthHeight } from \"../properties/shape_props\";\r\nimport { WebGLGeometry } from \"../properties/3d_props\";\r\n\r\nclass Normal extends addXYZ(RenderedElement) {\r\n  constructor() {\r\n    super([\"vector\", \"x, y, z\"]);\r\n  }\r\n}\r\ncustomElements.define(\"p-normal\", Normal);\r\n\r\nclass Plane extends addWidthHeight(WebGLGeometry) {\r\n  constructor() {\r\n    super(\"[width], [height], [detail_x], [detail_y]\");\r\n  }\r\n}\r\ncustomElements.define(\"p-plane\", Plane);\r\n\r\nclass Box extends addWidthHeight(WebGLGeometry) {\r\n  constructor() {\r\n    super([\"[width], [height], [depth], [detail_x], [detail_y]\"]);\r\n  }\r\n}\r\ncustomElements.define(\"p-box\", Box);\r\n\r\nclass Sphere extends WebGLGeometry {\r\n  constructor() {\r\n    super([\"[radius], [detail_x], [detail_y]\"]);\r\n  }\r\n}\r\ncustomElements.define(\"p-sphere\", Sphere);\r\n\r\nclass Cylinder extends WebGLGeometry {\r\n  constructor() {\r\n    super([\r\n      \"[radius], [height], [detail_x], [detail_y], [bottomCap], [topCap]\",\r\n    ]);\r\n  }\r\n}\r\ncustomElements.define(\"p-cylinder\", Cylinder);\r\n\r\nclass Cone extends WebGLGeometry {\r\n  constructor() {\r\n    super([\"[radius], [height], [detail_x], [detail_y], [cap]\"]);\r\n  }\r\n}\r\ncustomElements.define(\"p-cone\", Cone);\r\n\r\nclass Ellipsoid extends WebGLGeometry {\r\n  constructor() {\r\n    super([\"[radius_x], [radius_y], [radius_z], [detail_x], [detail_y]\"]);\r\n  }\r\n}\r\ncustomElements.define(\"p-ellipsoid\", Ellipsoid);\r\n\r\nclass Torus extends WebGLGeometry {\r\n  constructor() {\r\n    super([\"[radius], [tubeRadius], [detailX], [detailY]\"]);\r\n  }\r\n}\r\ncustomElements.define(\"p-torus\", Torus);\r\n\r\n//  TODO - test when preload implemented\r\nclass LoadModel extends RenderedElement {\r\n  constructor() {\r\n    super([\r\n      \"path, normalize, [successCallback], [failureCallback], [fileType]\",\r\n      \"path, [successCallback], [failureCallback], [fileType]\",\r\n    ]);\r\n  }\r\n}\r\ncustomElements.define(\"p-load-model\", LoadModel);\r\n\r\nclass Model extends WebGLGeometry {\r\n  constructor() {\r\n    super([\"model\"]);\r\n  }\r\n}\r\ncustomElements.define(\"p-model\", Model);\r\n","import { RenderedElement } from \"../core\";\r\nimport { addFillStroke } from \"../properties/color_props\";\r\n\r\np5.prototype.DEFAULT = \"default\";\r\np5.prototype.AMBIENT = \"ambient\";\r\np5.prototype.SPECULAR = \"specular\";\r\np5.prototype.EMISSIVE = \"emissive\";\r\n\r\nexport class WebGLGeometry extends addFillStroke(RenderedElement) {\r\n  #ambient_material;\r\n  #emissive_material;\r\n  #shininess;\r\n  #specular_material;\r\n  #no_lights;\r\n  /**\r\n   * Sets the ambient color of the material.\r\n   *\r\n   * The ambient_material color is the color the object will reflect\r\n   * under **any** lighting.\r\n   *\r\n   * Consider an ambient_material with the color yellow (255, 255, 0).\r\n   * If the light emits the color white (255, 255, 255), then the object\r\n   * will appear yellow as it will reflect the red and green components\r\n   * of the light. If the light emits the color red (255, 0, 0), then\r\n   * the object will appear red as it will reflect the red component\r\n   * of the light. If the light emits the color blue (0, 0, 255),\r\n   * then the object will appear black, as there is no component of\r\n   * the light that it can reflect.\r\n   * @type {p5.Color}\r\n   */\r\n  get ambient_material() {\r\n    return this.#ambient_material;\r\n  }\r\n  set ambient_material(val) {\r\n    if (Array.isArray(val)) this.pInst.ambientMaterial(...val);\r\n    else this.pInst.ambientMaterial(val);\r\n    this.#ambient_material = this.pInst.color(val);\r\n  }\r\n  /**\r\n   * Sets the emissive color of the material.\r\n   *\r\n   * An emissive material will display the emissive color at\r\n   * full strength regardless of lighting. This can give the\r\n   * appearance that the object is glowing.\r\n   *\r\n   * Note, \"emissive\" is a misnomer in the sense that the material\r\n   * does not actually emit light that will affect surrounding objects.\r\n   *\r\n   * @type {p5.Color}\r\n   */\r\n  get emissive_material() {\r\n    return this.#emissive_material;\r\n  }\r\n  set emissive_material(val) {\r\n    if (Array.isArray(val)) this.pInst.emissiveMaterial(...val);\r\n    else this.pInst.emissiveMaterial(val);\r\n    this.#ambient_material = this.pInst.color(val);\r\n  }\r\n  /**\r\n   * Sets the current material as a normal material.\r\n   *\r\n   * A normal material is not affected by light. It is often used as\r\n   * a placeholder material when debugging.\r\n   *\r\n   * Surfaces facing the X-axis become red, those facing the Y-axis\r\n   * become green, and those facing the Z-axis become blue.\r\n   *\r\n   * @type {boolean}\r\n   */\r\n  get normal_material() {\r\n    return this.pInst._renderer.useNormalMaterial;\r\n  }\r\n  set normal_material(val) {\r\n    if (val) this.pInst.normalMaterial();\r\n  }\r\n  /**\r\n   * Sets the <a href=\"#/p5.Shader\">p5.Shader</a> object to\r\n   * be used to render subsequent shapes.\r\n   *\r\n   * Custom shaders can be created using the\r\n   * create_shader() method and\r\n   * ```<shader>``` element.\r\n   *\r\n   * Set shader=\"DEFAULT\" to restore the default shaders.\r\n   *\r\n   * Note, shaders can only be used in WEBGL mode.\r\n   * @type {p5.Shader}\r\n   */\r\n  get shader() {\r\n    return [\r\n      this.pInst._renderer.userStrokeShader,\r\n      this.pInst._renderer.userFillShader,\r\n    ];\r\n  }\r\n  set shader(val) {\r\n    const { pInst } = this;\r\n    if (val === pInst.DEFAULT) pInst.resetShader();\r\n    else pInst.shader(val);\r\n  }\r\n  /**\r\n   * Sets the amount of gloss (\"shininess\") of a\r\n   * specular_material.\r\n   *\r\n   * The default and minimum value is 1.\r\n   * @type {number}\r\n   * */\r\n  get shininess() {\r\n    return this.#shininess;\r\n  }\r\n  set shininess(val) {\r\n    this.pInst.shininess(val);\r\n    this.#shininess = val;\r\n  }\r\n  /**\r\n   * Sets the specular color of the material.\r\n   *\r\n   * A specular material is reflective (shiny). The shininess can be\r\n   * controlled by the shininess property.\r\n   *\r\n   * Like ambient_material,\r\n   * the specular_material color is the color the object will reflect\r\n   * under ```<ambient-light>```.\r\n   * However unlike ambient_material, for all other types of lights\r\n   * ```<directional-light>```,\r\n   * ```<point-light>```,\r\n   * ```spot-light>```,\r\n   * a specular material will reflect the **color of the light source**.\r\n   * This is what gives it its \"shiny\" appearance.\r\n   *\r\n   * @type {p5.Color}\r\n   */\r\n  get specular_material() {\r\n    return this.#specular_material;\r\n  }\r\n  set specular_material(val) {\r\n    if (Array.isArray(val)) this.pInst.specularMaterial(...val);\r\n    else this.pInst.specularMaterial(val);\r\n    this.#specular_material = this.pInst.color(val);\r\n  }\r\n  /**\r\n   * Sets the texture that will be used to render subsequent shapes.\r\n   *\r\n   * A texture is like a \"skin\" that wraps around a 3D geometry. Currently\r\n   * supported textures are images, video, and offscreen renders.\r\n   *\r\n   * To texture a geometry created by a ```<shape>``` element,\r\n   * you will need to specify uv coordinates in ```<vertex>``` element.\r\n   *\r\n   * Note, texture can only be used in WEBGL mode.\r\n   *\r\n   * @type {p5.Image|p5.MediaElement|p5.Graphics|p5.Texture}\r\n   */\r\n  get texture() {\r\n    return this.pInst._renderer._tex;\r\n  }\r\n  set texture(val) {\r\n    this.pInst.texture(val);\r\n  }\r\n  /**\r\n   * Sets the coordinate space for texture mapping. The default mode is IMAGE\r\n   * which refers to the actual coordinates of the image.\r\n   * NORMAL refers to a normalized space of values ranging from 0 to 1.\r\n   *\r\n   * With IMAGE, if an image is 100×200 pixels, mapping the image onto the\r\n   * entire\r\n   * size of a quad would require the points (0,0) (100, 0) (100,200) (0,200).\r\n   * The same mapping in NORMAL is (0,0) (1,0) (1,1) (0,1).\r\n   *\r\n   * @type {IMAGE|NORMAL}\r\n   */\r\n  get texture_mode() {\r\n    return this.pInst._renderer.textureMode;\r\n  }\r\n  set texture_mode(val) {\r\n    this.pInst.textureMode(val);\r\n  }\r\n  /**\r\n   * Sets the global texture wrapping mode. This controls how textures behave\r\n   * when their uv's go outside of the 0 to 1 range. There are three options:\r\n   * CLAMP, REPEAT, and MIRROR.\r\n   *\r\n   * CLAMP causes the pixels at the edge of the texture to extend to the bounds.\r\n   * REPEAT causes the texture to tile repeatedly until reaching the bounds.\r\n   * MIRROR works similarly to REPEAT but it flips the texture with every new tile.\r\n   *\r\n   * REPEAT & MIRROR are only available if the texture\r\n   * is a power of two size (128, 256, 512, 1024, etc.).\r\n   *\r\n   * This method will affect all textures in your sketch until another element\r\n   * sets texture_mode.\r\n   *\r\n   * If only one value is provided, it will be applied to both the\r\n   * horizontal and vertical axes.\r\n   * @type {[CLAMP|REPEAT|MIRROR, CLAMP|REPEAT|MIRROR]}\r\n   */\r\n  get texture_wrap() {\r\n    return [\r\n      this.pInst._renderer.textureWrapX,\r\n      this.pInst._renderer.textureWrapY,\r\n    ];\r\n  }\r\n  set texture_wrap(val) {\r\n    if (Array.isArray(val)) this.pInst.textureWrap(...val);\r\n    else this.pInst.textureWrap(val);\r\n  }\r\n  /**\r\n   * Removes all lights present in a sketch.\r\n   *\r\n   * All subsequent geometry is rendered without lighting (until a new\r\n   * light is created with a lighting element (\r\n   * ```<lights>```,\r\n   * ```<ambient-light>```,\r\n   * ```<directional-light>```,\r\n   * ```<point-light>```,\r\n   * ```<spot-light>```).\r\n   * @type {boolean}\r\n   */\r\n  get no_lights() {\r\n    return this.#no_lights;\r\n  }\r\n  set no_lights(val) {\r\n    this.#no_lights = val;\r\n    if (val == true) this.pInst.noLights();\r\n  }\r\n}\r\n\r\nexport class WebGLLight extends RenderedElement {\r\n  draw(inherited) {\r\n    //  Set no_lights to false so that children won't delete this light\r\n    super.draw({ ...inherited, ...{ no_lights: false } });\r\n  }\r\n}\r\n\r\nexport const addSpecularColor = (baseClass) =>\r\n  class extends baseClass {\r\n    #specular_color;\r\n    /**\r\n     * Sets the color of the specular highlight of a non-ambient light\r\n     * (i.e. all lights except ```<ambient-light>```).\r\n     *\r\n     * specular_color affects only the lights which are created by\r\n     * this element or its children\r\n     *\r\n     * This property is used in combination with\r\n     * <a href=\"#/p5/specularMaterial\">specularMaterial()</a>.\r\n     * If a geometry does not use specular_material, this property\r\n     * will have no effect.\r\n     *\r\n     * The default color is white (255, 255, 255), which is used if\r\n     * specular_color is not explicitly set.\r\n     *\r\n     * Note: specular_color is equivalent to the Processing function\r\n     * <a href=\"https://processing.org/reference/lightSpecular_.\r\n     * html\">lightSpecular</a>.\r\n     *\r\n     * @type {p5.Color}\r\n     */\r\n    get specular_color() {\r\n      return this.#specular_color;\r\n    }\r\n    set specular_color(val) {\r\n      const { pInst } = this;\r\n      const c = Array.isArray(val) ? pInst.color(...val) : pInst.color(val);\r\n      pInst.specularColor(c);\r\n      this.#specular_color = c;\r\n    }\r\n  };\r\n\r\nexport const addLightFalloff = (baseClass) =>\r\n  class extends baseClass {\r\n    #light_falloff;\r\n    /**\r\n     * Sets the falloff rate for ```<point-light>```\r\n     * and ```<spot-light>```.\r\n     *\r\n     * light_falloff affects only this element and its children.\r\n     *\r\n     * The values are `constant`, `linear`, an `quadratic` and are used to calculate falloff as follows:\r\n     *\r\n     * d = distance from light position to vertex position\r\n     *\r\n     * falloff = 1 / (CONSTANT + d \\* LINEAR + (d \\* d) \\* QUADRATIC)\r\n     * @type {[number, number, number]}\r\n     */\r\n    get light_falloff() {\r\n      return this.#light_falloff;\r\n    }\r\n    set light_falloff([constant, linear, quadratic]) {\r\n      const { pInst } = this;\r\n      pInst.lightFalloff(constant, linear, quadratic);\r\n      this.#light_falloff = [\r\n        pInst._renderer.constantAttenuation,\r\n        pInst._renderer.linearAttenuation,\r\n        pInst._renderer.quadraticAttenuation,\r\n      ];\r\n    }\r\n  };\r\n","import {\r\n  WebGLLight,\r\n  addLightFalloff,\r\n  addSpecularColor,\r\n} from \"../properties/3d_props\";\r\n\r\n/**\r\n * Creates an ambient light with the given color.\r\n *\r\n * Ambient light does not come from a specific direction.\r\n * Objects are evenly lit from all sides. Ambient lights are\r\n * almost always used in combination with other types of lights.\r\n * @element ambient-light\r\n * @attribute {Number}   v1     red or hue value relative to the current color\r\n *                                range\r\n * @attribute {Number}   v2     green or saturation value relative to the\r\n *                                current color range\r\n * @attribute {Number}   v3     blue or brightness value relative to the current\r\n *                                color range\r\n * @attribute {Number}   alpha  alpha value relative to current color range\r\n *                                (default is 0-255)\r\n * @attribute {Number}   gray   number specifying value between\r\n *                                white and black\r\n * @attribute {String}   value  a color string\r\n * @attribute {Number[]} values an array containing the red,green,blue &\r\n *                                 and alpha components of the color\r\n * @attribute {p5.Color} color  color as a <a\r\n *                                 href=\"https://p5js.org/reference/#/p5.Color\"\r\n *                                 target=\"_blank\">p5.Color</a>\r\n */\r\nclass AmbientLight extends WebGLLight {\r\n  constructor() {\r\n    super([\"v1, v2, v3, [alpha]\", \"gray, [alpha]\", \"value\", \"values\", \"color\"]);\r\n  }\r\n}\r\ncustomElements.define(\"p-ambient-light\", AmbientLight);\r\n\r\n/**\r\n * Creates a directional light with the given color and direction.\r\n *\r\n * Directional light comes from one direction.\r\n * The direction is specified as numbers inclusively between -1 and 1.\r\n * For example, setting the direction as (0, -1, 0) will cause the\r\n * geometry to be lit from below (since the light will be facing\r\n * directly upwards). Similarly, setting the direction as (1, 0, 0)\r\n * will cause the geometry to be lit from the left (since the light\r\n * will be facing directly rightwards).\r\n *\r\n * Directional lights do not have a specific point of origin, and\r\n * therefore cannot be positioned closer or farther away from a geometry.\r\n *\r\n * A maximum of **5** directional lights can be active at once.\r\n * @element    directional-light\r\n * @attribute  {Number}   v1     red or hue value relative to the current color\r\n *                                range\r\n * @attribute  {Number}   v2     green or saturation value relative to the\r\n *                                current color range\r\n * @attribute  {Number}   v3     blue or brightness value relative to the\r\n *                                current color range\r\n * @attribute  {Number}   x      x component of direction (inclusive range of\r\n *                                -1 to 1)\r\n * @attribute  {Number}   y      y component of direction (inclusive range of\r\n *                                -1 to 1)\r\n * @attribute  {Number}   z      z component of direction (inclusive range of\r\n *                                -1 to 1)\r\n * @attribute  {p5.Vector} direction  direction of light as a <a\r\n *                             href=\"https://p5js.org/reference/#/p5.Vector\"\r\n *                             >p5.Vector</a>\r\n * @attribute {p5.Color} color  color as a <a\r\n *                                 href=\"https://p5js.org/reference/#/p5.Color\"\r\n *                                 target=\"_blank\">p5.Color</a>\r\n */\r\nclass DirectionalLight extends addSpecularColor(WebGLLight) {\r\n  constructor() {\r\n    super([\r\n      \"v1, v2, v3, x, y, z\",\r\n      \"v1, v2, v3, direction\",\r\n      \"color, x, y, z\",\r\n      \"color, direction\",\r\n    ]);\r\n  }\r\n}\r\ncustomElements.define(\"p-directional-light\", DirectionalLight);\r\n\r\n/**\r\n * Creates a point light with the given color and position.\r\n *\r\n * A point light emits light from a single point in all directions.\r\n * Because the light is emitted from a specific point (position),\r\n * it has a different effect when it is positioned farther vs. nearer\r\n * an object.\r\n *\r\n * A maximum of **5** point lights can be active at once.\r\n *\r\n * @attribute  {Number}   v1   red or hue value relative to the current color\r\n *                                range\r\n * @attribute  {Number}   v2   green or saturation value relative to the\r\n *                                current color range\r\n * @attribute  {Number}   v3   blue or brightness value relative to the\r\n *                                current color range\r\n * @attribute  {Number}    x   x component of position\r\n * @attribute  {Number}    y   y component of position\r\n * @attribute  {Number}    z   z component of position\r\n * @attribute  {p5.Vector}  position position of light as a <a\r\n *                            href=\"https://p5js.org/reference/#/p5.Vector\"\r\n *                            >p5.Vector</a>\r\n * @attribute  {p5.Color|Number[]|String} color  color as a <a\r\n *                href=\"https://p5js.org/reference/#/p5.Color\">p5.Color</a>,\r\n *                as an array, or as a CSS string\r\n */\r\nclass PointLight extends addLightFalloff(addSpecularColor(WebGLLight)) {\r\n  constructor() {\r\n    super([\r\n      \"v1, v2, v3, x, y, z\",\r\n      \"v1, v2, v3, position\",\r\n      \"color, x, y, z\",\r\n      \"color, position\",\r\n    ]);\r\n  }\r\n}\r\ncustomElements.define(\"p-point-light\", PointLight);\r\n\r\n/**\r\n * Places an ambient and directional light in the scene.\r\n * The lights are set to <ambient-light v1=\"128\" v2=\"128\" v3=\"128\"> and\r\n * <directional-light v1=\"128\" v2=\"128\" v3'=\"128\" x=\"0\" y=\"0\" z=\"-1\">.\r\n * @element lights\r\n */\r\nclass Lights extends addSpecularColor(WebGLLight) {\r\n  constructor() {\r\n    super([\"\"]);\r\n  }\r\n}\r\ncustomElements.define(\"p-lights\", Lights);\r\n\r\n/**\r\n * Creates a spot light with the given color, position,\r\n * light direction, angle, and concentration.\r\n *\r\n * Like a ```<point-light>```, a ```<spot-light>```\r\n * emits light from a specific point (position). It has a different effect\r\n * when it is positioned farther vs. nearer an object.\r\n *\r\n * However, unlike a ```<point-light>```, the light is emitted in **one\r\n * direction**\r\n * along a conical shape. The shape of the cone can be controlled using\r\n * the `angle` and `concentration` parameters.\r\n *\r\n * The `angle` parameter is used to\r\n * determine the radius of the cone. And the `concentration`\r\n * parameter is used to focus the light towards the center of\r\n * the cone. Both parameters are optional, however if you want\r\n * to specify `concentration`, you must also specify `angle`.\r\n * The minimum concentration value is 1.\r\n *\r\n * A maximum of **5** spot lights can be active at once.\r\n *\r\n * @element spot-light\r\n * @attribute  {Number}    v1             red or hue value relative to the\r\n *                                            current color range\r\n * @attribute  {Number}    v2             green or saturation value relative\r\n *                                            to the current color range\r\n * @attribute  {Number}    v3             blue or brightness value relative\r\n *                                            to the current color range\r\n * @attribute  {Number}    x              x component of position\r\n * @attribute  {Number}    y              y component of position\r\n * @attribute  {Number}    z              z component of position\r\n * @attribute  {Number}    rx             x component of light direction\r\n *                                            (inclusive range of -1 to 1)\r\n * @attribute  {Number}    ry             y component of light direction\r\n *                                            (inclusive range of -1 to 1)\r\n * @attribute  {Number}    rz             z component of light direction\r\n *                                            (inclusive range of -1 to 1)\r\n * @attribute  {Number}    angle          angle of cone. Defaults to PI/3\r\n * @attribute  {Number}    concentration  concentration of cone. Defaults to\r\n *                                            100\r\n */\r\nclass SpotLight extends addLightFalloff(addSpecularColor(WebGLLight)) {\r\n  constructor() {\r\n    super([\r\n      \"v1, v2, v3, x, y, z, rx, ry, rz, [angle], [concentration]\",\r\n      \"color, position, direction, [angle], [concentration]\",\r\n      \"v1, v2, v3, position, direction, [angle], [concentration]\",\r\n      \"color, x, y, z, direction, [angle], [concentration]\",\r\n      \"color, position, rx, ry, rz, [angle], [concentration]\",\r\n      \"v1, v2, v3, x, y, z, direction, [angle], [concentration]\",\r\n      \"v1, v2, v3, position, rx, ry, rz, [angle], [concentration]\",\r\n      \"color, x, y, z, rx, ry, rz, [angle], [concentration]\",\r\n    ]);\r\n  }\r\n}\r\ncustomElements.define(\"p-spot-light\", SpotLight);\r\n"],"names":[],"version":3,"file":"p5.marker.js.map","sourceRoot":"../"}